// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#include "messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_messages_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Request_CloseSessionRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Request_CreateSessionRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Request_ExchangeReportRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Request_GetLaunchTokenRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Request_GetPsCapRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Request_GetQuoteRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Request_GetWhiteListRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Request_GetWhiteListSizeRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Request_InitQuoteRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Request_InvokeServiceRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Request_ReportAttestationErrorRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Request_SGXGetExtendedEpidGroupIdRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Request_SGXRegisterRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Request_SGXSwitchExtendedEpidGroupRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Response_CloseSessionResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Response_CreateSessionResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Response_ExchangeReportResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Response_GetLaunchTokenResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Response_GetPsCapResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Response_GetQuoteResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Response_GetWhiteListResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Response_GetWhiteListSizeResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Response_InitQuoteResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Response_InvokeServiceResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Response_ReportAttestationErrorResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Response_SGXGetExtendedEpidGroupIdResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Response_SGXRegisterResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Response_SGXSwitchExtendedEpidGroupResponse;
}  // namespace protobuf_messages_2eproto
namespace aesm {
namespace message {
class Request_InitQuoteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request_InitQuoteRequest>
      _instance;
} _Request_InitQuoteRequest_default_instance_;
class Request_GetQuoteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request_GetQuoteRequest>
      _instance;
} _Request_GetQuoteRequest_default_instance_;
class Request_GetLaunchTokenRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request_GetLaunchTokenRequest>
      _instance;
} _Request_GetLaunchTokenRequest_default_instance_;
class Request_ReportAttestationErrorRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request_ReportAttestationErrorRequest>
      _instance;
} _Request_ReportAttestationErrorRequest_default_instance_;
class Request_CreateSessionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request_CreateSessionRequest>
      _instance;
} _Request_CreateSessionRequest_default_instance_;
class Request_InvokeServiceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request_InvokeServiceRequest>
      _instance;
} _Request_InvokeServiceRequest_default_instance_;
class Request_ExchangeReportRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request_ExchangeReportRequest>
      _instance;
} _Request_ExchangeReportRequest_default_instance_;
class Request_CloseSessionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request_CloseSessionRequest>
      _instance;
} _Request_CloseSessionRequest_default_instance_;
class Request_GetPsCapRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request_GetPsCapRequest>
      _instance;
} _Request_GetPsCapRequest_default_instance_;
class Request_GetWhiteListSizeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request_GetWhiteListSizeRequest>
      _instance;
} _Request_GetWhiteListSizeRequest_default_instance_;
class Request_GetWhiteListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request_GetWhiteListRequest>
      _instance;
} _Request_GetWhiteListRequest_default_instance_;
class Request_SGXGetExtendedEpidGroupIdRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request_SGXGetExtendedEpidGroupIdRequest>
      _instance;
} _Request_SGXGetExtendedEpidGroupIdRequest_default_instance_;
class Request_SGXSwitchExtendedEpidGroupRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request_SGXSwitchExtendedEpidGroupRequest>
      _instance;
} _Request_SGXSwitchExtendedEpidGroupRequest_default_instance_;
class Request_SGXRegisterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request_SGXRegisterRequest>
      _instance;
} _Request_SGXRegisterRequest_default_instance_;
class RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request>
      _instance;
} _Request_default_instance_;
class Response_InitQuoteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response_InitQuoteResponse>
      _instance;
} _Response_InitQuoteResponse_default_instance_;
class Response_GetQuoteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response_GetQuoteResponse>
      _instance;
} _Response_GetQuoteResponse_default_instance_;
class Response_GetLaunchTokenResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response_GetLaunchTokenResponse>
      _instance;
} _Response_GetLaunchTokenResponse_default_instance_;
class Response_ReportAttestationErrorResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response_ReportAttestationErrorResponse>
      _instance;
} _Response_ReportAttestationErrorResponse_default_instance_;
class Response_CreateSessionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response_CreateSessionResponse>
      _instance;
} _Response_CreateSessionResponse_default_instance_;
class Response_InvokeServiceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response_InvokeServiceResponse>
      _instance;
} _Response_InvokeServiceResponse_default_instance_;
class Response_ExchangeReportResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response_ExchangeReportResponse>
      _instance;
} _Response_ExchangeReportResponse_default_instance_;
class Response_CloseSessionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response_CloseSessionResponse>
      _instance;
} _Response_CloseSessionResponse_default_instance_;
class Response_GetPsCapResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response_GetPsCapResponse>
      _instance;
} _Response_GetPsCapResponse_default_instance_;
class Response_GetWhiteListSizeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response_GetWhiteListSizeResponse>
      _instance;
} _Response_GetWhiteListSizeResponse_default_instance_;
class Response_GetWhiteListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response_GetWhiteListResponse>
      _instance;
} _Response_GetWhiteListResponse_default_instance_;
class Response_SGXGetExtendedEpidGroupIdResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response_SGXGetExtendedEpidGroupIdResponse>
      _instance;
} _Response_SGXGetExtendedEpidGroupIdResponse_default_instance_;
class Response_SGXSwitchExtendedEpidGroupResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response_SGXSwitchExtendedEpidGroupResponse>
      _instance;
} _Response_SGXSwitchExtendedEpidGroupResponse_default_instance_;
class Response_SGXRegisterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response_SGXRegisterResponse>
      _instance;
} _Response_SGXRegisterResponse_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response>
      _instance;
} _Response_default_instance_;
}  // namespace message
}  // namespace aesm
namespace protobuf_messages_2eproto {
static void InitDefaultsRequest_InitQuoteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Request_InitQuoteRequest_default_instance_;
    new (ptr) ::aesm::message::Request_InitQuoteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Request_InitQuoteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Request_InitQuoteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequest_InitQuoteRequest}, {}};

static void InitDefaultsRequest_GetQuoteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Request_GetQuoteRequest_default_instance_;
    new (ptr) ::aesm::message::Request_GetQuoteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Request_GetQuoteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Request_GetQuoteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequest_GetQuoteRequest}, {}};

static void InitDefaultsRequest_GetLaunchTokenRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Request_GetLaunchTokenRequest_default_instance_;
    new (ptr) ::aesm::message::Request_GetLaunchTokenRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Request_GetLaunchTokenRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Request_GetLaunchTokenRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequest_GetLaunchTokenRequest}, {}};

static void InitDefaultsRequest_ReportAttestationErrorRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Request_ReportAttestationErrorRequest_default_instance_;
    new (ptr) ::aesm::message::Request_ReportAttestationErrorRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Request_ReportAttestationErrorRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Request_ReportAttestationErrorRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequest_ReportAttestationErrorRequest}, {}};

static void InitDefaultsRequest_CreateSessionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Request_CreateSessionRequest_default_instance_;
    new (ptr) ::aesm::message::Request_CreateSessionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Request_CreateSessionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Request_CreateSessionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequest_CreateSessionRequest}, {}};

static void InitDefaultsRequest_InvokeServiceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Request_InvokeServiceRequest_default_instance_;
    new (ptr) ::aesm::message::Request_InvokeServiceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Request_InvokeServiceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Request_InvokeServiceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequest_InvokeServiceRequest}, {}};

static void InitDefaultsRequest_ExchangeReportRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Request_ExchangeReportRequest_default_instance_;
    new (ptr) ::aesm::message::Request_ExchangeReportRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Request_ExchangeReportRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Request_ExchangeReportRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequest_ExchangeReportRequest}, {}};

static void InitDefaultsRequest_CloseSessionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Request_CloseSessionRequest_default_instance_;
    new (ptr) ::aesm::message::Request_CloseSessionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Request_CloseSessionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Request_CloseSessionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequest_CloseSessionRequest}, {}};

static void InitDefaultsRequest_GetPsCapRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Request_GetPsCapRequest_default_instance_;
    new (ptr) ::aesm::message::Request_GetPsCapRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Request_GetPsCapRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Request_GetPsCapRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequest_GetPsCapRequest}, {}};

static void InitDefaultsRequest_GetWhiteListSizeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Request_GetWhiteListSizeRequest_default_instance_;
    new (ptr) ::aesm::message::Request_GetWhiteListSizeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Request_GetWhiteListSizeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Request_GetWhiteListSizeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequest_GetWhiteListSizeRequest}, {}};

static void InitDefaultsRequest_GetWhiteListRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Request_GetWhiteListRequest_default_instance_;
    new (ptr) ::aesm::message::Request_GetWhiteListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Request_GetWhiteListRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Request_GetWhiteListRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequest_GetWhiteListRequest}, {}};

static void InitDefaultsRequest_SGXGetExtendedEpidGroupIdRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Request_SGXGetExtendedEpidGroupIdRequest_default_instance_;
    new (ptr) ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Request_SGXGetExtendedEpidGroupIdRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequest_SGXGetExtendedEpidGroupIdRequest}, {}};

static void InitDefaultsRequest_SGXSwitchExtendedEpidGroupRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Request_SGXSwitchExtendedEpidGroupRequest_default_instance_;
    new (ptr) ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Request_SGXSwitchExtendedEpidGroupRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequest_SGXSwitchExtendedEpidGroupRequest}, {}};

static void InitDefaultsRequest_SGXRegisterRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Request_SGXRegisterRequest_default_instance_;
    new (ptr) ::aesm::message::Request_SGXRegisterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Request_SGXRegisterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Request_SGXRegisterRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequest_SGXRegisterRequest}, {}};

static void InitDefaultsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Request_default_instance_;
    new (ptr) ::aesm::message::Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<14> scc_info_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 14, InitDefaultsRequest}, {
      &protobuf_messages_2eproto::scc_info_Request_InitQuoteRequest.base,
      &protobuf_messages_2eproto::scc_info_Request_GetQuoteRequest.base,
      &protobuf_messages_2eproto::scc_info_Request_GetLaunchTokenRequest.base,
      &protobuf_messages_2eproto::scc_info_Request_ReportAttestationErrorRequest.base,
      &protobuf_messages_2eproto::scc_info_Request_CreateSessionRequest.base,
      &protobuf_messages_2eproto::scc_info_Request_InvokeServiceRequest.base,
      &protobuf_messages_2eproto::scc_info_Request_ExchangeReportRequest.base,
      &protobuf_messages_2eproto::scc_info_Request_CloseSessionRequest.base,
      &protobuf_messages_2eproto::scc_info_Request_GetPsCapRequest.base,
      &protobuf_messages_2eproto::scc_info_Request_GetWhiteListSizeRequest.base,
      &protobuf_messages_2eproto::scc_info_Request_GetWhiteListRequest.base,
      &protobuf_messages_2eproto::scc_info_Request_SGXGetExtendedEpidGroupIdRequest.base,
      &protobuf_messages_2eproto::scc_info_Request_SGXSwitchExtendedEpidGroupRequest.base,
      &protobuf_messages_2eproto::scc_info_Request_SGXRegisterRequest.base,}};

static void InitDefaultsResponse_InitQuoteResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Response_InitQuoteResponse_default_instance_;
    new (ptr) ::aesm::message::Response_InitQuoteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Response_InitQuoteResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Response_InitQuoteResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponse_InitQuoteResponse}, {}};

static void InitDefaultsResponse_GetQuoteResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Response_GetQuoteResponse_default_instance_;
    new (ptr) ::aesm::message::Response_GetQuoteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Response_GetQuoteResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Response_GetQuoteResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponse_GetQuoteResponse}, {}};

static void InitDefaultsResponse_GetLaunchTokenResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Response_GetLaunchTokenResponse_default_instance_;
    new (ptr) ::aesm::message::Response_GetLaunchTokenResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Response_GetLaunchTokenResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Response_GetLaunchTokenResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponse_GetLaunchTokenResponse}, {}};

static void InitDefaultsResponse_ReportAttestationErrorResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Response_ReportAttestationErrorResponse_default_instance_;
    new (ptr) ::aesm::message::Response_ReportAttestationErrorResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Response_ReportAttestationErrorResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Response_ReportAttestationErrorResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponse_ReportAttestationErrorResponse}, {}};

static void InitDefaultsResponse_CreateSessionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Response_CreateSessionResponse_default_instance_;
    new (ptr) ::aesm::message::Response_CreateSessionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Response_CreateSessionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Response_CreateSessionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponse_CreateSessionResponse}, {}};

static void InitDefaultsResponse_InvokeServiceResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Response_InvokeServiceResponse_default_instance_;
    new (ptr) ::aesm::message::Response_InvokeServiceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Response_InvokeServiceResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Response_InvokeServiceResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponse_InvokeServiceResponse}, {}};

static void InitDefaultsResponse_ExchangeReportResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Response_ExchangeReportResponse_default_instance_;
    new (ptr) ::aesm::message::Response_ExchangeReportResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Response_ExchangeReportResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Response_ExchangeReportResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponse_ExchangeReportResponse}, {}};

static void InitDefaultsResponse_CloseSessionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Response_CloseSessionResponse_default_instance_;
    new (ptr) ::aesm::message::Response_CloseSessionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Response_CloseSessionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Response_CloseSessionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponse_CloseSessionResponse}, {}};

static void InitDefaultsResponse_GetPsCapResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Response_GetPsCapResponse_default_instance_;
    new (ptr) ::aesm::message::Response_GetPsCapResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Response_GetPsCapResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Response_GetPsCapResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponse_GetPsCapResponse}, {}};

static void InitDefaultsResponse_GetWhiteListSizeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Response_GetWhiteListSizeResponse_default_instance_;
    new (ptr) ::aesm::message::Response_GetWhiteListSizeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Response_GetWhiteListSizeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Response_GetWhiteListSizeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponse_GetWhiteListSizeResponse}, {}};

static void InitDefaultsResponse_GetWhiteListResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Response_GetWhiteListResponse_default_instance_;
    new (ptr) ::aesm::message::Response_GetWhiteListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Response_GetWhiteListResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Response_GetWhiteListResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponse_GetWhiteListResponse}, {}};

static void InitDefaultsResponse_SGXGetExtendedEpidGroupIdResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Response_SGXGetExtendedEpidGroupIdResponse_default_instance_;
    new (ptr) ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Response_SGXGetExtendedEpidGroupIdResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponse_SGXGetExtendedEpidGroupIdResponse}, {}};

static void InitDefaultsResponse_SGXSwitchExtendedEpidGroupResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Response_SGXSwitchExtendedEpidGroupResponse_default_instance_;
    new (ptr) ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Response_SGXSwitchExtendedEpidGroupResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponse_SGXSwitchExtendedEpidGroupResponse}, {}};

static void InitDefaultsResponse_SGXRegisterResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Response_SGXRegisterResponse_default_instance_;
    new (ptr) ::aesm::message::Response_SGXRegisterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Response_SGXRegisterResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Response_SGXRegisterResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponse_SGXRegisterResponse}, {}};

static void InitDefaultsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::aesm::message::_Response_default_instance_;
    new (ptr) ::aesm::message::Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::aesm::message::Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<14> scc_info_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 14, InitDefaultsResponse}, {
      &protobuf_messages_2eproto::scc_info_Response_InitQuoteResponse.base,
      &protobuf_messages_2eproto::scc_info_Response_GetQuoteResponse.base,
      &protobuf_messages_2eproto::scc_info_Response_GetLaunchTokenResponse.base,
      &protobuf_messages_2eproto::scc_info_Response_ReportAttestationErrorResponse.base,
      &protobuf_messages_2eproto::scc_info_Response_CreateSessionResponse.base,
      &protobuf_messages_2eproto::scc_info_Response_InvokeServiceResponse.base,
      &protobuf_messages_2eproto::scc_info_Response_ExchangeReportResponse.base,
      &protobuf_messages_2eproto::scc_info_Response_CloseSessionResponse.base,
      &protobuf_messages_2eproto::scc_info_Response_GetPsCapResponse.base,
      &protobuf_messages_2eproto::scc_info_Response_GetWhiteListSizeResponse.base,
      &protobuf_messages_2eproto::scc_info_Response_GetWhiteListResponse.base,
      &protobuf_messages_2eproto::scc_info_Response_SGXGetExtendedEpidGroupIdResponse.base,
      &protobuf_messages_2eproto::scc_info_Response_SGXSwitchExtendedEpidGroupResponse.base,
      &protobuf_messages_2eproto::scc_info_Response_SGXRegisterResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Request_InitQuoteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request_GetQuoteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request_GetLaunchTokenRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request_ReportAttestationErrorRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request_CreateSessionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request_InvokeServiceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request_ExchangeReportRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request_CloseSessionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request_GetPsCapRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request_GetWhiteListSizeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request_GetWhiteListRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request_SGXGetExtendedEpidGroupIdRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request_SGXSwitchExtendedEpidGroupRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request_SGXRegisterRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response_InitQuoteResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response_GetQuoteResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response_GetLaunchTokenResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response_ReportAttestationErrorResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response_CreateSessionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response_InvokeServiceResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response_ExchangeReportResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response_CloseSessionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response_GetPsCapResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response_GetWhiteListSizeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response_GetWhiteListResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response_SGXGetExtendedEpidGroupIdResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response_SGXSwitchExtendedEpidGroupResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response_SGXRegisterResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response.base);
}

::google::protobuf::Metadata file_level_metadata[30];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_InitQuoteRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_InitQuoteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_InitQuoteRequest, timeout_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetQuoteRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetQuoteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetQuoteRequest, report_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetQuoteRequest, quote_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetQuoteRequest, spid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetQuoteRequest, nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetQuoteRequest, sig_rl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetQuoteRequest, buf_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetQuoteRequest, qe_report_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetQuoteRequest, timeout_),
  0,
  4,
  1,
  2,
  3,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetLaunchTokenRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetLaunchTokenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetLaunchTokenRequest, mr_enclave_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetLaunchTokenRequest, mr_signer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetLaunchTokenRequest, se_attributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetLaunchTokenRequest, timeout_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_ReportAttestationErrorRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_ReportAttestationErrorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_ReportAttestationErrorRequest, platform_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_ReportAttestationErrorRequest, attestation_error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_ReportAttestationErrorRequest, update_info_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_ReportAttestationErrorRequest, timeout_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_CreateSessionRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_CreateSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_CreateSessionRequest, dh_msg1_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_CreateSessionRequest, timeout_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_InvokeServiceRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_InvokeServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_InvokeServiceRequest, pse_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_InvokeServiceRequest, pse_resp_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_InvokeServiceRequest, timeout_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_ExchangeReportRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_ExchangeReportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_ExchangeReportRequest, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_ExchangeReportRequest, se_dh_msg2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_ExchangeReportRequest, se_dh_msg3_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_ExchangeReportRequest, timeout_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_CloseSessionRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_CloseSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_CloseSessionRequest, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_CloseSessionRequest, timeout_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetPsCapRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetPsCapRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetPsCapRequest, timeout_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetWhiteListSizeRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetWhiteListSizeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetWhiteListSizeRequest, timeout_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetWhiteListRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetWhiteListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetWhiteListRequest, white_list_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_GetWhiteListRequest, timeout_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest, timeout_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest, x_group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest, timeout_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_SGXRegisterRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_SGXRegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_SGXRegisterRequest, buf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_SGXRegisterRequest, data_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request_SGXRegisterRequest, timeout_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request, initquotereq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request, getquotereq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request, getlictokenreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request, reporterrreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request, createsessionreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request, invokeservicereq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request, exchangereportreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request, closesessionreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request, getpscapreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request, getwhitelistsizereq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request, getwhitelistreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request, sgxgetextendedepidgroupidreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request, sgxswitchextendedepidgroupreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Request, sgxregisterreq_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_InitQuoteResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_InitQuoteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_InitQuoteResponse, errorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_InitQuoteResponse, targetinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_InitQuoteResponse, gid_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetQuoteResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetQuoteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetQuoteResponse, errorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetQuoteResponse, quote_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetQuoteResponse, qe_report_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetLaunchTokenResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetLaunchTokenResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetLaunchTokenResponse, errorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetLaunchTokenResponse, token_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_ReportAttestationErrorResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_ReportAttestationErrorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_ReportAttestationErrorResponse, errorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_ReportAttestationErrorResponse, platform_update_info_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_CreateSessionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_CreateSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_CreateSessionResponse, errorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_CreateSessionResponse, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_CreateSessionResponse, se_dh_msg1_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_InvokeServiceResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_InvokeServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_InvokeServiceResponse, errorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_InvokeServiceResponse, pse_message_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_ExchangeReportResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_ExchangeReportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_ExchangeReportResponse, errorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_ExchangeReportResponse, se_dh_msg3_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_CloseSessionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_CloseSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_CloseSessionResponse, errorcode_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetPsCapResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetPsCapResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetPsCapResponse, errorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetPsCapResponse, ps_cap_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetWhiteListSizeResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetWhiteListSizeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetWhiteListSizeResponse, errorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetWhiteListSizeResponse, white_list_size_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetWhiteListResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetWhiteListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetWhiteListResponse, errorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_GetWhiteListResponse, white_list_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse, errorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse, x_group_id_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse, errorcode_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_SGXRegisterResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_SGXRegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response_SGXRegisterResponse, errorcode_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response, initquoteres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response, getquoteres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response, getlictokenres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response, reporterrres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response, createsessionres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response, invokeserviceres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response, exchangereportres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response, closesessionres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response, getpscapres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response, getwhitelistsizeres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response, getwhitelistres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response, sgxgetextendedepidgroupidres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response, sgxswitchextendedepidgroupres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::aesm::message::Response, sgxregisterres_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::aesm::message::Request_InitQuoteRequest)},
  { 7, 20, sizeof(::aesm::message::Request_GetQuoteRequest)},
  { 28, 37, sizeof(::aesm::message::Request_GetLaunchTokenRequest)},
  { 41, 50, sizeof(::aesm::message::Request_ReportAttestationErrorRequest)},
  { 54, 61, sizeof(::aesm::message::Request_CreateSessionRequest)},
  { 63, 71, sizeof(::aesm::message::Request_InvokeServiceRequest)},
  { 74, 83, sizeof(::aesm::message::Request_ExchangeReportRequest)},
  { 87, 94, sizeof(::aesm::message::Request_CloseSessionRequest)},
  { 96, 102, sizeof(::aesm::message::Request_GetPsCapRequest)},
  { 103, 109, sizeof(::aesm::message::Request_GetWhiteListSizeRequest)},
  { 110, 117, sizeof(::aesm::message::Request_GetWhiteListRequest)},
  { 119, 125, sizeof(::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest)},
  { 126, 133, sizeof(::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest)},
  { 135, 143, sizeof(::aesm::message::Request_SGXRegisterRequest)},
  { 146, 165, sizeof(::aesm::message::Request)},
  { 179, 187, sizeof(::aesm::message::Response_InitQuoteResponse)},
  { 190, 198, sizeof(::aesm::message::Response_GetQuoteResponse)},
  { 201, 208, sizeof(::aesm::message::Response_GetLaunchTokenResponse)},
  { 210, 217, sizeof(::aesm::message::Response_ReportAttestationErrorResponse)},
  { 219, 227, sizeof(::aesm::message::Response_CreateSessionResponse)},
  { 230, 237, sizeof(::aesm::message::Response_InvokeServiceResponse)},
  { 239, 246, sizeof(::aesm::message::Response_ExchangeReportResponse)},
  { 248, 254, sizeof(::aesm::message::Response_CloseSessionResponse)},
  { 255, 262, sizeof(::aesm::message::Response_GetPsCapResponse)},
  { 264, 271, sizeof(::aesm::message::Response_GetWhiteListSizeResponse)},
  { 273, 280, sizeof(::aesm::message::Response_GetWhiteListResponse)},
  { 282, 289, sizeof(::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse)},
  { 291, 297, sizeof(::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse)},
  { 298, 304, sizeof(::aesm::message::Response_SGXRegisterResponse)},
  { 305, 324, sizeof(::aesm::message::Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Request_InitQuoteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Request_GetQuoteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Request_GetLaunchTokenRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Request_ReportAttestationErrorRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Request_CreateSessionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Request_InvokeServiceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Request_ExchangeReportRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Request_CloseSessionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Request_GetPsCapRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Request_GetWhiteListSizeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Request_GetWhiteListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Request_SGXGetExtendedEpidGroupIdRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Request_SGXSwitchExtendedEpidGroupRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Request_SGXRegisterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Response_InitQuoteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Response_GetQuoteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Response_GetLaunchTokenResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Response_ReportAttestationErrorResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Response_CreateSessionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Response_InvokeServiceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Response_ExchangeReportResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Response_CloseSessionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Response_GetPsCapResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Response_GetWhiteListSizeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Response_GetWhiteListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Response_SGXGetExtendedEpidGroupIdResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Response_SGXSwitchExtendedEpidGroupResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Response_SGXRegisterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::aesm::message::_Response_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "messages.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 30);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016messages.proto\022\014aesm.message\"\265\020\n\007Reque"
      "st\022<\n\014initQuoteReq\030\001 \001(\0132&.aesm.message."
      "Request.InitQuoteRequest\022:\n\013getQuoteReq\030"
      "\002 \001(\0132%.aesm.message.Request.GetQuoteReq"
      "uest\022C\n\016getLicTokenReq\030\003 \001(\0132+.aesm.mess"
      "age.Request.GetLaunchTokenRequest\022I\n\014rep"
      "ortErrReq\030\004 \001(\01323.aesm.message.Request.R"
      "eportAttestationErrorRequest\022D\n\020createSe"
      "ssionReq\030\005 \001(\0132*.aesm.message.Request.Cr"
      "eateSessionRequest\022D\n\020invokeServiceReq\030\006"
      " \001(\0132*.aesm.message.Request.InvokeServic"
      "eRequest\022F\n\021exchangeReportReq\030\007 \001(\0132+.ae"
      "sm.message.Request.ExchangeReportRequest"
      "\022B\n\017closeSessionReq\030\010 \001(\0132).aesm.message"
      ".Request.CloseSessionRequest\022:\n\013getPsCap"
      "Req\030\t \001(\0132%.aesm.message.Request.GetPsCa"
      "pRequest\022J\n\023getWhiteListSizeReq\030\n \001(\0132-."
      "aesm.message.Request.GetWhiteListSizeReq"
      "uest\022B\n\017getWhiteListReq\030\013 \001(\0132).aesm.mes"
      "sage.Request.GetWhiteListRequest\022\\\n\034sgxG"
      "etExtendedEpidGroupIdReq\030\014 \001(\01326.aesm.me"
      "ssage.Request.SGXGetExtendedEpidGroupIdR"
      "equest\022^\n\035sgxSwitchExtendedEpidGroupReq\030"
      "\r \001(\01327.aesm.message.Request.SGXSwitchEx"
      "tendedEpidGroupRequest\022@\n\016sgxRegisterReq"
      "\030\016 \001(\0132(.aesm.message.Request.SGXRegiste"
      "rRequest\032#\n\020InitQuoteRequest\022\017\n\007timeout\030"
      "\t \001(\r\032\230\001\n\017GetQuoteRequest\022\016\n\006report\030\001 \002("
      "\014\022\022\n\nquote_type\030\002 \002(\r\022\014\n\004spid\030\003 \002(\014\022\r\n\005n"
      "once\030\004 \001(\014\022\016\n\006sig_rl\030\005 \001(\014\022\020\n\010buf_size\030\006"
      " \002(\r\022\021\n\tqe_report\030\007 \001(\010\022\017\n\007timeout\030\t \001(\r"
      "\032f\n\025GetLaunchTokenRequest\022\022\n\nmr_enclave\030"
      "\001 \002(\014\022\021\n\tmr_signer\030\002 \002(\014\022\025\n\rse_attribute"
      "s\030\003 \002(\014\022\017\n\007timeout\030\t \001(\r\032\201\001\n\035ReportAttes"
      "tationErrorRequest\022\025\n\rplatform_info\030\001 \002("
      "\014\022\036\n\026attestation_error_code\030\002 \002(\r\022\030\n\020upd"
      "ate_info_size\030\003 \002(\r\022\017\n\007timeout\030\t \001(\r\032=\n\024"
      "CreateSessionRequest\022\024\n\014dh_msg1_size\030\001 \002"
      "(\r\022\017\n\007timeout\030\t \001(\r\032S\n\024InvokeServiceRequ"
      "est\022\023\n\013pse_message\030\001 \002(\014\022\025\n\rpse_resp_siz"
      "e\030\002 \002(\r\022\017\n\007timeout\030\t \001(\r\032i\n\025ExchangeRepo"
      "rtRequest\022\022\n\nsession_id\030\001 \002(\r\022\022\n\nse_dh_m"
      "sg2\030\002 \002(\014\022\027\n\017se_dh_msg3_size\030\003 \002(\r\022\017\n\007ti"
      "meout\030\t \001(\r\032:\n\023CloseSessionRequest\022\022\n\nse"
      "ssion_id\030\001 \002(\r\022\017\n\007timeout\030\t \001(\r\032\"\n\017GetPs"
      "CapRequest\022\017\n\007timeout\030\t \001(\r\032*\n\027GetWhiteL"
      "istSizeRequest\022\017\n\007timeout\030\t \001(\r\032\?\n\023GetWh"
      "iteListRequest\022\027\n\017white_list_size\030\001 \001(\r\022"
      "\017\n\007timeout\030\t \001(\r\0323\n SGXGetExtendedEpidGr"
      "oupIdRequest\022\017\n\007timeout\030\t \001(\r\032H\n!SGXSwit"
      "chExtendedEpidGroupRequest\022\022\n\nx_group_id"
      "\030\001 \001(\r\022\017\n\007timeout\030\t \001(\r\032E\n\022SGXRegisterRe"
      "quest\022\013\n\003buf\030\001 \002(\014\022\021\n\tdata_type\030\002 \002(\r\022\017\n"
      "\007timeout\030\t \001(\r\"\315\017\n\010Response\022>\n\014initQuote"
      "Res\030\001 \001(\0132(.aesm.message.Response.InitQu"
      "oteResponse\022<\n\013getQuoteRes\030\002 \001(\0132\'.aesm."
      "message.Response.GetQuoteResponse\022E\n\016get"
      "LicTokenRes\030\003 \001(\0132-.aesm.message.Respons"
      "e.GetLaunchTokenResponse\022K\n\014reportErrRes"
      "\030\004 \001(\01325.aesm.message.Response.ReportAtt"
      "estationErrorResponse\022F\n\020createSessionRe"
      "s\030\005 \001(\0132,.aesm.message.Response.CreateSe"
      "ssionResponse\022F\n\020invokeServiceRes\030\006 \001(\0132"
      ",.aesm.message.Response.InvokeServiceRes"
      "ponse\022H\n\021exchangeReportRes\030\007 \001(\0132-.aesm."
      "message.Response.ExchangeReportResponse\022"
      "D\n\017closeSessionRes\030\010 \001(\0132+.aesm.message."
      "Response.CloseSessionResponse\022<\n\013getPsCa"
      "pRes\030\t \001(\0132\'.aesm.message.Response.GetPs"
      "CapResponse\022L\n\023getWhiteListSizeRes\030\n \001(\013"
      "2/.aesm.message.Response.GetWhiteListSiz"
      "eResponse\022D\n\017getWhiteListRes\030\013 \001(\0132+.aes"
      "m.message.Response.GetWhiteListResponse\022"
      "^\n\034sgxGetExtendedEpidGroupIdRes\030\014 \001(\01328."
      "aesm.message.Response.SGXGetExtendedEpid"
      "GroupIdResponse\022`\n\035sgxSwitchExtendedEpid"
      "GroupRes\030\r \001(\01329.aesm.message.Response.S"
      "GXSwitchExtendedEpidGroupResponse\022B\n\016sgx"
      "RegisterRes\030\016 \001(\0132*.aesm.message.Respons"
      "e.SGXRegisterResponse\032J\n\021InitQuoteRespon"
      "se\022\024\n\terrorCode\030\001 \002(\r:\0011\022\022\n\ntargetInfo\030\002"
      " \001(\014\022\013\n\003gid\030\003 \001(\014\032J\n\020GetQuoteResponse\022\024\n"
      "\terrorCode\030\001 \002(\r:\0011\022\r\n\005quote\030\002 \001(\014\022\021\n\tqe"
      "_report\030\003 \001(\014\032=\n\026GetLaunchTokenResponse\022"
      "\024\n\terrorCode\030\001 \002(\r:\0011\022\r\n\005token\030\002 \001(\014\032T\n\036"
      "ReportAttestationErrorResponse\022\024\n\terrorC"
      "ode\030\001 \002(\r:\0011\022\034\n\024platform_update_info\030\002 \001"
      "(\014\032U\n\025CreateSessionResponse\022\024\n\terrorCode"
      "\030\001 \002(\r:\0011\022\022\n\nsession_id\030\002 \001(\r\022\022\n\nse_dh_m"
      "sg1\030\003 \001(\014\032B\n\025InvokeServiceResponse\022\024\n\ter"
      "rorCode\030\001 \002(\r:\0011\022\023\n\013pse_message\030\002 \001(\014\032B\n"
      "\026ExchangeReportResponse\022\024\n\terrorCode\030\001 \002"
      "(\r:\0011\022\022\n\nse_dh_msg3\030\002 \001(\014\032,\n\024CloseSessio"
      "nResponse\022\024\n\terrorCode\030\001 \002(\r:\0011\0328\n\020GetPs"
      "CapResponse\022\024\n\terrorCode\030\001 \002(\r:\0011\022\016\n\006ps_"
      "cap\030\002 \001(\004\032I\n\030GetWhiteListSizeResponse\022\024\n"
      "\terrorCode\030\001 \002(\r:\0011\022\027\n\017white_list_size\030\002"
      " \001(\r\032@\n\024GetWhiteListResponse\022\024\n\terrorCod"
      "e\030\001 \002(\r:\0011\022\022\n\nwhite_list\030\002 \001(\014\032M\n!SGXGet"
      "ExtendedEpidGroupIdResponse\022\024\n\terrorCode"
      "\030\001 \002(\r:\0011\022\022\n\nx_group_id\030\002 \001(\r\032:\n\"SGXSwit"
      "chExtendedEpidGroupResponse\022\024\n\terrorCode"
      "\030\001 \002(\r:\0011\032+\n\023SGXRegisterResponse\022\024\n\terro"
      "rCode\030\001 \002(\r:\0011"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4134);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messages_2eproto
namespace aesm {
namespace message {

// ===================================================================

void Request_InitQuoteRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_InitQuoteRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_InitQuoteRequest::Request_InitQuoteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Request_InitQuoteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.InitQuoteRequest)
}
Request_InitQuoteRequest::Request_InitQuoteRequest(const Request_InitQuoteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timeout_ = from.timeout_;
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.InitQuoteRequest)
}

void Request_InitQuoteRequest::SharedCtor() {
  timeout_ = 0u;
}

Request_InitQuoteRequest::~Request_InitQuoteRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.InitQuoteRequest)
  SharedDtor();
}

void Request_InitQuoteRequest::SharedDtor() {
}

void Request_InitQuoteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request_InitQuoteRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request_InitQuoteRequest& Request_InitQuoteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Request_InitQuoteRequest.base);
  return *internal_default_instance();
}


void Request_InitQuoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.InitQuoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timeout_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request_InitQuoteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Request.InitQuoteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 timeout = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_timeout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.InitQuoteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.InitQuoteRequest)
  return false;
#undef DO_
}

void Request_InitQuoteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.InitQuoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.InitQuoteRequest)
}

::google::protobuf::uint8* Request_InitQuoteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Request.InitQuoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->timeout(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Request.InitQuoteRequest)
  return target;
}

size_t Request_InitQuoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.InitQuoteRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 timeout = 9;
  if (has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request_InitQuoteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Request.InitQuoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Request_InitQuoteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request_InitQuoteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Request.InitQuoteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Request.InitQuoteRequest)
    MergeFrom(*source);
  }
}

void Request_InitQuoteRequest::MergeFrom(const Request_InitQuoteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.InitQuoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_timeout()) {
    set_timeout(from.timeout());
  }
}

void Request_InitQuoteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Request.InitQuoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_InitQuoteRequest::CopyFrom(const Request_InitQuoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.InitQuoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_InitQuoteRequest::IsInitialized() const {
  return true;
}

void Request_InitQuoteRequest::Swap(Request_InitQuoteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_InitQuoteRequest::InternalSwap(Request_InitQuoteRequest* other) {
  using std::swap;
  swap(timeout_, other->timeout_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request_InitQuoteRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request_GetQuoteRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_GetQuoteRequest::kReportFieldNumber;
const int Request_GetQuoteRequest::kQuoteTypeFieldNumber;
const int Request_GetQuoteRequest::kSpidFieldNumber;
const int Request_GetQuoteRequest::kNonceFieldNumber;
const int Request_GetQuoteRequest::kSigRlFieldNumber;
const int Request_GetQuoteRequest::kBufSizeFieldNumber;
const int Request_GetQuoteRequest::kQeReportFieldNumber;
const int Request_GetQuoteRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_GetQuoteRequest::Request_GetQuoteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Request_GetQuoteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.GetQuoteRequest)
}
Request_GetQuoteRequest::Request_GetQuoteRequest(const Request_GetQuoteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  report_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_report()) {
    report_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.report_);
  }
  spid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_spid()) {
    spid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spid_);
  }
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nonce()) {
    nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
  }
  sig_rl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sig_rl()) {
    sig_rl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sig_rl_);
  }
  ::memcpy(&quote_type_, &from.quote_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeout_) -
    reinterpret_cast<char*>(&quote_type_)) + sizeof(timeout_));
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.GetQuoteRequest)
}

void Request_GetQuoteRequest::SharedCtor() {
  report_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sig_rl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&quote_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeout_) -
      reinterpret_cast<char*>(&quote_type_)) + sizeof(timeout_));
}

Request_GetQuoteRequest::~Request_GetQuoteRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.GetQuoteRequest)
  SharedDtor();
}

void Request_GetQuoteRequest::SharedDtor() {
  report_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sig_rl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Request_GetQuoteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request_GetQuoteRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request_GetQuoteRequest& Request_GetQuoteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Request_GetQuoteRequest.base);
  return *internal_default_instance();
}


void Request_GetQuoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.GetQuoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      report_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      spid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      nonce_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      sig_rl_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&quote_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timeout_) -
        reinterpret_cast<char*>(&quote_type_)) + sizeof(timeout_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request_GetQuoteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Request.GetQuoteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes report = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_report()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 quote_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_quote_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quote_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes spid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_spid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes nonce = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nonce()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sig_rl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sig_rl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 buf_size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_buf_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool qe_report = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_qe_report();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &qe_report_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_timeout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.GetQuoteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.GetQuoteRequest)
  return false;
#undef DO_
}

void Request_GetQuoteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.GetQuoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes report = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->report(), output);
  }

  // required uint32 quote_type = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->quote_type(), output);
  }

  // required bytes spid = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->spid(), output);
  }

  // optional bytes nonce = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->nonce(), output);
  }

  // optional bytes sig_rl = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->sig_rl(), output);
  }

  // required uint32 buf_size = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->buf_size(), output);
  }

  // optional bool qe_report = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->qe_report(), output);
  }

  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.GetQuoteRequest)
}

::google::protobuf::uint8* Request_GetQuoteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Request.GetQuoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes report = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->report(), target);
  }

  // required uint32 quote_type = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->quote_type(), target);
  }

  // required bytes spid = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->spid(), target);
  }

  // optional bytes nonce = 4;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->nonce(), target);
  }

  // optional bytes sig_rl = 5;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->sig_rl(), target);
  }

  // required uint32 buf_size = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->buf_size(), target);
  }

  // optional bool qe_report = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->qe_report(), target);
  }

  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->timeout(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Request.GetQuoteRequest)
  return target;
}

size_t Request_GetQuoteRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:aesm.message.Request.GetQuoteRequest)
  size_t total_size = 0;

  if (has_report()) {
    // required bytes report = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->report());
  }

  if (has_spid()) {
    // required bytes spid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->spid());
  }

  if (has_quote_type()) {
    // required uint32 quote_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quote_type());
  }

  if (has_buf_size()) {
    // required uint32 buf_size = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buf_size());
  }

  return total_size;
}
size_t Request_GetQuoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.GetQuoteRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000033) ^ 0x00000033) == 0) {  // All required fields are present.
    // required bytes report = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->report());

    // required bytes spid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->spid());

    // required uint32 quote_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quote_type());

    // required uint32 buf_size = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buf_size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 12u) {
    // optional bytes nonce = 4;
    if (has_nonce()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->nonce());
    }

    // optional bytes sig_rl = 5;
    if (has_sig_rl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sig_rl());
    }

  }
  if (_has_bits_[0 / 32] & 192u) {
    // optional bool qe_report = 7;
    if (has_qe_report()) {
      total_size += 1 + 1;
    }

    // optional uint32 timeout = 9;
    if (has_timeout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timeout());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request_GetQuoteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Request.GetQuoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Request_GetQuoteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request_GetQuoteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Request.GetQuoteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Request.GetQuoteRequest)
    MergeFrom(*source);
  }
}

void Request_GetQuoteRequest::MergeFrom(const Request_GetQuoteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.GetQuoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_report();
      report_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.report_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_spid();
      spid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_nonce();
      nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_sig_rl();
      sig_rl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sig_rl_);
    }
    if (cached_has_bits & 0x00000010u) {
      quote_type_ = from.quote_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      buf_size_ = from.buf_size_;
    }
    if (cached_has_bits & 0x00000040u) {
      qe_report_ = from.qe_report_;
    }
    if (cached_has_bits & 0x00000080u) {
      timeout_ = from.timeout_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Request_GetQuoteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Request.GetQuoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_GetQuoteRequest::CopyFrom(const Request_GetQuoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.GetQuoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_GetQuoteRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000033) != 0x00000033) return false;
  return true;
}

void Request_GetQuoteRequest::Swap(Request_GetQuoteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_GetQuoteRequest::InternalSwap(Request_GetQuoteRequest* other) {
  using std::swap;
  report_.Swap(&other->report_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  spid_.Swap(&other->spid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nonce_.Swap(&other->nonce_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sig_rl_.Swap(&other->sig_rl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(quote_type_, other->quote_type_);
  swap(buf_size_, other->buf_size_);
  swap(qe_report_, other->qe_report_);
  swap(timeout_, other->timeout_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request_GetQuoteRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request_GetLaunchTokenRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_GetLaunchTokenRequest::kMrEnclaveFieldNumber;
const int Request_GetLaunchTokenRequest::kMrSignerFieldNumber;
const int Request_GetLaunchTokenRequest::kSeAttributesFieldNumber;
const int Request_GetLaunchTokenRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_GetLaunchTokenRequest::Request_GetLaunchTokenRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Request_GetLaunchTokenRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.GetLaunchTokenRequest)
}
Request_GetLaunchTokenRequest::Request_GetLaunchTokenRequest(const Request_GetLaunchTokenRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mr_enclave_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mr_enclave()) {
    mr_enclave_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mr_enclave_);
  }
  mr_signer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mr_signer()) {
    mr_signer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mr_signer_);
  }
  se_attributes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_se_attributes()) {
    se_attributes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.se_attributes_);
  }
  timeout_ = from.timeout_;
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.GetLaunchTokenRequest)
}

void Request_GetLaunchTokenRequest::SharedCtor() {
  mr_enclave_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mr_signer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  se_attributes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_ = 0u;
}

Request_GetLaunchTokenRequest::~Request_GetLaunchTokenRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.GetLaunchTokenRequest)
  SharedDtor();
}

void Request_GetLaunchTokenRequest::SharedDtor() {
  mr_enclave_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mr_signer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  se_attributes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Request_GetLaunchTokenRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request_GetLaunchTokenRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request_GetLaunchTokenRequest& Request_GetLaunchTokenRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Request_GetLaunchTokenRequest.base);
  return *internal_default_instance();
}


void Request_GetLaunchTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.GetLaunchTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mr_enclave_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      mr_signer_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      se_attributes_.ClearNonDefaultToEmptyNoArena();
    }
  }
  timeout_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request_GetLaunchTokenRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Request.GetLaunchTokenRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes mr_enclave = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mr_enclave()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes mr_signer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mr_signer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes se_attributes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_se_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_timeout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.GetLaunchTokenRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.GetLaunchTokenRequest)
  return false;
#undef DO_
}

void Request_GetLaunchTokenRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.GetLaunchTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes mr_enclave = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->mr_enclave(), output);
  }

  // required bytes mr_signer = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->mr_signer(), output);
  }

  // required bytes se_attributes = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->se_attributes(), output);
  }

  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.GetLaunchTokenRequest)
}

::google::protobuf::uint8* Request_GetLaunchTokenRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Request.GetLaunchTokenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes mr_enclave = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->mr_enclave(), target);
  }

  // required bytes mr_signer = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->mr_signer(), target);
  }

  // required bytes se_attributes = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->se_attributes(), target);
  }

  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->timeout(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Request.GetLaunchTokenRequest)
  return target;
}

size_t Request_GetLaunchTokenRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:aesm.message.Request.GetLaunchTokenRequest)
  size_t total_size = 0;

  if (has_mr_enclave()) {
    // required bytes mr_enclave = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mr_enclave());
  }

  if (has_mr_signer()) {
    // required bytes mr_signer = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mr_signer());
  }

  if (has_se_attributes()) {
    // required bytes se_attributes = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->se_attributes());
  }

  return total_size;
}
size_t Request_GetLaunchTokenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.GetLaunchTokenRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bytes mr_enclave = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mr_enclave());

    // required bytes mr_signer = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mr_signer());

    // required bytes se_attributes = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->se_attributes());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint32 timeout = 9;
  if (has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request_GetLaunchTokenRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Request.GetLaunchTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Request_GetLaunchTokenRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request_GetLaunchTokenRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Request.GetLaunchTokenRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Request.GetLaunchTokenRequest)
    MergeFrom(*source);
  }
}

void Request_GetLaunchTokenRequest::MergeFrom(const Request_GetLaunchTokenRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.GetLaunchTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_mr_enclave();
      mr_enclave_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mr_enclave_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_mr_signer();
      mr_signer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mr_signer_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_se_attributes();
      se_attributes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.se_attributes_);
    }
    if (cached_has_bits & 0x00000008u) {
      timeout_ = from.timeout_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Request_GetLaunchTokenRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Request.GetLaunchTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_GetLaunchTokenRequest::CopyFrom(const Request_GetLaunchTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.GetLaunchTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_GetLaunchTokenRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Request_GetLaunchTokenRequest::Swap(Request_GetLaunchTokenRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_GetLaunchTokenRequest::InternalSwap(Request_GetLaunchTokenRequest* other) {
  using std::swap;
  mr_enclave_.Swap(&other->mr_enclave_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mr_signer_.Swap(&other->mr_signer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  se_attributes_.Swap(&other->se_attributes_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timeout_, other->timeout_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request_GetLaunchTokenRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request_ReportAttestationErrorRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_ReportAttestationErrorRequest::kPlatformInfoFieldNumber;
const int Request_ReportAttestationErrorRequest::kAttestationErrorCodeFieldNumber;
const int Request_ReportAttestationErrorRequest::kUpdateInfoSizeFieldNumber;
const int Request_ReportAttestationErrorRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_ReportAttestationErrorRequest::Request_ReportAttestationErrorRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Request_ReportAttestationErrorRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.ReportAttestationErrorRequest)
}
Request_ReportAttestationErrorRequest::Request_ReportAttestationErrorRequest(const Request_ReportAttestationErrorRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  platform_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_platform_info()) {
    platform_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_info_);
  }
  ::memcpy(&attestation_error_code_, &from.attestation_error_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeout_) -
    reinterpret_cast<char*>(&attestation_error_code_)) + sizeof(timeout_));
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.ReportAttestationErrorRequest)
}

void Request_ReportAttestationErrorRequest::SharedCtor() {
  platform_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&attestation_error_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeout_) -
      reinterpret_cast<char*>(&attestation_error_code_)) + sizeof(timeout_));
}

Request_ReportAttestationErrorRequest::~Request_ReportAttestationErrorRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.ReportAttestationErrorRequest)
  SharedDtor();
}

void Request_ReportAttestationErrorRequest::SharedDtor() {
  platform_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Request_ReportAttestationErrorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request_ReportAttestationErrorRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request_ReportAttestationErrorRequest& Request_ReportAttestationErrorRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Request_ReportAttestationErrorRequest.base);
  return *internal_default_instance();
}


void Request_ReportAttestationErrorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.ReportAttestationErrorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    platform_info_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&attestation_error_code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timeout_) -
        reinterpret_cast<char*>(&attestation_error_code_)) + sizeof(timeout_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request_ReportAttestationErrorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Request.ReportAttestationErrorRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes platform_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_platform_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 attestation_error_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_attestation_error_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attestation_error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 update_info_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_update_info_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &update_info_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_timeout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.ReportAttestationErrorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.ReportAttestationErrorRequest)
  return false;
#undef DO_
}

void Request_ReportAttestationErrorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.ReportAttestationErrorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes platform_info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->platform_info(), output);
  }

  // required uint32 attestation_error_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->attestation_error_code(), output);
  }

  // required uint32 update_info_size = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->update_info_size(), output);
  }

  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.ReportAttestationErrorRequest)
}

::google::protobuf::uint8* Request_ReportAttestationErrorRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Request.ReportAttestationErrorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes platform_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->platform_info(), target);
  }

  // required uint32 attestation_error_code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->attestation_error_code(), target);
  }

  // required uint32 update_info_size = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->update_info_size(), target);
  }

  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->timeout(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Request.ReportAttestationErrorRequest)
  return target;
}

size_t Request_ReportAttestationErrorRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:aesm.message.Request.ReportAttestationErrorRequest)
  size_t total_size = 0;

  if (has_platform_info()) {
    // required bytes platform_info = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->platform_info());
  }

  if (has_attestation_error_code()) {
    // required uint32 attestation_error_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->attestation_error_code());
  }

  if (has_update_info_size()) {
    // required uint32 update_info_size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->update_info_size());
  }

  return total_size;
}
size_t Request_ReportAttestationErrorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.ReportAttestationErrorRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bytes platform_info = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->platform_info());

    // required uint32 attestation_error_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->attestation_error_code());

    // required uint32 update_info_size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->update_info_size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint32 timeout = 9;
  if (has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request_ReportAttestationErrorRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Request.ReportAttestationErrorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Request_ReportAttestationErrorRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request_ReportAttestationErrorRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Request.ReportAttestationErrorRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Request.ReportAttestationErrorRequest)
    MergeFrom(*source);
  }
}

void Request_ReportAttestationErrorRequest::MergeFrom(const Request_ReportAttestationErrorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.ReportAttestationErrorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_platform_info();
      platform_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_info_);
    }
    if (cached_has_bits & 0x00000002u) {
      attestation_error_code_ = from.attestation_error_code_;
    }
    if (cached_has_bits & 0x00000004u) {
      update_info_size_ = from.update_info_size_;
    }
    if (cached_has_bits & 0x00000008u) {
      timeout_ = from.timeout_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Request_ReportAttestationErrorRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Request.ReportAttestationErrorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_ReportAttestationErrorRequest::CopyFrom(const Request_ReportAttestationErrorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.ReportAttestationErrorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_ReportAttestationErrorRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Request_ReportAttestationErrorRequest::Swap(Request_ReportAttestationErrorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_ReportAttestationErrorRequest::InternalSwap(Request_ReportAttestationErrorRequest* other) {
  using std::swap;
  platform_info_.Swap(&other->platform_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(attestation_error_code_, other->attestation_error_code_);
  swap(update_info_size_, other->update_info_size_);
  swap(timeout_, other->timeout_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request_ReportAttestationErrorRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request_CreateSessionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_CreateSessionRequest::kDhMsg1SizeFieldNumber;
const int Request_CreateSessionRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_CreateSessionRequest::Request_CreateSessionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Request_CreateSessionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.CreateSessionRequest)
}
Request_CreateSessionRequest::Request_CreateSessionRequest(const Request_CreateSessionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dh_msg1_size_, &from.dh_msg1_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeout_) -
    reinterpret_cast<char*>(&dh_msg1_size_)) + sizeof(timeout_));
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.CreateSessionRequest)
}

void Request_CreateSessionRequest::SharedCtor() {
  ::memset(&dh_msg1_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeout_) -
      reinterpret_cast<char*>(&dh_msg1_size_)) + sizeof(timeout_));
}

Request_CreateSessionRequest::~Request_CreateSessionRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.CreateSessionRequest)
  SharedDtor();
}

void Request_CreateSessionRequest::SharedDtor() {
}

void Request_CreateSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request_CreateSessionRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request_CreateSessionRequest& Request_CreateSessionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Request_CreateSessionRequest.base);
  return *internal_default_instance();
}


void Request_CreateSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.CreateSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&dh_msg1_size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timeout_) -
        reinterpret_cast<char*>(&dh_msg1_size_)) + sizeof(timeout_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request_CreateSessionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Request.CreateSessionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 dh_msg1_size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dh_msg1_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dh_msg1_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_timeout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.CreateSessionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.CreateSessionRequest)
  return false;
#undef DO_
}

void Request_CreateSessionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.CreateSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 dh_msg1_size = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dh_msg1_size(), output);
  }

  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.CreateSessionRequest)
}

::google::protobuf::uint8* Request_CreateSessionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Request.CreateSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 dh_msg1_size = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dh_msg1_size(), target);
  }

  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->timeout(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Request.CreateSessionRequest)
  return target;
}

size_t Request_CreateSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.CreateSessionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 dh_msg1_size = 1;
  if (has_dh_msg1_size()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dh_msg1_size());
  }
  // optional uint32 timeout = 9;
  if (has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request_CreateSessionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Request.CreateSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Request_CreateSessionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request_CreateSessionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Request.CreateSessionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Request.CreateSessionRequest)
    MergeFrom(*source);
  }
}

void Request_CreateSessionRequest::MergeFrom(const Request_CreateSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.CreateSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      dh_msg1_size_ = from.dh_msg1_size_;
    }
    if (cached_has_bits & 0x00000002u) {
      timeout_ = from.timeout_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Request_CreateSessionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Request.CreateSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_CreateSessionRequest::CopyFrom(const Request_CreateSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.CreateSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_CreateSessionRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Request_CreateSessionRequest::Swap(Request_CreateSessionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_CreateSessionRequest::InternalSwap(Request_CreateSessionRequest* other) {
  using std::swap;
  swap(dh_msg1_size_, other->dh_msg1_size_);
  swap(timeout_, other->timeout_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request_CreateSessionRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request_InvokeServiceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_InvokeServiceRequest::kPseMessageFieldNumber;
const int Request_InvokeServiceRequest::kPseRespSizeFieldNumber;
const int Request_InvokeServiceRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_InvokeServiceRequest::Request_InvokeServiceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Request_InvokeServiceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.InvokeServiceRequest)
}
Request_InvokeServiceRequest::Request_InvokeServiceRequest(const Request_InvokeServiceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pse_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pse_message()) {
    pse_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pse_message_);
  }
  ::memcpy(&pse_resp_size_, &from.pse_resp_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeout_) -
    reinterpret_cast<char*>(&pse_resp_size_)) + sizeof(timeout_));
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.InvokeServiceRequest)
}

void Request_InvokeServiceRequest::SharedCtor() {
  pse_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pse_resp_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeout_) -
      reinterpret_cast<char*>(&pse_resp_size_)) + sizeof(timeout_));
}

Request_InvokeServiceRequest::~Request_InvokeServiceRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.InvokeServiceRequest)
  SharedDtor();
}

void Request_InvokeServiceRequest::SharedDtor() {
  pse_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Request_InvokeServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request_InvokeServiceRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request_InvokeServiceRequest& Request_InvokeServiceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Request_InvokeServiceRequest.base);
  return *internal_default_instance();
}


void Request_InvokeServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.InvokeServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pse_message_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&pse_resp_size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timeout_) -
        reinterpret_cast<char*>(&pse_resp_size_)) + sizeof(timeout_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request_InvokeServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Request.InvokeServiceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes pse_message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pse_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 pse_resp_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_pse_resp_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pse_resp_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_timeout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.InvokeServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.InvokeServiceRequest)
  return false;
#undef DO_
}

void Request_InvokeServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.InvokeServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes pse_message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pse_message(), output);
  }

  // required uint32 pse_resp_size = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pse_resp_size(), output);
  }

  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.InvokeServiceRequest)
}

::google::protobuf::uint8* Request_InvokeServiceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Request.InvokeServiceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes pse_message = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pse_message(), target);
  }

  // required uint32 pse_resp_size = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pse_resp_size(), target);
  }

  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->timeout(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Request.InvokeServiceRequest)
  return target;
}

size_t Request_InvokeServiceRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:aesm.message.Request.InvokeServiceRequest)
  size_t total_size = 0;

  if (has_pse_message()) {
    // required bytes pse_message = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pse_message());
  }

  if (has_pse_resp_size()) {
    // required uint32 pse_resp_size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pse_resp_size());
  }

  return total_size;
}
size_t Request_InvokeServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.InvokeServiceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes pse_message = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pse_message());

    // required uint32 pse_resp_size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pse_resp_size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint32 timeout = 9;
  if (has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request_InvokeServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Request.InvokeServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Request_InvokeServiceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request_InvokeServiceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Request.InvokeServiceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Request.InvokeServiceRequest)
    MergeFrom(*source);
  }
}

void Request_InvokeServiceRequest::MergeFrom(const Request_InvokeServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.InvokeServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pse_message();
      pse_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pse_message_);
    }
    if (cached_has_bits & 0x00000002u) {
      pse_resp_size_ = from.pse_resp_size_;
    }
    if (cached_has_bits & 0x00000004u) {
      timeout_ = from.timeout_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Request_InvokeServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Request.InvokeServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_InvokeServiceRequest::CopyFrom(const Request_InvokeServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.InvokeServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_InvokeServiceRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Request_InvokeServiceRequest::Swap(Request_InvokeServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_InvokeServiceRequest::InternalSwap(Request_InvokeServiceRequest* other) {
  using std::swap;
  pse_message_.Swap(&other->pse_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pse_resp_size_, other->pse_resp_size_);
  swap(timeout_, other->timeout_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request_InvokeServiceRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request_ExchangeReportRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_ExchangeReportRequest::kSessionIdFieldNumber;
const int Request_ExchangeReportRequest::kSeDhMsg2FieldNumber;
const int Request_ExchangeReportRequest::kSeDhMsg3SizeFieldNumber;
const int Request_ExchangeReportRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_ExchangeReportRequest::Request_ExchangeReportRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Request_ExchangeReportRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.ExchangeReportRequest)
}
Request_ExchangeReportRequest::Request_ExchangeReportRequest(const Request_ExchangeReportRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  se_dh_msg2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_se_dh_msg2()) {
    se_dh_msg2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.se_dh_msg2_);
  }
  ::memcpy(&session_id_, &from.session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeout_) -
    reinterpret_cast<char*>(&session_id_)) + sizeof(timeout_));
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.ExchangeReportRequest)
}

void Request_ExchangeReportRequest::SharedCtor() {
  se_dh_msg2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeout_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(timeout_));
}

Request_ExchangeReportRequest::~Request_ExchangeReportRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.ExchangeReportRequest)
  SharedDtor();
}

void Request_ExchangeReportRequest::SharedDtor() {
  se_dh_msg2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Request_ExchangeReportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request_ExchangeReportRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request_ExchangeReportRequest& Request_ExchangeReportRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Request_ExchangeReportRequest.base);
  return *internal_default_instance();
}


void Request_ExchangeReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.ExchangeReportRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    se_dh_msg2_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&session_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timeout_) -
        reinterpret_cast<char*>(&session_id_)) + sizeof(timeout_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request_ExchangeReportRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Request.ExchangeReportRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_session_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes se_dh_msg2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_se_dh_msg2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 se_dh_msg3_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_se_dh_msg3_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &se_dh_msg3_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_timeout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.ExchangeReportRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.ExchangeReportRequest)
  return false;
#undef DO_
}

void Request_ExchangeReportRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.ExchangeReportRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 session_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->session_id(), output);
  }

  // required bytes se_dh_msg2 = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->se_dh_msg2(), output);
  }

  // required uint32 se_dh_msg3_size = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->se_dh_msg3_size(), output);
  }

  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.ExchangeReportRequest)
}

::google::protobuf::uint8* Request_ExchangeReportRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Request.ExchangeReportRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 session_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->session_id(), target);
  }

  // required bytes se_dh_msg2 = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->se_dh_msg2(), target);
  }

  // required uint32 se_dh_msg3_size = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->se_dh_msg3_size(), target);
  }

  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->timeout(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Request.ExchangeReportRequest)
  return target;
}

size_t Request_ExchangeReportRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:aesm.message.Request.ExchangeReportRequest)
  size_t total_size = 0;

  if (has_se_dh_msg2()) {
    // required bytes se_dh_msg2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->se_dh_msg2());
  }

  if (has_session_id()) {
    // required uint32 session_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->session_id());
  }

  if (has_se_dh_msg3_size()) {
    // required uint32 se_dh_msg3_size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->se_dh_msg3_size());
  }

  return total_size;
}
size_t Request_ExchangeReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.ExchangeReportRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bytes se_dh_msg2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->se_dh_msg2());

    // required uint32 session_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->session_id());

    // required uint32 se_dh_msg3_size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->se_dh_msg3_size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint32 timeout = 9;
  if (has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request_ExchangeReportRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Request.ExchangeReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Request_ExchangeReportRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request_ExchangeReportRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Request.ExchangeReportRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Request.ExchangeReportRequest)
    MergeFrom(*source);
  }
}

void Request_ExchangeReportRequest::MergeFrom(const Request_ExchangeReportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.ExchangeReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_se_dh_msg2();
      se_dh_msg2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.se_dh_msg2_);
    }
    if (cached_has_bits & 0x00000002u) {
      session_id_ = from.session_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      se_dh_msg3_size_ = from.se_dh_msg3_size_;
    }
    if (cached_has_bits & 0x00000008u) {
      timeout_ = from.timeout_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Request_ExchangeReportRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Request.ExchangeReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_ExchangeReportRequest::CopyFrom(const Request_ExchangeReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.ExchangeReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_ExchangeReportRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Request_ExchangeReportRequest::Swap(Request_ExchangeReportRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_ExchangeReportRequest::InternalSwap(Request_ExchangeReportRequest* other) {
  using std::swap;
  se_dh_msg2_.Swap(&other->se_dh_msg2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(session_id_, other->session_id_);
  swap(se_dh_msg3_size_, other->se_dh_msg3_size_);
  swap(timeout_, other->timeout_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request_ExchangeReportRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request_CloseSessionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_CloseSessionRequest::kSessionIdFieldNumber;
const int Request_CloseSessionRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_CloseSessionRequest::Request_CloseSessionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Request_CloseSessionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.CloseSessionRequest)
}
Request_CloseSessionRequest::Request_CloseSessionRequest(const Request_CloseSessionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&session_id_, &from.session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeout_) -
    reinterpret_cast<char*>(&session_id_)) + sizeof(timeout_));
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.CloseSessionRequest)
}

void Request_CloseSessionRequest::SharedCtor() {
  ::memset(&session_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeout_) -
      reinterpret_cast<char*>(&session_id_)) + sizeof(timeout_));
}

Request_CloseSessionRequest::~Request_CloseSessionRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.CloseSessionRequest)
  SharedDtor();
}

void Request_CloseSessionRequest::SharedDtor() {
}

void Request_CloseSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request_CloseSessionRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request_CloseSessionRequest& Request_CloseSessionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Request_CloseSessionRequest.base);
  return *internal_default_instance();
}


void Request_CloseSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.CloseSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&session_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timeout_) -
        reinterpret_cast<char*>(&session_id_)) + sizeof(timeout_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request_CloseSessionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Request.CloseSessionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_session_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_timeout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.CloseSessionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.CloseSessionRequest)
  return false;
#undef DO_
}

void Request_CloseSessionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.CloseSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 session_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->session_id(), output);
  }

  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.CloseSessionRequest)
}

::google::protobuf::uint8* Request_CloseSessionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Request.CloseSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 session_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->session_id(), target);
  }

  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->timeout(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Request.CloseSessionRequest)
  return target;
}

size_t Request_CloseSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.CloseSessionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 session_id = 1;
  if (has_session_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->session_id());
  }
  // optional uint32 timeout = 9;
  if (has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request_CloseSessionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Request.CloseSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Request_CloseSessionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request_CloseSessionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Request.CloseSessionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Request.CloseSessionRequest)
    MergeFrom(*source);
  }
}

void Request_CloseSessionRequest::MergeFrom(const Request_CloseSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.CloseSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      session_id_ = from.session_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      timeout_ = from.timeout_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Request_CloseSessionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Request.CloseSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_CloseSessionRequest::CopyFrom(const Request_CloseSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.CloseSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_CloseSessionRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Request_CloseSessionRequest::Swap(Request_CloseSessionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_CloseSessionRequest::InternalSwap(Request_CloseSessionRequest* other) {
  using std::swap;
  swap(session_id_, other->session_id_);
  swap(timeout_, other->timeout_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request_CloseSessionRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request_GetPsCapRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_GetPsCapRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_GetPsCapRequest::Request_GetPsCapRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Request_GetPsCapRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.GetPsCapRequest)
}
Request_GetPsCapRequest::Request_GetPsCapRequest(const Request_GetPsCapRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timeout_ = from.timeout_;
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.GetPsCapRequest)
}

void Request_GetPsCapRequest::SharedCtor() {
  timeout_ = 0u;
}

Request_GetPsCapRequest::~Request_GetPsCapRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.GetPsCapRequest)
  SharedDtor();
}

void Request_GetPsCapRequest::SharedDtor() {
}

void Request_GetPsCapRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request_GetPsCapRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request_GetPsCapRequest& Request_GetPsCapRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Request_GetPsCapRequest.base);
  return *internal_default_instance();
}


void Request_GetPsCapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.GetPsCapRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timeout_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request_GetPsCapRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Request.GetPsCapRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 timeout = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_timeout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.GetPsCapRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.GetPsCapRequest)
  return false;
#undef DO_
}

void Request_GetPsCapRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.GetPsCapRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.GetPsCapRequest)
}

::google::protobuf::uint8* Request_GetPsCapRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Request.GetPsCapRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->timeout(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Request.GetPsCapRequest)
  return target;
}

size_t Request_GetPsCapRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.GetPsCapRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 timeout = 9;
  if (has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request_GetPsCapRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Request.GetPsCapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Request_GetPsCapRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request_GetPsCapRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Request.GetPsCapRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Request.GetPsCapRequest)
    MergeFrom(*source);
  }
}

void Request_GetPsCapRequest::MergeFrom(const Request_GetPsCapRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.GetPsCapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_timeout()) {
    set_timeout(from.timeout());
  }
}

void Request_GetPsCapRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Request.GetPsCapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_GetPsCapRequest::CopyFrom(const Request_GetPsCapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.GetPsCapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_GetPsCapRequest::IsInitialized() const {
  return true;
}

void Request_GetPsCapRequest::Swap(Request_GetPsCapRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_GetPsCapRequest::InternalSwap(Request_GetPsCapRequest* other) {
  using std::swap;
  swap(timeout_, other->timeout_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request_GetPsCapRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request_GetWhiteListSizeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_GetWhiteListSizeRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_GetWhiteListSizeRequest::Request_GetWhiteListSizeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Request_GetWhiteListSizeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.GetWhiteListSizeRequest)
}
Request_GetWhiteListSizeRequest::Request_GetWhiteListSizeRequest(const Request_GetWhiteListSizeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timeout_ = from.timeout_;
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.GetWhiteListSizeRequest)
}

void Request_GetWhiteListSizeRequest::SharedCtor() {
  timeout_ = 0u;
}

Request_GetWhiteListSizeRequest::~Request_GetWhiteListSizeRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.GetWhiteListSizeRequest)
  SharedDtor();
}

void Request_GetWhiteListSizeRequest::SharedDtor() {
}

void Request_GetWhiteListSizeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request_GetWhiteListSizeRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request_GetWhiteListSizeRequest& Request_GetWhiteListSizeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Request_GetWhiteListSizeRequest.base);
  return *internal_default_instance();
}


void Request_GetWhiteListSizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.GetWhiteListSizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timeout_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request_GetWhiteListSizeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Request.GetWhiteListSizeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 timeout = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_timeout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.GetWhiteListSizeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.GetWhiteListSizeRequest)
  return false;
#undef DO_
}

void Request_GetWhiteListSizeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.GetWhiteListSizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.GetWhiteListSizeRequest)
}

::google::protobuf::uint8* Request_GetWhiteListSizeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Request.GetWhiteListSizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->timeout(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Request.GetWhiteListSizeRequest)
  return target;
}

size_t Request_GetWhiteListSizeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.GetWhiteListSizeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 timeout = 9;
  if (has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request_GetWhiteListSizeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Request.GetWhiteListSizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Request_GetWhiteListSizeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request_GetWhiteListSizeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Request.GetWhiteListSizeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Request.GetWhiteListSizeRequest)
    MergeFrom(*source);
  }
}

void Request_GetWhiteListSizeRequest::MergeFrom(const Request_GetWhiteListSizeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.GetWhiteListSizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_timeout()) {
    set_timeout(from.timeout());
  }
}

void Request_GetWhiteListSizeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Request.GetWhiteListSizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_GetWhiteListSizeRequest::CopyFrom(const Request_GetWhiteListSizeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.GetWhiteListSizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_GetWhiteListSizeRequest::IsInitialized() const {
  return true;
}

void Request_GetWhiteListSizeRequest::Swap(Request_GetWhiteListSizeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_GetWhiteListSizeRequest::InternalSwap(Request_GetWhiteListSizeRequest* other) {
  using std::swap;
  swap(timeout_, other->timeout_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request_GetWhiteListSizeRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request_GetWhiteListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_GetWhiteListRequest::kWhiteListSizeFieldNumber;
const int Request_GetWhiteListRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_GetWhiteListRequest::Request_GetWhiteListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Request_GetWhiteListRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.GetWhiteListRequest)
}
Request_GetWhiteListRequest::Request_GetWhiteListRequest(const Request_GetWhiteListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&white_list_size_, &from.white_list_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeout_) -
    reinterpret_cast<char*>(&white_list_size_)) + sizeof(timeout_));
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.GetWhiteListRequest)
}

void Request_GetWhiteListRequest::SharedCtor() {
  ::memset(&white_list_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeout_) -
      reinterpret_cast<char*>(&white_list_size_)) + sizeof(timeout_));
}

Request_GetWhiteListRequest::~Request_GetWhiteListRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.GetWhiteListRequest)
  SharedDtor();
}

void Request_GetWhiteListRequest::SharedDtor() {
}

void Request_GetWhiteListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request_GetWhiteListRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request_GetWhiteListRequest& Request_GetWhiteListRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Request_GetWhiteListRequest.base);
  return *internal_default_instance();
}


void Request_GetWhiteListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.GetWhiteListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&white_list_size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timeout_) -
        reinterpret_cast<char*>(&white_list_size_)) + sizeof(timeout_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request_GetWhiteListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Request.GetWhiteListRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 white_list_size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_white_list_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &white_list_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_timeout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.GetWhiteListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.GetWhiteListRequest)
  return false;
#undef DO_
}

void Request_GetWhiteListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.GetWhiteListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 white_list_size = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->white_list_size(), output);
  }

  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.GetWhiteListRequest)
}

::google::protobuf::uint8* Request_GetWhiteListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Request.GetWhiteListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 white_list_size = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->white_list_size(), target);
  }

  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->timeout(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Request.GetWhiteListRequest)
  return target;
}

size_t Request_GetWhiteListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.GetWhiteListRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 white_list_size = 1;
    if (has_white_list_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->white_list_size());
    }

    // optional uint32 timeout = 9;
    if (has_timeout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timeout());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request_GetWhiteListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Request.GetWhiteListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Request_GetWhiteListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request_GetWhiteListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Request.GetWhiteListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Request.GetWhiteListRequest)
    MergeFrom(*source);
  }
}

void Request_GetWhiteListRequest::MergeFrom(const Request_GetWhiteListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.GetWhiteListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      white_list_size_ = from.white_list_size_;
    }
    if (cached_has_bits & 0x00000002u) {
      timeout_ = from.timeout_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Request_GetWhiteListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Request.GetWhiteListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_GetWhiteListRequest::CopyFrom(const Request_GetWhiteListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.GetWhiteListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_GetWhiteListRequest::IsInitialized() const {
  return true;
}

void Request_GetWhiteListRequest::Swap(Request_GetWhiteListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_GetWhiteListRequest::InternalSwap(Request_GetWhiteListRequest* other) {
  using std::swap;
  swap(white_list_size_, other->white_list_size_);
  swap(timeout_, other->timeout_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request_GetWhiteListRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request_SGXGetExtendedEpidGroupIdRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_SGXGetExtendedEpidGroupIdRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_SGXGetExtendedEpidGroupIdRequest::Request_SGXGetExtendedEpidGroupIdRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Request_SGXGetExtendedEpidGroupIdRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
}
Request_SGXGetExtendedEpidGroupIdRequest::Request_SGXGetExtendedEpidGroupIdRequest(const Request_SGXGetExtendedEpidGroupIdRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timeout_ = from.timeout_;
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
}

void Request_SGXGetExtendedEpidGroupIdRequest::SharedCtor() {
  timeout_ = 0u;
}

Request_SGXGetExtendedEpidGroupIdRequest::~Request_SGXGetExtendedEpidGroupIdRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  SharedDtor();
}

void Request_SGXGetExtendedEpidGroupIdRequest::SharedDtor() {
}

void Request_SGXGetExtendedEpidGroupIdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request_SGXGetExtendedEpidGroupIdRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request_SGXGetExtendedEpidGroupIdRequest& Request_SGXGetExtendedEpidGroupIdRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Request_SGXGetExtendedEpidGroupIdRequest.base);
  return *internal_default_instance();
}


void Request_SGXGetExtendedEpidGroupIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timeout_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request_SGXGetExtendedEpidGroupIdRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 timeout = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_timeout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  return false;
#undef DO_
}

void Request_SGXGetExtendedEpidGroupIdRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
}

::google::protobuf::uint8* Request_SGXGetExtendedEpidGroupIdRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->timeout(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  return target;
}

size_t Request_SGXGetExtendedEpidGroupIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 timeout = 9;
  if (has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request_SGXGetExtendedEpidGroupIdRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Request_SGXGetExtendedEpidGroupIdRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request_SGXGetExtendedEpidGroupIdRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
    MergeFrom(*source);
  }
}

void Request_SGXGetExtendedEpidGroupIdRequest::MergeFrom(const Request_SGXGetExtendedEpidGroupIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_timeout()) {
    set_timeout(from.timeout());
  }
}

void Request_SGXGetExtendedEpidGroupIdRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_SGXGetExtendedEpidGroupIdRequest::CopyFrom(const Request_SGXGetExtendedEpidGroupIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_SGXGetExtendedEpidGroupIdRequest::IsInitialized() const {
  return true;
}

void Request_SGXGetExtendedEpidGroupIdRequest::Swap(Request_SGXGetExtendedEpidGroupIdRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_SGXGetExtendedEpidGroupIdRequest::InternalSwap(Request_SGXGetExtendedEpidGroupIdRequest* other) {
  using std::swap;
  swap(timeout_, other->timeout_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request_SGXGetExtendedEpidGroupIdRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request_SGXSwitchExtendedEpidGroupRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_SGXSwitchExtendedEpidGroupRequest::kXGroupIdFieldNumber;
const int Request_SGXSwitchExtendedEpidGroupRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_SGXSwitchExtendedEpidGroupRequest::Request_SGXSwitchExtendedEpidGroupRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Request_SGXSwitchExtendedEpidGroupRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
}
Request_SGXSwitchExtendedEpidGroupRequest::Request_SGXSwitchExtendedEpidGroupRequest(const Request_SGXSwitchExtendedEpidGroupRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_group_id_, &from.x_group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeout_) -
    reinterpret_cast<char*>(&x_group_id_)) + sizeof(timeout_));
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
}

void Request_SGXSwitchExtendedEpidGroupRequest::SharedCtor() {
  ::memset(&x_group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeout_) -
      reinterpret_cast<char*>(&x_group_id_)) + sizeof(timeout_));
}

Request_SGXSwitchExtendedEpidGroupRequest::~Request_SGXSwitchExtendedEpidGroupRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  SharedDtor();
}

void Request_SGXSwitchExtendedEpidGroupRequest::SharedDtor() {
}

void Request_SGXSwitchExtendedEpidGroupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request_SGXSwitchExtendedEpidGroupRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request_SGXSwitchExtendedEpidGroupRequest& Request_SGXSwitchExtendedEpidGroupRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Request_SGXSwitchExtendedEpidGroupRequest.base);
  return *internal_default_instance();
}


void Request_SGXSwitchExtendedEpidGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&x_group_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timeout_) -
        reinterpret_cast<char*>(&x_group_id_)) + sizeof(timeout_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request_SGXSwitchExtendedEpidGroupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 x_group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_timeout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  return false;
#undef DO_
}

void Request_SGXSwitchExtendedEpidGroupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 x_group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->x_group_id(), output);
  }

  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
}

::google::protobuf::uint8* Request_SGXSwitchExtendedEpidGroupRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 x_group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->x_group_id(), target);
  }

  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->timeout(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  return target;
}

size_t Request_SGXSwitchExtendedEpidGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 x_group_id = 1;
    if (has_x_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->x_group_id());
    }

    // optional uint32 timeout = 9;
    if (has_timeout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timeout());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request_SGXSwitchExtendedEpidGroupRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Request_SGXSwitchExtendedEpidGroupRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request_SGXSwitchExtendedEpidGroupRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
    MergeFrom(*source);
  }
}

void Request_SGXSwitchExtendedEpidGroupRequest::MergeFrom(const Request_SGXSwitchExtendedEpidGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      x_group_id_ = from.x_group_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      timeout_ = from.timeout_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Request_SGXSwitchExtendedEpidGroupRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_SGXSwitchExtendedEpidGroupRequest::CopyFrom(const Request_SGXSwitchExtendedEpidGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_SGXSwitchExtendedEpidGroupRequest::IsInitialized() const {
  return true;
}

void Request_SGXSwitchExtendedEpidGroupRequest::Swap(Request_SGXSwitchExtendedEpidGroupRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_SGXSwitchExtendedEpidGroupRequest::InternalSwap(Request_SGXSwitchExtendedEpidGroupRequest* other) {
  using std::swap;
  swap(x_group_id_, other->x_group_id_);
  swap(timeout_, other->timeout_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request_SGXSwitchExtendedEpidGroupRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request_SGXRegisterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_SGXRegisterRequest::kBufFieldNumber;
const int Request_SGXRegisterRequest::kDataTypeFieldNumber;
const int Request_SGXRegisterRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_SGXRegisterRequest::Request_SGXRegisterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Request_SGXRegisterRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.SGXRegisterRequest)
}
Request_SGXRegisterRequest::Request_SGXRegisterRequest(const Request_SGXRegisterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  buf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_buf()) {
    buf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buf_);
  }
  ::memcpy(&data_type_, &from.data_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeout_) -
    reinterpret_cast<char*>(&data_type_)) + sizeof(timeout_));
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.SGXRegisterRequest)
}

void Request_SGXRegisterRequest::SharedCtor() {
  buf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeout_) -
      reinterpret_cast<char*>(&data_type_)) + sizeof(timeout_));
}

Request_SGXRegisterRequest::~Request_SGXRegisterRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.SGXRegisterRequest)
  SharedDtor();
}

void Request_SGXRegisterRequest::SharedDtor() {
  buf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Request_SGXRegisterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request_SGXRegisterRequest::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request_SGXRegisterRequest& Request_SGXRegisterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Request_SGXRegisterRequest.base);
  return *internal_default_instance();
}


void Request_SGXRegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.SGXRegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    buf_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&data_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timeout_) -
        reinterpret_cast<char*>(&data_type_)) + sizeof(timeout_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request_SGXRegisterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Request.SGXRegisterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes buf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 data_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_data_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_timeout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.SGXRegisterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.SGXRegisterRequest)
  return false;
#undef DO_
}

void Request_SGXRegisterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.SGXRegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes buf = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->buf(), output);
  }

  // required uint32 data_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->data_type(), output);
  }

  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.SGXRegisterRequest)
}

::google::protobuf::uint8* Request_SGXRegisterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Request.SGXRegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes buf = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->buf(), target);
  }

  // required uint32 data_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->data_type(), target);
  }

  // optional uint32 timeout = 9;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->timeout(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Request.SGXRegisterRequest)
  return target;
}

size_t Request_SGXRegisterRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:aesm.message.Request.SGXRegisterRequest)
  size_t total_size = 0;

  if (has_buf()) {
    // required bytes buf = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buf());
  }

  if (has_data_type()) {
    // required uint32 data_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_type());
  }

  return total_size;
}
size_t Request_SGXRegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.SGXRegisterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes buf = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buf());

    // required uint32 data_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint32 timeout = 9;
  if (has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request_SGXRegisterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Request.SGXRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Request_SGXRegisterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request_SGXRegisterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Request.SGXRegisterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Request.SGXRegisterRequest)
    MergeFrom(*source);
  }
}

void Request_SGXRegisterRequest::MergeFrom(const Request_SGXRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.SGXRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_buf();
      buf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buf_);
    }
    if (cached_has_bits & 0x00000002u) {
      data_type_ = from.data_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      timeout_ = from.timeout_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Request_SGXRegisterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Request.SGXRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_SGXRegisterRequest::CopyFrom(const Request_SGXRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.SGXRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_SGXRegisterRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Request_SGXRegisterRequest::Swap(Request_SGXRegisterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_SGXRegisterRequest::InternalSwap(Request_SGXRegisterRequest* other) {
  using std::swap;
  buf_.Swap(&other->buf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_type_, other->data_type_);
  swap(timeout_, other->timeout_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request_SGXRegisterRequest::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request::InitAsDefaultInstance() {
  ::aesm::message::_Request_default_instance_._instance.get_mutable()->initquotereq_ = const_cast< ::aesm::message::Request_InitQuoteRequest*>(
      ::aesm::message::Request_InitQuoteRequest::internal_default_instance());
  ::aesm::message::_Request_default_instance_._instance.get_mutable()->getquotereq_ = const_cast< ::aesm::message::Request_GetQuoteRequest*>(
      ::aesm::message::Request_GetQuoteRequest::internal_default_instance());
  ::aesm::message::_Request_default_instance_._instance.get_mutable()->getlictokenreq_ = const_cast< ::aesm::message::Request_GetLaunchTokenRequest*>(
      ::aesm::message::Request_GetLaunchTokenRequest::internal_default_instance());
  ::aesm::message::_Request_default_instance_._instance.get_mutable()->reporterrreq_ = const_cast< ::aesm::message::Request_ReportAttestationErrorRequest*>(
      ::aesm::message::Request_ReportAttestationErrorRequest::internal_default_instance());
  ::aesm::message::_Request_default_instance_._instance.get_mutable()->createsessionreq_ = const_cast< ::aesm::message::Request_CreateSessionRequest*>(
      ::aesm::message::Request_CreateSessionRequest::internal_default_instance());
  ::aesm::message::_Request_default_instance_._instance.get_mutable()->invokeservicereq_ = const_cast< ::aesm::message::Request_InvokeServiceRequest*>(
      ::aesm::message::Request_InvokeServiceRequest::internal_default_instance());
  ::aesm::message::_Request_default_instance_._instance.get_mutable()->exchangereportreq_ = const_cast< ::aesm::message::Request_ExchangeReportRequest*>(
      ::aesm::message::Request_ExchangeReportRequest::internal_default_instance());
  ::aesm::message::_Request_default_instance_._instance.get_mutable()->closesessionreq_ = const_cast< ::aesm::message::Request_CloseSessionRequest*>(
      ::aesm::message::Request_CloseSessionRequest::internal_default_instance());
  ::aesm::message::_Request_default_instance_._instance.get_mutable()->getpscapreq_ = const_cast< ::aesm::message::Request_GetPsCapRequest*>(
      ::aesm::message::Request_GetPsCapRequest::internal_default_instance());
  ::aesm::message::_Request_default_instance_._instance.get_mutable()->getwhitelistsizereq_ = const_cast< ::aesm::message::Request_GetWhiteListSizeRequest*>(
      ::aesm::message::Request_GetWhiteListSizeRequest::internal_default_instance());
  ::aesm::message::_Request_default_instance_._instance.get_mutable()->getwhitelistreq_ = const_cast< ::aesm::message::Request_GetWhiteListRequest*>(
      ::aesm::message::Request_GetWhiteListRequest::internal_default_instance());
  ::aesm::message::_Request_default_instance_._instance.get_mutable()->sgxgetextendedepidgroupidreq_ = const_cast< ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest*>(
      ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest::internal_default_instance());
  ::aesm::message::_Request_default_instance_._instance.get_mutable()->sgxswitchextendedepidgroupreq_ = const_cast< ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest*>(
      ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest::internal_default_instance());
  ::aesm::message::_Request_default_instance_._instance.get_mutable()->sgxregisterreq_ = const_cast< ::aesm::message::Request_SGXRegisterRequest*>(
      ::aesm::message::Request_SGXRegisterRequest::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kInitQuoteReqFieldNumber;
const int Request::kGetQuoteReqFieldNumber;
const int Request::kGetLicTokenReqFieldNumber;
const int Request::kReportErrReqFieldNumber;
const int Request::kCreateSessionReqFieldNumber;
const int Request::kInvokeServiceReqFieldNumber;
const int Request::kExchangeReportReqFieldNumber;
const int Request::kCloseSessionReqFieldNumber;
const int Request::kGetPsCapReqFieldNumber;
const int Request::kGetWhiteListSizeReqFieldNumber;
const int Request::kGetWhiteListReqFieldNumber;
const int Request::kSgxGetExtendedEpidGroupIdReqFieldNumber;
const int Request::kSgxSwitchExtendedEpidGroupReqFieldNumber;
const int Request::kSgxRegisterReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_initquotereq()) {
    initquotereq_ = new ::aesm::message::Request_InitQuoteRequest(*from.initquotereq_);
  } else {
    initquotereq_ = NULL;
  }
  if (from.has_getquotereq()) {
    getquotereq_ = new ::aesm::message::Request_GetQuoteRequest(*from.getquotereq_);
  } else {
    getquotereq_ = NULL;
  }
  if (from.has_getlictokenreq()) {
    getlictokenreq_ = new ::aesm::message::Request_GetLaunchTokenRequest(*from.getlictokenreq_);
  } else {
    getlictokenreq_ = NULL;
  }
  if (from.has_reporterrreq()) {
    reporterrreq_ = new ::aesm::message::Request_ReportAttestationErrorRequest(*from.reporterrreq_);
  } else {
    reporterrreq_ = NULL;
  }
  if (from.has_createsessionreq()) {
    createsessionreq_ = new ::aesm::message::Request_CreateSessionRequest(*from.createsessionreq_);
  } else {
    createsessionreq_ = NULL;
  }
  if (from.has_invokeservicereq()) {
    invokeservicereq_ = new ::aesm::message::Request_InvokeServiceRequest(*from.invokeservicereq_);
  } else {
    invokeservicereq_ = NULL;
  }
  if (from.has_exchangereportreq()) {
    exchangereportreq_ = new ::aesm::message::Request_ExchangeReportRequest(*from.exchangereportreq_);
  } else {
    exchangereportreq_ = NULL;
  }
  if (from.has_closesessionreq()) {
    closesessionreq_ = new ::aesm::message::Request_CloseSessionRequest(*from.closesessionreq_);
  } else {
    closesessionreq_ = NULL;
  }
  if (from.has_getpscapreq()) {
    getpscapreq_ = new ::aesm::message::Request_GetPsCapRequest(*from.getpscapreq_);
  } else {
    getpscapreq_ = NULL;
  }
  if (from.has_getwhitelistsizereq()) {
    getwhitelistsizereq_ = new ::aesm::message::Request_GetWhiteListSizeRequest(*from.getwhitelistsizereq_);
  } else {
    getwhitelistsizereq_ = NULL;
  }
  if (from.has_getwhitelistreq()) {
    getwhitelistreq_ = new ::aesm::message::Request_GetWhiteListRequest(*from.getwhitelistreq_);
  } else {
    getwhitelistreq_ = NULL;
  }
  if (from.has_sgxgetextendedepidgroupidreq()) {
    sgxgetextendedepidgroupidreq_ = new ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest(*from.sgxgetextendedepidgroupidreq_);
  } else {
    sgxgetextendedepidgroupidreq_ = NULL;
  }
  if (from.has_sgxswitchextendedepidgroupreq()) {
    sgxswitchextendedepidgroupreq_ = new ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest(*from.sgxswitchextendedepidgroupreq_);
  } else {
    sgxswitchextendedepidgroupreq_ = NULL;
  }
  if (from.has_sgxregisterreq()) {
    sgxregisterreq_ = new ::aesm::message::Request_SGXRegisterRequest(*from.sgxregisterreq_);
  } else {
    sgxregisterreq_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request)
}

void Request::SharedCtor() {
  ::memset(&initquotereq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sgxregisterreq_) -
      reinterpret_cast<char*>(&initquotereq_)) + sizeof(sgxregisterreq_));
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:aesm.message.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (this != internal_default_instance()) delete initquotereq_;
  if (this != internal_default_instance()) delete getquotereq_;
  if (this != internal_default_instance()) delete getlictokenreq_;
  if (this != internal_default_instance()) delete reporterrreq_;
  if (this != internal_default_instance()) delete createsessionreq_;
  if (this != internal_default_instance()) delete invokeservicereq_;
  if (this != internal_default_instance()) delete exchangereportreq_;
  if (this != internal_default_instance()) delete closesessionreq_;
  if (this != internal_default_instance()) delete getpscapreq_;
  if (this != internal_default_instance()) delete getwhitelistsizereq_;
  if (this != internal_default_instance()) delete getwhitelistreq_;
  if (this != internal_default_instance()) delete sgxgetextendedepidgroupidreq_;
  if (this != internal_default_instance()) delete sgxswitchextendedepidgroupreq_;
  if (this != internal_default_instance()) delete sgxregisterreq_;
}

void Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request& Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Request.base);
  return *internal_default_instance();
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(initquotereq_ != NULL);
      initquotereq_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(getquotereq_ != NULL);
      getquotereq_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(getlictokenreq_ != NULL);
      getlictokenreq_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(reporterrreq_ != NULL);
      reporterrreq_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(createsessionreq_ != NULL);
      createsessionreq_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(invokeservicereq_ != NULL);
      invokeservicereq_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(exchangereportreq_ != NULL);
      exchangereportreq_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(closesessionreq_ != NULL);
      closesessionreq_->Clear();
    }
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(getpscapreq_ != NULL);
      getpscapreq_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(getwhitelistsizereq_ != NULL);
      getwhitelistsizereq_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(getwhitelistreq_ != NULL);
      getwhitelistreq_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(sgxgetextendedepidgroupidreq_ != NULL);
      sgxgetextendedepidgroupidreq_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(sgxswitchextendedepidgroupreq_ != NULL);
      sgxswitchextendedepidgroupreq_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(sgxregisterreq_ != NULL);
      sgxregisterreq_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .aesm.message.Request.InitQuoteRequest initQuoteReq = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_initquotereq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Request.GetQuoteRequest getQuoteReq = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getquotereq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Request.GetLaunchTokenRequest getLicTokenReq = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getlictokenreq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Request.ReportAttestationErrorRequest reportErrReq = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reporterrreq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Request.CreateSessionRequest createSessionReq = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_createsessionreq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Request.InvokeServiceRequest invokeServiceReq = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_invokeservicereq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Request.ExchangeReportRequest exchangeReportReq = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exchangereportreq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Request.CloseSessionRequest closeSessionReq = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_closesessionreq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Request.GetPsCapRequest getPsCapReq = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getpscapreq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Request.GetWhiteListSizeRequest getWhiteListSizeReq = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getwhitelistsizereq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Request.GetWhiteListRequest getWhiteListReq = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getwhitelistreq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Request.SGXGetExtendedEpidGroupIdRequest sgxGetExtendedEpidGroupIdReq = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sgxgetextendedepidgroupidreq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Request.SGXSwitchExtendedEpidGroupRequest sgxSwitchExtendedEpidGroupReq = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sgxswitchextendedepidgroupreq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Request.SGXRegisterRequest sgxRegisterReq = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sgxregisterreq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .aesm.message.Request.InitQuoteRequest initQuoteReq = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_initquotereq(), output);
  }

  // optional .aesm.message.Request.GetQuoteRequest getQuoteReq = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_getquotereq(), output);
  }

  // optional .aesm.message.Request.GetLaunchTokenRequest getLicTokenReq = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_getlictokenreq(), output);
  }

  // optional .aesm.message.Request.ReportAttestationErrorRequest reportErrReq = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_reporterrreq(), output);
  }

  // optional .aesm.message.Request.CreateSessionRequest createSessionReq = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_createsessionreq(), output);
  }

  // optional .aesm.message.Request.InvokeServiceRequest invokeServiceReq = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_invokeservicereq(), output);
  }

  // optional .aesm.message.Request.ExchangeReportRequest exchangeReportReq = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_exchangereportreq(), output);
  }

  // optional .aesm.message.Request.CloseSessionRequest closeSessionReq = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_closesessionreq(), output);
  }

  // optional .aesm.message.Request.GetPsCapRequest getPsCapReq = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_getpscapreq(), output);
  }

  // optional .aesm.message.Request.GetWhiteListSizeRequest getWhiteListSizeReq = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_getwhitelistsizereq(), output);
  }

  // optional .aesm.message.Request.GetWhiteListRequest getWhiteListReq = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_getwhitelistreq(), output);
  }

  // optional .aesm.message.Request.SGXGetExtendedEpidGroupIdRequest sgxGetExtendedEpidGroupIdReq = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_sgxgetextendedepidgroupidreq(), output);
  }

  // optional .aesm.message.Request.SGXSwitchExtendedEpidGroupRequest sgxSwitchExtendedEpidGroupReq = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_sgxswitchextendedepidgroupreq(), output);
  }

  // optional .aesm.message.Request.SGXRegisterRequest sgxRegisterReq = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_sgxregisterreq(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .aesm.message.Request.InitQuoteRequest initQuoteReq = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_initquotereq(), deterministic, target);
  }

  // optional .aesm.message.Request.GetQuoteRequest getQuoteReq = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_getquotereq(), deterministic, target);
  }

  // optional .aesm.message.Request.GetLaunchTokenRequest getLicTokenReq = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_getlictokenreq(), deterministic, target);
  }

  // optional .aesm.message.Request.ReportAttestationErrorRequest reportErrReq = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_reporterrreq(), deterministic, target);
  }

  // optional .aesm.message.Request.CreateSessionRequest createSessionReq = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_createsessionreq(), deterministic, target);
  }

  // optional .aesm.message.Request.InvokeServiceRequest invokeServiceReq = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_invokeservicereq(), deterministic, target);
  }

  // optional .aesm.message.Request.ExchangeReportRequest exchangeReportReq = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_exchangereportreq(), deterministic, target);
  }

  // optional .aesm.message.Request.CloseSessionRequest closeSessionReq = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_closesessionreq(), deterministic, target);
  }

  // optional .aesm.message.Request.GetPsCapRequest getPsCapReq = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_getpscapreq(), deterministic, target);
  }

  // optional .aesm.message.Request.GetWhiteListSizeRequest getWhiteListSizeReq = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_getwhitelistsizereq(), deterministic, target);
  }

  // optional .aesm.message.Request.GetWhiteListRequest getWhiteListReq = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_getwhitelistreq(), deterministic, target);
  }

  // optional .aesm.message.Request.SGXGetExtendedEpidGroupIdRequest sgxGetExtendedEpidGroupIdReq = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_sgxgetextendedepidgroupidreq(), deterministic, target);
  }

  // optional .aesm.message.Request.SGXSwitchExtendedEpidGroupRequest sgxSwitchExtendedEpidGroupReq = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_sgxswitchextendedepidgroupreq(), deterministic, target);
  }

  // optional .aesm.message.Request.SGXRegisterRequest sgxRegisterReq = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_sgxregisterreq(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .aesm.message.Request.InitQuoteRequest initQuoteReq = 1;
    if (has_initquotereq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *initquotereq_);
    }

    // optional .aesm.message.Request.GetQuoteRequest getQuoteReq = 2;
    if (has_getquotereq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *getquotereq_);
    }

    // optional .aesm.message.Request.GetLaunchTokenRequest getLicTokenReq = 3;
    if (has_getlictokenreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *getlictokenreq_);
    }

    // optional .aesm.message.Request.ReportAttestationErrorRequest reportErrReq = 4;
    if (has_reporterrreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reporterrreq_);
    }

    // optional .aesm.message.Request.CreateSessionRequest createSessionReq = 5;
    if (has_createsessionreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *createsessionreq_);
    }

    // optional .aesm.message.Request.InvokeServiceRequest invokeServiceReq = 6;
    if (has_invokeservicereq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *invokeservicereq_);
    }

    // optional .aesm.message.Request.ExchangeReportRequest exchangeReportReq = 7;
    if (has_exchangereportreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *exchangereportreq_);
    }

    // optional .aesm.message.Request.CloseSessionRequest closeSessionReq = 8;
    if (has_closesessionreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *closesessionreq_);
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional .aesm.message.Request.GetPsCapRequest getPsCapReq = 9;
    if (has_getpscapreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *getpscapreq_);
    }

    // optional .aesm.message.Request.GetWhiteListSizeRequest getWhiteListSizeReq = 10;
    if (has_getwhitelistsizereq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *getwhitelistsizereq_);
    }

    // optional .aesm.message.Request.GetWhiteListRequest getWhiteListReq = 11;
    if (has_getwhitelistreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *getwhitelistreq_);
    }

    // optional .aesm.message.Request.SGXGetExtendedEpidGroupIdRequest sgxGetExtendedEpidGroupIdReq = 12;
    if (has_sgxgetextendedepidgroupidreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *sgxgetextendedepidgroupidreq_);
    }

    // optional .aesm.message.Request.SGXSwitchExtendedEpidGroupRequest sgxSwitchExtendedEpidGroupReq = 13;
    if (has_sgxswitchextendedepidgroupreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *sgxswitchextendedepidgroupreq_);
    }

    // optional .aesm.message.Request.SGXRegisterRequest sgxRegisterReq = 14;
    if (has_sgxregisterreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *sgxregisterreq_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_initquotereq()->::aesm::message::Request_InitQuoteRequest::MergeFrom(from.initquotereq());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_getquotereq()->::aesm::message::Request_GetQuoteRequest::MergeFrom(from.getquotereq());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_getlictokenreq()->::aesm::message::Request_GetLaunchTokenRequest::MergeFrom(from.getlictokenreq());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_reporterrreq()->::aesm::message::Request_ReportAttestationErrorRequest::MergeFrom(from.reporterrreq());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_createsessionreq()->::aesm::message::Request_CreateSessionRequest::MergeFrom(from.createsessionreq());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_invokeservicereq()->::aesm::message::Request_InvokeServiceRequest::MergeFrom(from.invokeservicereq());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_exchangereportreq()->::aesm::message::Request_ExchangeReportRequest::MergeFrom(from.exchangereportreq());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_closesessionreq()->::aesm::message::Request_CloseSessionRequest::MergeFrom(from.closesessionreq());
    }
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_getpscapreq()->::aesm::message::Request_GetPsCapRequest::MergeFrom(from.getpscapreq());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_getwhitelistsizereq()->::aesm::message::Request_GetWhiteListSizeRequest::MergeFrom(from.getwhitelistsizereq());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_getwhitelistreq()->::aesm::message::Request_GetWhiteListRequest::MergeFrom(from.getwhitelistreq());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_sgxgetextendedepidgroupidreq()->::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest::MergeFrom(from.sgxgetextendedepidgroupidreq());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_sgxswitchextendedepidgroupreq()->::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest::MergeFrom(from.sgxswitchextendedepidgroupreq());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_sgxregisterreq()->::aesm::message::Request_SGXRegisterRequest::MergeFrom(from.sgxregisterreq());
    }
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  if (has_getquotereq()) {
    if (!this->getquotereq_->IsInitialized()) return false;
  }
  if (has_getlictokenreq()) {
    if (!this->getlictokenreq_->IsInitialized()) return false;
  }
  if (has_reporterrreq()) {
    if (!this->reporterrreq_->IsInitialized()) return false;
  }
  if (has_createsessionreq()) {
    if (!this->createsessionreq_->IsInitialized()) return false;
  }
  if (has_invokeservicereq()) {
    if (!this->invokeservicereq_->IsInitialized()) return false;
  }
  if (has_exchangereportreq()) {
    if (!this->exchangereportreq_->IsInitialized()) return false;
  }
  if (has_closesessionreq()) {
    if (!this->closesessionreq_->IsInitialized()) return false;
  }
  if (has_sgxregisterreq()) {
    if (!this->sgxregisterreq_->IsInitialized()) return false;
  }
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  swap(initquotereq_, other->initquotereq_);
  swap(getquotereq_, other->getquotereq_);
  swap(getlictokenreq_, other->getlictokenreq_);
  swap(reporterrreq_, other->reporterrreq_);
  swap(createsessionreq_, other->createsessionreq_);
  swap(invokeservicereq_, other->invokeservicereq_);
  swap(exchangereportreq_, other->exchangereportreq_);
  swap(closesessionreq_, other->closesessionreq_);
  swap(getpscapreq_, other->getpscapreq_);
  swap(getwhitelistsizereq_, other->getwhitelistsizereq_);
  swap(getwhitelistreq_, other->getwhitelistreq_);
  swap(sgxgetextendedepidgroupidreq_, other->sgxgetextendedepidgroupidreq_);
  swap(sgxswitchextendedepidgroupreq_, other->sgxswitchextendedepidgroupreq_);
  swap(sgxregisterreq_, other->sgxregisterreq_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response_InitQuoteResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_InitQuoteResponse::kErrorCodeFieldNumber;
const int Response_InitQuoteResponse::kTargetInfoFieldNumber;
const int Response_InitQuoteResponse::kGidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_InitQuoteResponse::Response_InitQuoteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Response_InitQuoteResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.InitQuoteResponse)
}
Response_InitQuoteResponse::Response_InitQuoteResponse(const Response_InitQuoteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  targetinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_targetinfo()) {
    targetinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetinfo_);
  }
  gid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gid()) {
    gid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gid_);
  }
  errorcode_ = from.errorcode_;
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.InitQuoteResponse)
}

void Response_InitQuoteResponse::SharedCtor() {
  targetinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
}

Response_InitQuoteResponse::~Response_InitQuoteResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.InitQuoteResponse)
  SharedDtor();
}

void Response_InitQuoteResponse::SharedDtor() {
  targetinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Response_InitQuoteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response_InitQuoteResponse::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response_InitQuoteResponse& Response_InitQuoteResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Response_InitQuoteResponse.base);
  return *internal_default_instance();
}


void Response_InitQuoteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.InitQuoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      targetinfo_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      gid_.ClearNonDefaultToEmptyNoArena();
    }
    errorcode_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response_InitQuoteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Response.InitQuoteResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errorcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes targetInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_targetinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes gid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.InitQuoteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.InitQuoteResponse)
  return false;
#undef DO_
}

void Response_InitQuoteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.InitQuoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional bytes targetInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->targetinfo(), output);
  }

  // optional bytes gid = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->gid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.InitQuoteResponse)
}

::google::protobuf::uint8* Response_InitQuoteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Response.InitQuoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->errorcode(), target);
  }

  // optional bytes targetInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->targetinfo(), target);
  }

  // optional bytes gid = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->gid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Response.InitQuoteResponse)
  return target;
}

size_t Response_InitQuoteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.InitQuoteResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes targetInfo = 2;
    if (has_targetinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->targetinfo());
    }

    // optional bytes gid = 3;
    if (has_gid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->gid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response_InitQuoteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Response.InitQuoteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Response_InitQuoteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_InitQuoteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Response.InitQuoteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Response.InitQuoteResponse)
    MergeFrom(*source);
  }
}

void Response_InitQuoteResponse::MergeFrom(const Response_InitQuoteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.InitQuoteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_targetinfo();
      targetinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetinfo_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_gid();
      gid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gid_);
    }
    if (cached_has_bits & 0x00000004u) {
      errorcode_ = from.errorcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Response_InitQuoteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Response.InitQuoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_InitQuoteResponse::CopyFrom(const Response_InitQuoteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.InitQuoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_InitQuoteResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void Response_InitQuoteResponse::Swap(Response_InitQuoteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_InitQuoteResponse::InternalSwap(Response_InitQuoteResponse* other) {
  using std::swap;
  targetinfo_.Swap(&other->targetinfo_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gid_.Swap(&other->gid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errorcode_, other->errorcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response_InitQuoteResponse::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response_GetQuoteResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_GetQuoteResponse::kErrorCodeFieldNumber;
const int Response_GetQuoteResponse::kQuoteFieldNumber;
const int Response_GetQuoteResponse::kQeReportFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_GetQuoteResponse::Response_GetQuoteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Response_GetQuoteResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.GetQuoteResponse)
}
Response_GetQuoteResponse::Response_GetQuoteResponse(const Response_GetQuoteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  quote_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_quote()) {
    quote_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quote_);
  }
  qe_report_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_qe_report()) {
    qe_report_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qe_report_);
  }
  errorcode_ = from.errorcode_;
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.GetQuoteResponse)
}

void Response_GetQuoteResponse::SharedCtor() {
  quote_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qe_report_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
}

Response_GetQuoteResponse::~Response_GetQuoteResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.GetQuoteResponse)
  SharedDtor();
}

void Response_GetQuoteResponse::SharedDtor() {
  quote_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qe_report_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Response_GetQuoteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response_GetQuoteResponse::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response_GetQuoteResponse& Response_GetQuoteResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Response_GetQuoteResponse.base);
  return *internal_default_instance();
}


void Response_GetQuoteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.GetQuoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      quote_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      qe_report_.ClearNonDefaultToEmptyNoArena();
    }
    errorcode_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response_GetQuoteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Response.GetQuoteResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errorcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes quote = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_quote()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes qe_report = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_qe_report()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.GetQuoteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.GetQuoteResponse)
  return false;
#undef DO_
}

void Response_GetQuoteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.GetQuoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional bytes quote = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->quote(), output);
  }

  // optional bytes qe_report = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->qe_report(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.GetQuoteResponse)
}

::google::protobuf::uint8* Response_GetQuoteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Response.GetQuoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->errorcode(), target);
  }

  // optional bytes quote = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->quote(), target);
  }

  // optional bytes qe_report = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->qe_report(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Response.GetQuoteResponse)
  return target;
}

size_t Response_GetQuoteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.GetQuoteResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes quote = 2;
    if (has_quote()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->quote());
    }

    // optional bytes qe_report = 3;
    if (has_qe_report()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->qe_report());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response_GetQuoteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Response.GetQuoteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Response_GetQuoteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_GetQuoteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Response.GetQuoteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Response.GetQuoteResponse)
    MergeFrom(*source);
  }
}

void Response_GetQuoteResponse::MergeFrom(const Response_GetQuoteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.GetQuoteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_quote();
      quote_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quote_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_qe_report();
      qe_report_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qe_report_);
    }
    if (cached_has_bits & 0x00000004u) {
      errorcode_ = from.errorcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Response_GetQuoteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Response.GetQuoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_GetQuoteResponse::CopyFrom(const Response_GetQuoteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.GetQuoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_GetQuoteResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void Response_GetQuoteResponse::Swap(Response_GetQuoteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_GetQuoteResponse::InternalSwap(Response_GetQuoteResponse* other) {
  using std::swap;
  quote_.Swap(&other->quote_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  qe_report_.Swap(&other->qe_report_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errorcode_, other->errorcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response_GetQuoteResponse::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response_GetLaunchTokenResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_GetLaunchTokenResponse::kErrorCodeFieldNumber;
const int Response_GetLaunchTokenResponse::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_GetLaunchTokenResponse::Response_GetLaunchTokenResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Response_GetLaunchTokenResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.GetLaunchTokenResponse)
}
Response_GetLaunchTokenResponse::Response_GetLaunchTokenResponse(const Response_GetLaunchTokenResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  errorcode_ = from.errorcode_;
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.GetLaunchTokenResponse)
}

void Response_GetLaunchTokenResponse::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
}

Response_GetLaunchTokenResponse::~Response_GetLaunchTokenResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.GetLaunchTokenResponse)
  SharedDtor();
}

void Response_GetLaunchTokenResponse::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Response_GetLaunchTokenResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response_GetLaunchTokenResponse::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response_GetLaunchTokenResponse& Response_GetLaunchTokenResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Response_GetLaunchTokenResponse.base);
  return *internal_default_instance();
}


void Response_GetLaunchTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.GetLaunchTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      token_.ClearNonDefaultToEmptyNoArena();
    }
    errorcode_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response_GetLaunchTokenResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Response.GetLaunchTokenResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errorcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.GetLaunchTokenResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.GetLaunchTokenResponse)
  return false;
#undef DO_
}

void Response_GetLaunchTokenResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.GetLaunchTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional bytes token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.GetLaunchTokenResponse)
}

::google::protobuf::uint8* Response_GetLaunchTokenResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Response.GetLaunchTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->errorcode(), target);
  }

  // optional bytes token = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Response.GetLaunchTokenResponse)
  return target;
}

size_t Response_GetLaunchTokenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.GetLaunchTokenResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  // optional bytes token = 2;
  if (has_token()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response_GetLaunchTokenResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Response.GetLaunchTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Response_GetLaunchTokenResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_GetLaunchTokenResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Response.GetLaunchTokenResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Response.GetLaunchTokenResponse)
    MergeFrom(*source);
  }
}

void Response_GetLaunchTokenResponse::MergeFrom(const Response_GetLaunchTokenResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.GetLaunchTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      errorcode_ = from.errorcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Response_GetLaunchTokenResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Response.GetLaunchTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_GetLaunchTokenResponse::CopyFrom(const Response_GetLaunchTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.GetLaunchTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_GetLaunchTokenResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Response_GetLaunchTokenResponse::Swap(Response_GetLaunchTokenResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_GetLaunchTokenResponse::InternalSwap(Response_GetLaunchTokenResponse* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errorcode_, other->errorcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response_GetLaunchTokenResponse::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response_ReportAttestationErrorResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_ReportAttestationErrorResponse::kErrorCodeFieldNumber;
const int Response_ReportAttestationErrorResponse::kPlatformUpdateInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_ReportAttestationErrorResponse::Response_ReportAttestationErrorResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Response_ReportAttestationErrorResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.ReportAttestationErrorResponse)
}
Response_ReportAttestationErrorResponse::Response_ReportAttestationErrorResponse(const Response_ReportAttestationErrorResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  platform_update_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_platform_update_info()) {
    platform_update_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_update_info_);
  }
  errorcode_ = from.errorcode_;
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.ReportAttestationErrorResponse)
}

void Response_ReportAttestationErrorResponse::SharedCtor() {
  platform_update_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
}

Response_ReportAttestationErrorResponse::~Response_ReportAttestationErrorResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.ReportAttestationErrorResponse)
  SharedDtor();
}

void Response_ReportAttestationErrorResponse::SharedDtor() {
  platform_update_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Response_ReportAttestationErrorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response_ReportAttestationErrorResponse::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response_ReportAttestationErrorResponse& Response_ReportAttestationErrorResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Response_ReportAttestationErrorResponse.base);
  return *internal_default_instance();
}


void Response_ReportAttestationErrorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.ReportAttestationErrorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      platform_update_info_.ClearNonDefaultToEmptyNoArena();
    }
    errorcode_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response_ReportAttestationErrorResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Response.ReportAttestationErrorResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errorcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes platform_update_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_platform_update_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.ReportAttestationErrorResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.ReportAttestationErrorResponse)
  return false;
#undef DO_
}

void Response_ReportAttestationErrorResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.ReportAttestationErrorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional bytes platform_update_info = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->platform_update_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.ReportAttestationErrorResponse)
}

::google::protobuf::uint8* Response_ReportAttestationErrorResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Response.ReportAttestationErrorResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->errorcode(), target);
  }

  // optional bytes platform_update_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->platform_update_info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Response.ReportAttestationErrorResponse)
  return target;
}

size_t Response_ReportAttestationErrorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.ReportAttestationErrorResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  // optional bytes platform_update_info = 2;
  if (has_platform_update_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->platform_update_info());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response_ReportAttestationErrorResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Response.ReportAttestationErrorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Response_ReportAttestationErrorResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_ReportAttestationErrorResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Response.ReportAttestationErrorResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Response.ReportAttestationErrorResponse)
    MergeFrom(*source);
  }
}

void Response_ReportAttestationErrorResponse::MergeFrom(const Response_ReportAttestationErrorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.ReportAttestationErrorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_platform_update_info();
      platform_update_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_update_info_);
    }
    if (cached_has_bits & 0x00000002u) {
      errorcode_ = from.errorcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Response_ReportAttestationErrorResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Response.ReportAttestationErrorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_ReportAttestationErrorResponse::CopyFrom(const Response_ReportAttestationErrorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.ReportAttestationErrorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_ReportAttestationErrorResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Response_ReportAttestationErrorResponse::Swap(Response_ReportAttestationErrorResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_ReportAttestationErrorResponse::InternalSwap(Response_ReportAttestationErrorResponse* other) {
  using std::swap;
  platform_update_info_.Swap(&other->platform_update_info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errorcode_, other->errorcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response_ReportAttestationErrorResponse::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response_CreateSessionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_CreateSessionResponse::kErrorCodeFieldNumber;
const int Response_CreateSessionResponse::kSessionIdFieldNumber;
const int Response_CreateSessionResponse::kSeDhMsg1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_CreateSessionResponse::Response_CreateSessionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Response_CreateSessionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.CreateSessionResponse)
}
Response_CreateSessionResponse::Response_CreateSessionResponse(const Response_CreateSessionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  se_dh_msg1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_se_dh_msg1()) {
    se_dh_msg1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.se_dh_msg1_);
  }
  ::memcpy(&session_id_, &from.session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&errorcode_) -
    reinterpret_cast<char*>(&session_id_)) + sizeof(errorcode_));
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.CreateSessionResponse)
}

void Response_CreateSessionResponse::SharedCtor() {
  se_dh_msg1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_ = 0u;
  errorcode_ = 1u;
}

Response_CreateSessionResponse::~Response_CreateSessionResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.CreateSessionResponse)
  SharedDtor();
}

void Response_CreateSessionResponse::SharedDtor() {
  se_dh_msg1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Response_CreateSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response_CreateSessionResponse::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response_CreateSessionResponse& Response_CreateSessionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Response_CreateSessionResponse.base);
  return *internal_default_instance();
}


void Response_CreateSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.CreateSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    se_dh_msg1_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    session_id_ = 0u;
    errorcode_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response_CreateSessionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Response.CreateSessionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errorcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 session_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_session_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes se_dh_msg1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_se_dh_msg1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.CreateSessionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.CreateSessionResponse)
  return false;
#undef DO_
}

void Response_CreateSessionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.CreateSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional uint32 session_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->session_id(), output);
  }

  // optional bytes se_dh_msg1 = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->se_dh_msg1(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.CreateSessionResponse)
}

::google::protobuf::uint8* Response_CreateSessionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Response.CreateSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->errorcode(), target);
  }

  // optional uint32 session_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->session_id(), target);
  }

  // optional bytes se_dh_msg1 = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->se_dh_msg1(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Response.CreateSessionResponse)
  return target;
}

size_t Response_CreateSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.CreateSessionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes se_dh_msg1 = 3;
    if (has_se_dh_msg1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->se_dh_msg1());
    }

    // optional uint32 session_id = 2;
    if (has_session_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->session_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response_CreateSessionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Response.CreateSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Response_CreateSessionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_CreateSessionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Response.CreateSessionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Response.CreateSessionResponse)
    MergeFrom(*source);
  }
}

void Response_CreateSessionResponse::MergeFrom(const Response_CreateSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.CreateSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_se_dh_msg1();
      se_dh_msg1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.se_dh_msg1_);
    }
    if (cached_has_bits & 0x00000002u) {
      session_id_ = from.session_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      errorcode_ = from.errorcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Response_CreateSessionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Response.CreateSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_CreateSessionResponse::CopyFrom(const Response_CreateSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.CreateSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_CreateSessionResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void Response_CreateSessionResponse::Swap(Response_CreateSessionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_CreateSessionResponse::InternalSwap(Response_CreateSessionResponse* other) {
  using std::swap;
  se_dh_msg1_.Swap(&other->se_dh_msg1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(session_id_, other->session_id_);
  swap(errorcode_, other->errorcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response_CreateSessionResponse::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response_InvokeServiceResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_InvokeServiceResponse::kErrorCodeFieldNumber;
const int Response_InvokeServiceResponse::kPseMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_InvokeServiceResponse::Response_InvokeServiceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Response_InvokeServiceResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.InvokeServiceResponse)
}
Response_InvokeServiceResponse::Response_InvokeServiceResponse(const Response_InvokeServiceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pse_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pse_message()) {
    pse_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pse_message_);
  }
  errorcode_ = from.errorcode_;
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.InvokeServiceResponse)
}

void Response_InvokeServiceResponse::SharedCtor() {
  pse_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
}

Response_InvokeServiceResponse::~Response_InvokeServiceResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.InvokeServiceResponse)
  SharedDtor();
}

void Response_InvokeServiceResponse::SharedDtor() {
  pse_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Response_InvokeServiceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response_InvokeServiceResponse::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response_InvokeServiceResponse& Response_InvokeServiceResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Response_InvokeServiceResponse.base);
  return *internal_default_instance();
}


void Response_InvokeServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.InvokeServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      pse_message_.ClearNonDefaultToEmptyNoArena();
    }
    errorcode_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response_InvokeServiceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Response.InvokeServiceResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errorcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pse_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pse_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.InvokeServiceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.InvokeServiceResponse)
  return false;
#undef DO_
}

void Response_InvokeServiceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.InvokeServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional bytes pse_message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pse_message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.InvokeServiceResponse)
}

::google::protobuf::uint8* Response_InvokeServiceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Response.InvokeServiceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->errorcode(), target);
  }

  // optional bytes pse_message = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pse_message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Response.InvokeServiceResponse)
  return target;
}

size_t Response_InvokeServiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.InvokeServiceResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  // optional bytes pse_message = 2;
  if (has_pse_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pse_message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response_InvokeServiceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Response.InvokeServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Response_InvokeServiceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_InvokeServiceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Response.InvokeServiceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Response.InvokeServiceResponse)
    MergeFrom(*source);
  }
}

void Response_InvokeServiceResponse::MergeFrom(const Response_InvokeServiceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.InvokeServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pse_message();
      pse_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pse_message_);
    }
    if (cached_has_bits & 0x00000002u) {
      errorcode_ = from.errorcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Response_InvokeServiceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Response.InvokeServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_InvokeServiceResponse::CopyFrom(const Response_InvokeServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.InvokeServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_InvokeServiceResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Response_InvokeServiceResponse::Swap(Response_InvokeServiceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_InvokeServiceResponse::InternalSwap(Response_InvokeServiceResponse* other) {
  using std::swap;
  pse_message_.Swap(&other->pse_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errorcode_, other->errorcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response_InvokeServiceResponse::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response_ExchangeReportResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_ExchangeReportResponse::kErrorCodeFieldNumber;
const int Response_ExchangeReportResponse::kSeDhMsg3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_ExchangeReportResponse::Response_ExchangeReportResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Response_ExchangeReportResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.ExchangeReportResponse)
}
Response_ExchangeReportResponse::Response_ExchangeReportResponse(const Response_ExchangeReportResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  se_dh_msg3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_se_dh_msg3()) {
    se_dh_msg3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.se_dh_msg3_);
  }
  errorcode_ = from.errorcode_;
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.ExchangeReportResponse)
}

void Response_ExchangeReportResponse::SharedCtor() {
  se_dh_msg3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
}

Response_ExchangeReportResponse::~Response_ExchangeReportResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.ExchangeReportResponse)
  SharedDtor();
}

void Response_ExchangeReportResponse::SharedDtor() {
  se_dh_msg3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Response_ExchangeReportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response_ExchangeReportResponse::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response_ExchangeReportResponse& Response_ExchangeReportResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Response_ExchangeReportResponse.base);
  return *internal_default_instance();
}


void Response_ExchangeReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.ExchangeReportResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      se_dh_msg3_.ClearNonDefaultToEmptyNoArena();
    }
    errorcode_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response_ExchangeReportResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Response.ExchangeReportResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errorcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes se_dh_msg3 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_se_dh_msg3()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.ExchangeReportResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.ExchangeReportResponse)
  return false;
#undef DO_
}

void Response_ExchangeReportResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.ExchangeReportResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional bytes se_dh_msg3 = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->se_dh_msg3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.ExchangeReportResponse)
}

::google::protobuf::uint8* Response_ExchangeReportResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Response.ExchangeReportResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->errorcode(), target);
  }

  // optional bytes se_dh_msg3 = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->se_dh_msg3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Response.ExchangeReportResponse)
  return target;
}

size_t Response_ExchangeReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.ExchangeReportResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  // optional bytes se_dh_msg3 = 2;
  if (has_se_dh_msg3()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->se_dh_msg3());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response_ExchangeReportResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Response.ExchangeReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Response_ExchangeReportResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_ExchangeReportResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Response.ExchangeReportResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Response.ExchangeReportResponse)
    MergeFrom(*source);
  }
}

void Response_ExchangeReportResponse::MergeFrom(const Response_ExchangeReportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.ExchangeReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_se_dh_msg3();
      se_dh_msg3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.se_dh_msg3_);
    }
    if (cached_has_bits & 0x00000002u) {
      errorcode_ = from.errorcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Response_ExchangeReportResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Response.ExchangeReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_ExchangeReportResponse::CopyFrom(const Response_ExchangeReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.ExchangeReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_ExchangeReportResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Response_ExchangeReportResponse::Swap(Response_ExchangeReportResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_ExchangeReportResponse::InternalSwap(Response_ExchangeReportResponse* other) {
  using std::swap;
  se_dh_msg3_.Swap(&other->se_dh_msg3_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errorcode_, other->errorcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response_ExchangeReportResponse::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response_CloseSessionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_CloseSessionResponse::kErrorCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_CloseSessionResponse::Response_CloseSessionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Response_CloseSessionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.CloseSessionResponse)
}
Response_CloseSessionResponse::Response_CloseSessionResponse(const Response_CloseSessionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errorcode_ = from.errorcode_;
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.CloseSessionResponse)
}

void Response_CloseSessionResponse::SharedCtor() {
  errorcode_ = 1u;
}

Response_CloseSessionResponse::~Response_CloseSessionResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.CloseSessionResponse)
  SharedDtor();
}

void Response_CloseSessionResponse::SharedDtor() {
}

void Response_CloseSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response_CloseSessionResponse::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response_CloseSessionResponse& Response_CloseSessionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Response_CloseSessionResponse.base);
  return *internal_default_instance();
}


void Response_CloseSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.CloseSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errorcode_ = 1u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response_CloseSessionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Response.CloseSessionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errorcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.CloseSessionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.CloseSessionResponse)
  return false;
#undef DO_
}

void Response_CloseSessionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.CloseSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.CloseSessionResponse)
}

::google::protobuf::uint8* Response_CloseSessionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Response.CloseSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->errorcode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Response.CloseSessionResponse)
  return target;
}

size_t Response_CloseSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.CloseSessionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response_CloseSessionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Response.CloseSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Response_CloseSessionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_CloseSessionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Response.CloseSessionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Response.CloseSessionResponse)
    MergeFrom(*source);
  }
}

void Response_CloseSessionResponse::MergeFrom(const Response_CloseSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.CloseSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errorcode()) {
    set_errorcode(from.errorcode());
  }
}

void Response_CloseSessionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Response.CloseSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_CloseSessionResponse::CopyFrom(const Response_CloseSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.CloseSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_CloseSessionResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Response_CloseSessionResponse::Swap(Response_CloseSessionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_CloseSessionResponse::InternalSwap(Response_CloseSessionResponse* other) {
  using std::swap;
  swap(errorcode_, other->errorcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response_CloseSessionResponse::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response_GetPsCapResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_GetPsCapResponse::kErrorCodeFieldNumber;
const int Response_GetPsCapResponse::kPsCapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_GetPsCapResponse::Response_GetPsCapResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Response_GetPsCapResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.GetPsCapResponse)
}
Response_GetPsCapResponse::Response_GetPsCapResponse(const Response_GetPsCapResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ps_cap_, &from.ps_cap_,
    static_cast<size_t>(reinterpret_cast<char*>(&errorcode_) -
    reinterpret_cast<char*>(&ps_cap_)) + sizeof(errorcode_));
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.GetPsCapResponse)
}

void Response_GetPsCapResponse::SharedCtor() {
  ps_cap_ = GOOGLE_ULONGLONG(0);
  errorcode_ = 1u;
}

Response_GetPsCapResponse::~Response_GetPsCapResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.GetPsCapResponse)
  SharedDtor();
}

void Response_GetPsCapResponse::SharedDtor() {
}

void Response_GetPsCapResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response_GetPsCapResponse::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response_GetPsCapResponse& Response_GetPsCapResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Response_GetPsCapResponse.base);
  return *internal_default_instance();
}


void Response_GetPsCapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.GetPsCapResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ps_cap_ = GOOGLE_ULONGLONG(0);
    errorcode_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response_GetPsCapResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Response.GetPsCapResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errorcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 ps_cap = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ps_cap();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ps_cap_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.GetPsCapResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.GetPsCapResponse)
  return false;
#undef DO_
}

void Response_GetPsCapResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.GetPsCapResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional uint64 ps_cap = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ps_cap(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.GetPsCapResponse)
}

::google::protobuf::uint8* Response_GetPsCapResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Response.GetPsCapResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->errorcode(), target);
  }

  // optional uint64 ps_cap = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ps_cap(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Response.GetPsCapResponse)
  return target;
}

size_t Response_GetPsCapResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.GetPsCapResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  // optional uint64 ps_cap = 2;
  if (has_ps_cap()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ps_cap());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response_GetPsCapResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Response.GetPsCapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Response_GetPsCapResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_GetPsCapResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Response.GetPsCapResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Response.GetPsCapResponse)
    MergeFrom(*source);
  }
}

void Response_GetPsCapResponse::MergeFrom(const Response_GetPsCapResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.GetPsCapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      ps_cap_ = from.ps_cap_;
    }
    if (cached_has_bits & 0x00000002u) {
      errorcode_ = from.errorcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Response_GetPsCapResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Response.GetPsCapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_GetPsCapResponse::CopyFrom(const Response_GetPsCapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.GetPsCapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_GetPsCapResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Response_GetPsCapResponse::Swap(Response_GetPsCapResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_GetPsCapResponse::InternalSwap(Response_GetPsCapResponse* other) {
  using std::swap;
  swap(ps_cap_, other->ps_cap_);
  swap(errorcode_, other->errorcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response_GetPsCapResponse::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response_GetWhiteListSizeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_GetWhiteListSizeResponse::kErrorCodeFieldNumber;
const int Response_GetWhiteListSizeResponse::kWhiteListSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_GetWhiteListSizeResponse::Response_GetWhiteListSizeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Response_GetWhiteListSizeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.GetWhiteListSizeResponse)
}
Response_GetWhiteListSizeResponse::Response_GetWhiteListSizeResponse(const Response_GetWhiteListSizeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&white_list_size_, &from.white_list_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&errorcode_) -
    reinterpret_cast<char*>(&white_list_size_)) + sizeof(errorcode_));
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.GetWhiteListSizeResponse)
}

void Response_GetWhiteListSizeResponse::SharedCtor() {
  white_list_size_ = 0u;
  errorcode_ = 1u;
}

Response_GetWhiteListSizeResponse::~Response_GetWhiteListSizeResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.GetWhiteListSizeResponse)
  SharedDtor();
}

void Response_GetWhiteListSizeResponse::SharedDtor() {
}

void Response_GetWhiteListSizeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response_GetWhiteListSizeResponse::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response_GetWhiteListSizeResponse& Response_GetWhiteListSizeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Response_GetWhiteListSizeResponse.base);
  return *internal_default_instance();
}


void Response_GetWhiteListSizeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.GetWhiteListSizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    white_list_size_ = 0u;
    errorcode_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response_GetWhiteListSizeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Response.GetWhiteListSizeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errorcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 white_list_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_white_list_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &white_list_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.GetWhiteListSizeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.GetWhiteListSizeResponse)
  return false;
#undef DO_
}

void Response_GetWhiteListSizeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.GetWhiteListSizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional uint32 white_list_size = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->white_list_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.GetWhiteListSizeResponse)
}

::google::protobuf::uint8* Response_GetWhiteListSizeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Response.GetWhiteListSizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->errorcode(), target);
  }

  // optional uint32 white_list_size = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->white_list_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Response.GetWhiteListSizeResponse)
  return target;
}

size_t Response_GetWhiteListSizeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.GetWhiteListSizeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  // optional uint32 white_list_size = 2;
  if (has_white_list_size()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->white_list_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response_GetWhiteListSizeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Response.GetWhiteListSizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Response_GetWhiteListSizeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_GetWhiteListSizeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Response.GetWhiteListSizeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Response.GetWhiteListSizeResponse)
    MergeFrom(*source);
  }
}

void Response_GetWhiteListSizeResponse::MergeFrom(const Response_GetWhiteListSizeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.GetWhiteListSizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      white_list_size_ = from.white_list_size_;
    }
    if (cached_has_bits & 0x00000002u) {
      errorcode_ = from.errorcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Response_GetWhiteListSizeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Response.GetWhiteListSizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_GetWhiteListSizeResponse::CopyFrom(const Response_GetWhiteListSizeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.GetWhiteListSizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_GetWhiteListSizeResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Response_GetWhiteListSizeResponse::Swap(Response_GetWhiteListSizeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_GetWhiteListSizeResponse::InternalSwap(Response_GetWhiteListSizeResponse* other) {
  using std::swap;
  swap(white_list_size_, other->white_list_size_);
  swap(errorcode_, other->errorcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response_GetWhiteListSizeResponse::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response_GetWhiteListResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_GetWhiteListResponse::kErrorCodeFieldNumber;
const int Response_GetWhiteListResponse::kWhiteListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_GetWhiteListResponse::Response_GetWhiteListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Response_GetWhiteListResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.GetWhiteListResponse)
}
Response_GetWhiteListResponse::Response_GetWhiteListResponse(const Response_GetWhiteListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  white_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_white_list()) {
    white_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.white_list_);
  }
  errorcode_ = from.errorcode_;
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.GetWhiteListResponse)
}

void Response_GetWhiteListResponse::SharedCtor() {
  white_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
}

Response_GetWhiteListResponse::~Response_GetWhiteListResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.GetWhiteListResponse)
  SharedDtor();
}

void Response_GetWhiteListResponse::SharedDtor() {
  white_list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Response_GetWhiteListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response_GetWhiteListResponse::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response_GetWhiteListResponse& Response_GetWhiteListResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Response_GetWhiteListResponse.base);
  return *internal_default_instance();
}


void Response_GetWhiteListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.GetWhiteListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      white_list_.ClearNonDefaultToEmptyNoArena();
    }
    errorcode_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response_GetWhiteListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Response.GetWhiteListResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errorcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes white_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_white_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.GetWhiteListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.GetWhiteListResponse)
  return false;
#undef DO_
}

void Response_GetWhiteListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.GetWhiteListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional bytes white_list = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->white_list(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.GetWhiteListResponse)
}

::google::protobuf::uint8* Response_GetWhiteListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Response.GetWhiteListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->errorcode(), target);
  }

  // optional bytes white_list = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->white_list(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Response.GetWhiteListResponse)
  return target;
}

size_t Response_GetWhiteListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.GetWhiteListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  // optional bytes white_list = 2;
  if (has_white_list()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->white_list());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response_GetWhiteListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Response.GetWhiteListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Response_GetWhiteListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_GetWhiteListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Response.GetWhiteListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Response.GetWhiteListResponse)
    MergeFrom(*source);
  }
}

void Response_GetWhiteListResponse::MergeFrom(const Response_GetWhiteListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.GetWhiteListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_white_list();
      white_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.white_list_);
    }
    if (cached_has_bits & 0x00000002u) {
      errorcode_ = from.errorcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Response_GetWhiteListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Response.GetWhiteListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_GetWhiteListResponse::CopyFrom(const Response_GetWhiteListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.GetWhiteListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_GetWhiteListResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Response_GetWhiteListResponse::Swap(Response_GetWhiteListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_GetWhiteListResponse::InternalSwap(Response_GetWhiteListResponse* other) {
  using std::swap;
  white_list_.Swap(&other->white_list_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errorcode_, other->errorcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response_GetWhiteListResponse::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response_SGXGetExtendedEpidGroupIdResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_SGXGetExtendedEpidGroupIdResponse::kErrorCodeFieldNumber;
const int Response_SGXGetExtendedEpidGroupIdResponse::kXGroupIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_SGXGetExtendedEpidGroupIdResponse::Response_SGXGetExtendedEpidGroupIdResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Response_SGXGetExtendedEpidGroupIdResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
}
Response_SGXGetExtendedEpidGroupIdResponse::Response_SGXGetExtendedEpidGroupIdResponse(const Response_SGXGetExtendedEpidGroupIdResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_group_id_, &from.x_group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&errorcode_) -
    reinterpret_cast<char*>(&x_group_id_)) + sizeof(errorcode_));
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
}

void Response_SGXGetExtendedEpidGroupIdResponse::SharedCtor() {
  x_group_id_ = 0u;
  errorcode_ = 1u;
}

Response_SGXGetExtendedEpidGroupIdResponse::~Response_SGXGetExtendedEpidGroupIdResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  SharedDtor();
}

void Response_SGXGetExtendedEpidGroupIdResponse::SharedDtor() {
}

void Response_SGXGetExtendedEpidGroupIdResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response_SGXGetExtendedEpidGroupIdResponse::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response_SGXGetExtendedEpidGroupIdResponse& Response_SGXGetExtendedEpidGroupIdResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Response_SGXGetExtendedEpidGroupIdResponse.base);
  return *internal_default_instance();
}


void Response_SGXGetExtendedEpidGroupIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    x_group_id_ = 0u;
    errorcode_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response_SGXGetExtendedEpidGroupIdResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errorcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 x_group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  return false;
#undef DO_
}

void Response_SGXGetExtendedEpidGroupIdResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional uint32 x_group_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->x_group_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
}

::google::protobuf::uint8* Response_SGXGetExtendedEpidGroupIdResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->errorcode(), target);
  }

  // optional uint32 x_group_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->x_group_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  return target;
}

size_t Response_SGXGetExtendedEpidGroupIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  // optional uint32 x_group_id = 2;
  if (has_x_group_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->x_group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response_SGXGetExtendedEpidGroupIdResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Response_SGXGetExtendedEpidGroupIdResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_SGXGetExtendedEpidGroupIdResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
    MergeFrom(*source);
  }
}

void Response_SGXGetExtendedEpidGroupIdResponse::MergeFrom(const Response_SGXGetExtendedEpidGroupIdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      x_group_id_ = from.x_group_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      errorcode_ = from.errorcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Response_SGXGetExtendedEpidGroupIdResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_SGXGetExtendedEpidGroupIdResponse::CopyFrom(const Response_SGXGetExtendedEpidGroupIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_SGXGetExtendedEpidGroupIdResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Response_SGXGetExtendedEpidGroupIdResponse::Swap(Response_SGXGetExtendedEpidGroupIdResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_SGXGetExtendedEpidGroupIdResponse::InternalSwap(Response_SGXGetExtendedEpidGroupIdResponse* other) {
  using std::swap;
  swap(x_group_id_, other->x_group_id_);
  swap(errorcode_, other->errorcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response_SGXGetExtendedEpidGroupIdResponse::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response_SGXSwitchExtendedEpidGroupResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_SGXSwitchExtendedEpidGroupResponse::kErrorCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_SGXSwitchExtendedEpidGroupResponse::Response_SGXSwitchExtendedEpidGroupResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Response_SGXSwitchExtendedEpidGroupResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
}
Response_SGXSwitchExtendedEpidGroupResponse::Response_SGXSwitchExtendedEpidGroupResponse(const Response_SGXSwitchExtendedEpidGroupResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errorcode_ = from.errorcode_;
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
}

void Response_SGXSwitchExtendedEpidGroupResponse::SharedCtor() {
  errorcode_ = 1u;
}

Response_SGXSwitchExtendedEpidGroupResponse::~Response_SGXSwitchExtendedEpidGroupResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  SharedDtor();
}

void Response_SGXSwitchExtendedEpidGroupResponse::SharedDtor() {
}

void Response_SGXSwitchExtendedEpidGroupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response_SGXSwitchExtendedEpidGroupResponse::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response_SGXSwitchExtendedEpidGroupResponse& Response_SGXSwitchExtendedEpidGroupResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Response_SGXSwitchExtendedEpidGroupResponse.base);
  return *internal_default_instance();
}


void Response_SGXSwitchExtendedEpidGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errorcode_ = 1u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response_SGXSwitchExtendedEpidGroupResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errorcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  return false;
#undef DO_
}

void Response_SGXSwitchExtendedEpidGroupResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
}

::google::protobuf::uint8* Response_SGXSwitchExtendedEpidGroupResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->errorcode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  return target;
}

size_t Response_SGXSwitchExtendedEpidGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response_SGXSwitchExtendedEpidGroupResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Response_SGXSwitchExtendedEpidGroupResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_SGXSwitchExtendedEpidGroupResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
    MergeFrom(*source);
  }
}

void Response_SGXSwitchExtendedEpidGroupResponse::MergeFrom(const Response_SGXSwitchExtendedEpidGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errorcode()) {
    set_errorcode(from.errorcode());
  }
}

void Response_SGXSwitchExtendedEpidGroupResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_SGXSwitchExtendedEpidGroupResponse::CopyFrom(const Response_SGXSwitchExtendedEpidGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_SGXSwitchExtendedEpidGroupResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Response_SGXSwitchExtendedEpidGroupResponse::Swap(Response_SGXSwitchExtendedEpidGroupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_SGXSwitchExtendedEpidGroupResponse::InternalSwap(Response_SGXSwitchExtendedEpidGroupResponse* other) {
  using std::swap;
  swap(errorcode_, other->errorcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response_SGXSwitchExtendedEpidGroupResponse::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response_SGXRegisterResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_SGXRegisterResponse::kErrorCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_SGXRegisterResponse::Response_SGXRegisterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Response_SGXRegisterResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.SGXRegisterResponse)
}
Response_SGXRegisterResponse::Response_SGXRegisterResponse(const Response_SGXRegisterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errorcode_ = from.errorcode_;
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.SGXRegisterResponse)
}

void Response_SGXRegisterResponse::SharedCtor() {
  errorcode_ = 1u;
}

Response_SGXRegisterResponse::~Response_SGXRegisterResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.SGXRegisterResponse)
  SharedDtor();
}

void Response_SGXRegisterResponse::SharedDtor() {
}

void Response_SGXRegisterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response_SGXRegisterResponse::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response_SGXRegisterResponse& Response_SGXRegisterResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Response_SGXRegisterResponse.base);
  return *internal_default_instance();
}


void Response_SGXRegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.SGXRegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errorcode_ = 1u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response_SGXRegisterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Response.SGXRegisterResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errorcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.SGXRegisterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.SGXRegisterResponse)
  return false;
#undef DO_
}

void Response_SGXRegisterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.SGXRegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.SGXRegisterResponse)
}

::google::protobuf::uint8* Response_SGXRegisterResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Response.SGXRegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 errorCode = 1 [default = 1];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->errorcode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Response.SGXRegisterResponse)
  return target;
}

size_t Response_SGXRegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.SGXRegisterResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response_SGXRegisterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Response.SGXRegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Response_SGXRegisterResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_SGXRegisterResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Response.SGXRegisterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Response.SGXRegisterResponse)
    MergeFrom(*source);
  }
}

void Response_SGXRegisterResponse::MergeFrom(const Response_SGXRegisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.SGXRegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errorcode()) {
    set_errorcode(from.errorcode());
  }
}

void Response_SGXRegisterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Response.SGXRegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_SGXRegisterResponse::CopyFrom(const Response_SGXRegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.SGXRegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_SGXRegisterResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Response_SGXRegisterResponse::Swap(Response_SGXRegisterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_SGXRegisterResponse::InternalSwap(Response_SGXRegisterResponse* other) {
  using std::swap;
  swap(errorcode_, other->errorcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response_SGXRegisterResponse::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response::InitAsDefaultInstance() {
  ::aesm::message::_Response_default_instance_._instance.get_mutable()->initquoteres_ = const_cast< ::aesm::message::Response_InitQuoteResponse*>(
      ::aesm::message::Response_InitQuoteResponse::internal_default_instance());
  ::aesm::message::_Response_default_instance_._instance.get_mutable()->getquoteres_ = const_cast< ::aesm::message::Response_GetQuoteResponse*>(
      ::aesm::message::Response_GetQuoteResponse::internal_default_instance());
  ::aesm::message::_Response_default_instance_._instance.get_mutable()->getlictokenres_ = const_cast< ::aesm::message::Response_GetLaunchTokenResponse*>(
      ::aesm::message::Response_GetLaunchTokenResponse::internal_default_instance());
  ::aesm::message::_Response_default_instance_._instance.get_mutable()->reporterrres_ = const_cast< ::aesm::message::Response_ReportAttestationErrorResponse*>(
      ::aesm::message::Response_ReportAttestationErrorResponse::internal_default_instance());
  ::aesm::message::_Response_default_instance_._instance.get_mutable()->createsessionres_ = const_cast< ::aesm::message::Response_CreateSessionResponse*>(
      ::aesm::message::Response_CreateSessionResponse::internal_default_instance());
  ::aesm::message::_Response_default_instance_._instance.get_mutable()->invokeserviceres_ = const_cast< ::aesm::message::Response_InvokeServiceResponse*>(
      ::aesm::message::Response_InvokeServiceResponse::internal_default_instance());
  ::aesm::message::_Response_default_instance_._instance.get_mutable()->exchangereportres_ = const_cast< ::aesm::message::Response_ExchangeReportResponse*>(
      ::aesm::message::Response_ExchangeReportResponse::internal_default_instance());
  ::aesm::message::_Response_default_instance_._instance.get_mutable()->closesessionres_ = const_cast< ::aesm::message::Response_CloseSessionResponse*>(
      ::aesm::message::Response_CloseSessionResponse::internal_default_instance());
  ::aesm::message::_Response_default_instance_._instance.get_mutable()->getpscapres_ = const_cast< ::aesm::message::Response_GetPsCapResponse*>(
      ::aesm::message::Response_GetPsCapResponse::internal_default_instance());
  ::aesm::message::_Response_default_instance_._instance.get_mutable()->getwhitelistsizeres_ = const_cast< ::aesm::message::Response_GetWhiteListSizeResponse*>(
      ::aesm::message::Response_GetWhiteListSizeResponse::internal_default_instance());
  ::aesm::message::_Response_default_instance_._instance.get_mutable()->getwhitelistres_ = const_cast< ::aesm::message::Response_GetWhiteListResponse*>(
      ::aesm::message::Response_GetWhiteListResponse::internal_default_instance());
  ::aesm::message::_Response_default_instance_._instance.get_mutable()->sgxgetextendedepidgroupidres_ = const_cast< ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse*>(
      ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse::internal_default_instance());
  ::aesm::message::_Response_default_instance_._instance.get_mutable()->sgxswitchextendedepidgroupres_ = const_cast< ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse*>(
      ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse::internal_default_instance());
  ::aesm::message::_Response_default_instance_._instance.get_mutable()->sgxregisterres_ = const_cast< ::aesm::message::Response_SGXRegisterResponse*>(
      ::aesm::message::Response_SGXRegisterResponse::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kInitQuoteResFieldNumber;
const int Response::kGetQuoteResFieldNumber;
const int Response::kGetLicTokenResFieldNumber;
const int Response::kReportErrResFieldNumber;
const int Response::kCreateSessionResFieldNumber;
const int Response::kInvokeServiceResFieldNumber;
const int Response::kExchangeReportResFieldNumber;
const int Response::kCloseSessionResFieldNumber;
const int Response::kGetPsCapResFieldNumber;
const int Response::kGetWhiteListSizeResFieldNumber;
const int Response::kGetWhiteListResFieldNumber;
const int Response::kSgxGetExtendedEpidGroupIdResFieldNumber;
const int Response::kSgxSwitchExtendedEpidGroupResFieldNumber;
const int Response::kSgxRegisterResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2eproto::scc_info_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_initquoteres()) {
    initquoteres_ = new ::aesm::message::Response_InitQuoteResponse(*from.initquoteres_);
  } else {
    initquoteres_ = NULL;
  }
  if (from.has_getquoteres()) {
    getquoteres_ = new ::aesm::message::Response_GetQuoteResponse(*from.getquoteres_);
  } else {
    getquoteres_ = NULL;
  }
  if (from.has_getlictokenres()) {
    getlictokenres_ = new ::aesm::message::Response_GetLaunchTokenResponse(*from.getlictokenres_);
  } else {
    getlictokenres_ = NULL;
  }
  if (from.has_reporterrres()) {
    reporterrres_ = new ::aesm::message::Response_ReportAttestationErrorResponse(*from.reporterrres_);
  } else {
    reporterrres_ = NULL;
  }
  if (from.has_createsessionres()) {
    createsessionres_ = new ::aesm::message::Response_CreateSessionResponse(*from.createsessionres_);
  } else {
    createsessionres_ = NULL;
  }
  if (from.has_invokeserviceres()) {
    invokeserviceres_ = new ::aesm::message::Response_InvokeServiceResponse(*from.invokeserviceres_);
  } else {
    invokeserviceres_ = NULL;
  }
  if (from.has_exchangereportres()) {
    exchangereportres_ = new ::aesm::message::Response_ExchangeReportResponse(*from.exchangereportres_);
  } else {
    exchangereportres_ = NULL;
  }
  if (from.has_closesessionres()) {
    closesessionres_ = new ::aesm::message::Response_CloseSessionResponse(*from.closesessionres_);
  } else {
    closesessionres_ = NULL;
  }
  if (from.has_getpscapres()) {
    getpscapres_ = new ::aesm::message::Response_GetPsCapResponse(*from.getpscapres_);
  } else {
    getpscapres_ = NULL;
  }
  if (from.has_getwhitelistsizeres()) {
    getwhitelistsizeres_ = new ::aesm::message::Response_GetWhiteListSizeResponse(*from.getwhitelistsizeres_);
  } else {
    getwhitelistsizeres_ = NULL;
  }
  if (from.has_getwhitelistres()) {
    getwhitelistres_ = new ::aesm::message::Response_GetWhiteListResponse(*from.getwhitelistres_);
  } else {
    getwhitelistres_ = NULL;
  }
  if (from.has_sgxgetextendedepidgroupidres()) {
    sgxgetextendedepidgroupidres_ = new ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse(*from.sgxgetextendedepidgroupidres_);
  } else {
    sgxgetextendedepidgroupidres_ = NULL;
  }
  if (from.has_sgxswitchextendedepidgroupres()) {
    sgxswitchextendedepidgroupres_ = new ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse(*from.sgxswitchextendedepidgroupres_);
  } else {
    sgxswitchextendedepidgroupres_ = NULL;
  }
  if (from.has_sgxregisterres()) {
    sgxregisterres_ = new ::aesm::message::Response_SGXRegisterResponse(*from.sgxregisterres_);
  } else {
    sgxregisterres_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response)
}

void Response::SharedCtor() {
  ::memset(&initquoteres_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sgxregisterres_) -
      reinterpret_cast<char*>(&initquoteres_)) + sizeof(sgxregisterres_));
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:aesm.message.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  if (this != internal_default_instance()) delete initquoteres_;
  if (this != internal_default_instance()) delete getquoteres_;
  if (this != internal_default_instance()) delete getlictokenres_;
  if (this != internal_default_instance()) delete reporterrres_;
  if (this != internal_default_instance()) delete createsessionres_;
  if (this != internal_default_instance()) delete invokeserviceres_;
  if (this != internal_default_instance()) delete exchangereportres_;
  if (this != internal_default_instance()) delete closesessionres_;
  if (this != internal_default_instance()) delete getpscapres_;
  if (this != internal_default_instance()) delete getwhitelistsizeres_;
  if (this != internal_default_instance()) delete getwhitelistres_;
  if (this != internal_default_instance()) delete sgxgetextendedepidgroupidres_;
  if (this != internal_default_instance()) delete sgxswitchextendedepidgroupres_;
  if (this != internal_default_instance()) delete sgxregisterres_;
}

void Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  ::protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2eproto::scc_info_Response.base);
  return *internal_default_instance();
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(initquoteres_ != NULL);
      initquoteres_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(getquoteres_ != NULL);
      getquoteres_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(getlictokenres_ != NULL);
      getlictokenres_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(reporterrres_ != NULL);
      reporterrres_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(createsessionres_ != NULL);
      createsessionres_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(invokeserviceres_ != NULL);
      invokeserviceres_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(exchangereportres_ != NULL);
      exchangereportres_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(closesessionres_ != NULL);
      closesessionres_->Clear();
    }
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(getpscapres_ != NULL);
      getpscapres_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(getwhitelistsizeres_ != NULL);
      getwhitelistsizeres_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(getwhitelistres_ != NULL);
      getwhitelistres_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(sgxgetextendedepidgroupidres_ != NULL);
      sgxgetextendedepidgroupidres_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(sgxswitchextendedepidgroupres_ != NULL);
      sgxswitchextendedepidgroupres_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(sgxregisterres_ != NULL);
      sgxregisterres_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:aesm.message.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .aesm.message.Response.InitQuoteResponse initQuoteRes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_initquoteres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Response.GetQuoteResponse getQuoteRes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getquoteres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Response.GetLaunchTokenResponse getLicTokenRes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getlictokenres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Response.ReportAttestationErrorResponse reportErrRes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reporterrres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Response.CreateSessionResponse createSessionRes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_createsessionres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Response.InvokeServiceResponse invokeServiceRes = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_invokeserviceres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Response.ExchangeReportResponse exchangeReportRes = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exchangereportres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Response.CloseSessionResponse closeSessionRes = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_closesessionres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Response.GetPsCapResponse getPsCapRes = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getpscapres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Response.GetWhiteListSizeResponse getWhiteListSizeRes = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getwhitelistsizeres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Response.GetWhiteListResponse getWhiteListRes = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getwhitelistres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Response.SGXGetExtendedEpidGroupIdResponse sgxGetExtendedEpidGroupIdRes = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sgxgetextendedepidgroupidres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Response.SGXSwitchExtendedEpidGroupResponse sgxSwitchExtendedEpidGroupRes = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sgxswitchextendedepidgroupres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .aesm.message.Response.SGXRegisterResponse sgxRegisterRes = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sgxregisterres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .aesm.message.Response.InitQuoteResponse initQuoteRes = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_initquoteres(), output);
  }

  // optional .aesm.message.Response.GetQuoteResponse getQuoteRes = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_getquoteres(), output);
  }

  // optional .aesm.message.Response.GetLaunchTokenResponse getLicTokenRes = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_getlictokenres(), output);
  }

  // optional .aesm.message.Response.ReportAttestationErrorResponse reportErrRes = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_reporterrres(), output);
  }

  // optional .aesm.message.Response.CreateSessionResponse createSessionRes = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_createsessionres(), output);
  }

  // optional .aesm.message.Response.InvokeServiceResponse invokeServiceRes = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_invokeserviceres(), output);
  }

  // optional .aesm.message.Response.ExchangeReportResponse exchangeReportRes = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_exchangereportres(), output);
  }

  // optional .aesm.message.Response.CloseSessionResponse closeSessionRes = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_closesessionres(), output);
  }

  // optional .aesm.message.Response.GetPsCapResponse getPsCapRes = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_getpscapres(), output);
  }

  // optional .aesm.message.Response.GetWhiteListSizeResponse getWhiteListSizeRes = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_getwhitelistsizeres(), output);
  }

  // optional .aesm.message.Response.GetWhiteListResponse getWhiteListRes = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_getwhitelistres(), output);
  }

  // optional .aesm.message.Response.SGXGetExtendedEpidGroupIdResponse sgxGetExtendedEpidGroupIdRes = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_sgxgetextendedepidgroupidres(), output);
  }

  // optional .aesm.message.Response.SGXSwitchExtendedEpidGroupResponse sgxSwitchExtendedEpidGroupRes = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_sgxswitchextendedepidgroupres(), output);
  }

  // optional .aesm.message.Response.SGXRegisterResponse sgxRegisterRes = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_sgxregisterres(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:aesm.message.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:aesm.message.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .aesm.message.Response.InitQuoteResponse initQuoteRes = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_initquoteres(), deterministic, target);
  }

  // optional .aesm.message.Response.GetQuoteResponse getQuoteRes = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_getquoteres(), deterministic, target);
  }

  // optional .aesm.message.Response.GetLaunchTokenResponse getLicTokenRes = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_getlictokenres(), deterministic, target);
  }

  // optional .aesm.message.Response.ReportAttestationErrorResponse reportErrRes = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_reporterrres(), deterministic, target);
  }

  // optional .aesm.message.Response.CreateSessionResponse createSessionRes = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_createsessionres(), deterministic, target);
  }

  // optional .aesm.message.Response.InvokeServiceResponse invokeServiceRes = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_invokeserviceres(), deterministic, target);
  }

  // optional .aesm.message.Response.ExchangeReportResponse exchangeReportRes = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_exchangereportres(), deterministic, target);
  }

  // optional .aesm.message.Response.CloseSessionResponse closeSessionRes = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_closesessionres(), deterministic, target);
  }

  // optional .aesm.message.Response.GetPsCapResponse getPsCapRes = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_getpscapres(), deterministic, target);
  }

  // optional .aesm.message.Response.GetWhiteListSizeResponse getWhiteListSizeRes = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_getwhitelistsizeres(), deterministic, target);
  }

  // optional .aesm.message.Response.GetWhiteListResponse getWhiteListRes = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_getwhitelistres(), deterministic, target);
  }

  // optional .aesm.message.Response.SGXGetExtendedEpidGroupIdResponse sgxGetExtendedEpidGroupIdRes = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_sgxgetextendedepidgroupidres(), deterministic, target);
  }

  // optional .aesm.message.Response.SGXSwitchExtendedEpidGroupResponse sgxSwitchExtendedEpidGroupRes = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_sgxswitchextendedepidgroupres(), deterministic, target);
  }

  // optional .aesm.message.Response.SGXRegisterResponse sgxRegisterRes = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_sgxregisterres(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:aesm.message.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .aesm.message.Response.InitQuoteResponse initQuoteRes = 1;
    if (has_initquoteres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *initquoteres_);
    }

    // optional .aesm.message.Response.GetQuoteResponse getQuoteRes = 2;
    if (has_getquoteres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *getquoteres_);
    }

    // optional .aesm.message.Response.GetLaunchTokenResponse getLicTokenRes = 3;
    if (has_getlictokenres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *getlictokenres_);
    }

    // optional .aesm.message.Response.ReportAttestationErrorResponse reportErrRes = 4;
    if (has_reporterrres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reporterrres_);
    }

    // optional .aesm.message.Response.CreateSessionResponse createSessionRes = 5;
    if (has_createsessionres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *createsessionres_);
    }

    // optional .aesm.message.Response.InvokeServiceResponse invokeServiceRes = 6;
    if (has_invokeserviceres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *invokeserviceres_);
    }

    // optional .aesm.message.Response.ExchangeReportResponse exchangeReportRes = 7;
    if (has_exchangereportres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *exchangereportres_);
    }

    // optional .aesm.message.Response.CloseSessionResponse closeSessionRes = 8;
    if (has_closesessionres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *closesessionres_);
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional .aesm.message.Response.GetPsCapResponse getPsCapRes = 9;
    if (has_getpscapres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *getpscapres_);
    }

    // optional .aesm.message.Response.GetWhiteListSizeResponse getWhiteListSizeRes = 10;
    if (has_getwhitelistsizeres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *getwhitelistsizeres_);
    }

    // optional .aesm.message.Response.GetWhiteListResponse getWhiteListRes = 11;
    if (has_getwhitelistres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *getwhitelistres_);
    }

    // optional .aesm.message.Response.SGXGetExtendedEpidGroupIdResponse sgxGetExtendedEpidGroupIdRes = 12;
    if (has_sgxgetextendedepidgroupidres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *sgxgetextendedepidgroupidres_);
    }

    // optional .aesm.message.Response.SGXSwitchExtendedEpidGroupResponse sgxSwitchExtendedEpidGroupRes = 13;
    if (has_sgxswitchextendedepidgroupres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *sgxswitchextendedepidgroupres_);
    }

    // optional .aesm.message.Response.SGXRegisterResponse sgxRegisterRes = 14;
    if (has_sgxregisterres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *sgxregisterres_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:aesm.message.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:aesm.message.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:aesm.message.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_initquoteres()->::aesm::message::Response_InitQuoteResponse::MergeFrom(from.initquoteres());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_getquoteres()->::aesm::message::Response_GetQuoteResponse::MergeFrom(from.getquoteres());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_getlictokenres()->::aesm::message::Response_GetLaunchTokenResponse::MergeFrom(from.getlictokenres());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_reporterrres()->::aesm::message::Response_ReportAttestationErrorResponse::MergeFrom(from.reporterrres());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_createsessionres()->::aesm::message::Response_CreateSessionResponse::MergeFrom(from.createsessionres());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_invokeserviceres()->::aesm::message::Response_InvokeServiceResponse::MergeFrom(from.invokeserviceres());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_exchangereportres()->::aesm::message::Response_ExchangeReportResponse::MergeFrom(from.exchangereportres());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_closesessionres()->::aesm::message::Response_CloseSessionResponse::MergeFrom(from.closesessionres());
    }
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_getpscapres()->::aesm::message::Response_GetPsCapResponse::MergeFrom(from.getpscapres());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_getwhitelistsizeres()->::aesm::message::Response_GetWhiteListSizeResponse::MergeFrom(from.getwhitelistsizeres());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_getwhitelistres()->::aesm::message::Response_GetWhiteListResponse::MergeFrom(from.getwhitelistres());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_sgxgetextendedepidgroupidres()->::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse::MergeFrom(from.sgxgetextendedepidgroupidres());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_sgxswitchextendedepidgroupres()->::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse::MergeFrom(from.sgxswitchextendedepidgroupres());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_sgxregisterres()->::aesm::message::Response_SGXRegisterResponse::MergeFrom(from.sgxregisterres());
    }
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:aesm.message.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  if (has_initquoteres()) {
    if (!this->initquoteres_->IsInitialized()) return false;
  }
  if (has_getquoteres()) {
    if (!this->getquoteres_->IsInitialized()) return false;
  }
  if (has_getlictokenres()) {
    if (!this->getlictokenres_->IsInitialized()) return false;
  }
  if (has_reporterrres()) {
    if (!this->reporterrres_->IsInitialized()) return false;
  }
  if (has_createsessionres()) {
    if (!this->createsessionres_->IsInitialized()) return false;
  }
  if (has_invokeserviceres()) {
    if (!this->invokeserviceres_->IsInitialized()) return false;
  }
  if (has_exchangereportres()) {
    if (!this->exchangereportres_->IsInitialized()) return false;
  }
  if (has_closesessionres()) {
    if (!this->closesessionres_->IsInitialized()) return false;
  }
  if (has_getpscapres()) {
    if (!this->getpscapres_->IsInitialized()) return false;
  }
  if (has_getwhitelistsizeres()) {
    if (!this->getwhitelistsizeres_->IsInitialized()) return false;
  }
  if (has_getwhitelistres()) {
    if (!this->getwhitelistres_->IsInitialized()) return false;
  }
  if (has_sgxgetextendedepidgroupidres()) {
    if (!this->sgxgetextendedepidgroupidres_->IsInitialized()) return false;
  }
  if (has_sgxswitchextendedepidgroupres()) {
    if (!this->sgxswitchextendedepidgroupres_->IsInitialized()) return false;
  }
  if (has_sgxregisterres()) {
    if (!this->sgxregisterres_->IsInitialized()) return false;
  }
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  swap(initquoteres_, other->initquoteres_);
  swap(getquoteres_, other->getquoteres_);
  swap(getlictokenres_, other->getlictokenres_);
  swap(reporterrres_, other->reporterrres_);
  swap(createsessionres_, other->createsessionres_);
  swap(invokeserviceres_, other->invokeserviceres_);
  swap(exchangereportres_, other->exchangereportres_);
  swap(closesessionres_, other->closesessionres_);
  swap(getpscapres_, other->getpscapres_);
  swap(getwhitelistsizeres_, other->getwhitelistsizeres_);
  swap(getwhitelistres_, other->getwhitelistres_);
  swap(sgxgetextendedepidgroupidres_, other->sgxgetextendedepidgroupidres_);
  swap(sgxswitchextendedepidgroupres_, other->sgxswitchextendedepidgroupres_);
  swap(sgxregisterres_, other->sgxregisterres_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace message
}  // namespace aesm
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Request_InitQuoteRequest* Arena::CreateMaybeMessage< ::aesm::message::Request_InitQuoteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Request_InitQuoteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Request_GetQuoteRequest* Arena::CreateMaybeMessage< ::aesm::message::Request_GetQuoteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Request_GetQuoteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Request_GetLaunchTokenRequest* Arena::CreateMaybeMessage< ::aesm::message::Request_GetLaunchTokenRequest >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Request_GetLaunchTokenRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Request_ReportAttestationErrorRequest* Arena::CreateMaybeMessage< ::aesm::message::Request_ReportAttestationErrorRequest >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Request_ReportAttestationErrorRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Request_CreateSessionRequest* Arena::CreateMaybeMessage< ::aesm::message::Request_CreateSessionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Request_CreateSessionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Request_InvokeServiceRequest* Arena::CreateMaybeMessage< ::aesm::message::Request_InvokeServiceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Request_InvokeServiceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Request_ExchangeReportRequest* Arena::CreateMaybeMessage< ::aesm::message::Request_ExchangeReportRequest >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Request_ExchangeReportRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Request_CloseSessionRequest* Arena::CreateMaybeMessage< ::aesm::message::Request_CloseSessionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Request_CloseSessionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Request_GetPsCapRequest* Arena::CreateMaybeMessage< ::aesm::message::Request_GetPsCapRequest >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Request_GetPsCapRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Request_GetWhiteListSizeRequest* Arena::CreateMaybeMessage< ::aesm::message::Request_GetWhiteListSizeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Request_GetWhiteListSizeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Request_GetWhiteListRequest* Arena::CreateMaybeMessage< ::aesm::message::Request_GetWhiteListRequest >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Request_GetWhiteListRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest* Arena::CreateMaybeMessage< ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest* Arena::CreateMaybeMessage< ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Request_SGXRegisterRequest* Arena::CreateMaybeMessage< ::aesm::message::Request_SGXRegisterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Request_SGXRegisterRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Request* Arena::CreateMaybeMessage< ::aesm::message::Request >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Response_InitQuoteResponse* Arena::CreateMaybeMessage< ::aesm::message::Response_InitQuoteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Response_InitQuoteResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Response_GetQuoteResponse* Arena::CreateMaybeMessage< ::aesm::message::Response_GetQuoteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Response_GetQuoteResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Response_GetLaunchTokenResponse* Arena::CreateMaybeMessage< ::aesm::message::Response_GetLaunchTokenResponse >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Response_GetLaunchTokenResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Response_ReportAttestationErrorResponse* Arena::CreateMaybeMessage< ::aesm::message::Response_ReportAttestationErrorResponse >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Response_ReportAttestationErrorResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Response_CreateSessionResponse* Arena::CreateMaybeMessage< ::aesm::message::Response_CreateSessionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Response_CreateSessionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Response_InvokeServiceResponse* Arena::CreateMaybeMessage< ::aesm::message::Response_InvokeServiceResponse >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Response_InvokeServiceResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Response_ExchangeReportResponse* Arena::CreateMaybeMessage< ::aesm::message::Response_ExchangeReportResponse >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Response_ExchangeReportResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Response_CloseSessionResponse* Arena::CreateMaybeMessage< ::aesm::message::Response_CloseSessionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Response_CloseSessionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Response_GetPsCapResponse* Arena::CreateMaybeMessage< ::aesm::message::Response_GetPsCapResponse >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Response_GetPsCapResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Response_GetWhiteListSizeResponse* Arena::CreateMaybeMessage< ::aesm::message::Response_GetWhiteListSizeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Response_GetWhiteListSizeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Response_GetWhiteListResponse* Arena::CreateMaybeMessage< ::aesm::message::Response_GetWhiteListResponse >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Response_GetWhiteListResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse* Arena::CreateMaybeMessage< ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse* Arena::CreateMaybeMessage< ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Response_SGXRegisterResponse* Arena::CreateMaybeMessage< ::aesm::message::Response_SGXRegisterResponse >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Response_SGXRegisterResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::aesm::message::Response* Arena::CreateMaybeMessage< ::aesm::message::Response >(Arena* arena) {
  return Arena::CreateInternal< ::aesm::message::Response >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
