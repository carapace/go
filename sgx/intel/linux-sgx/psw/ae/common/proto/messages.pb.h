// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#ifndef PROTOBUF_INCLUDED_messages_2eproto
#define PROTOBUF_INCLUDED_messages_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2eproto 

namespace protobuf_messages_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[30];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_messages_2eproto
namespace aesm {
namespace message {
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Request_CloseSessionRequest;
class Request_CloseSessionRequestDefaultTypeInternal;
extern Request_CloseSessionRequestDefaultTypeInternal _Request_CloseSessionRequest_default_instance_;
class Request_CreateSessionRequest;
class Request_CreateSessionRequestDefaultTypeInternal;
extern Request_CreateSessionRequestDefaultTypeInternal _Request_CreateSessionRequest_default_instance_;
class Request_ExchangeReportRequest;
class Request_ExchangeReportRequestDefaultTypeInternal;
extern Request_ExchangeReportRequestDefaultTypeInternal _Request_ExchangeReportRequest_default_instance_;
class Request_GetLaunchTokenRequest;
class Request_GetLaunchTokenRequestDefaultTypeInternal;
extern Request_GetLaunchTokenRequestDefaultTypeInternal _Request_GetLaunchTokenRequest_default_instance_;
class Request_GetPsCapRequest;
class Request_GetPsCapRequestDefaultTypeInternal;
extern Request_GetPsCapRequestDefaultTypeInternal _Request_GetPsCapRequest_default_instance_;
class Request_GetQuoteRequest;
class Request_GetQuoteRequestDefaultTypeInternal;
extern Request_GetQuoteRequestDefaultTypeInternal _Request_GetQuoteRequest_default_instance_;
class Request_GetWhiteListRequest;
class Request_GetWhiteListRequestDefaultTypeInternal;
extern Request_GetWhiteListRequestDefaultTypeInternal _Request_GetWhiteListRequest_default_instance_;
class Request_GetWhiteListSizeRequest;
class Request_GetWhiteListSizeRequestDefaultTypeInternal;
extern Request_GetWhiteListSizeRequestDefaultTypeInternal _Request_GetWhiteListSizeRequest_default_instance_;
class Request_InitQuoteRequest;
class Request_InitQuoteRequestDefaultTypeInternal;
extern Request_InitQuoteRequestDefaultTypeInternal _Request_InitQuoteRequest_default_instance_;
class Request_InvokeServiceRequest;
class Request_InvokeServiceRequestDefaultTypeInternal;
extern Request_InvokeServiceRequestDefaultTypeInternal _Request_InvokeServiceRequest_default_instance_;
class Request_ReportAttestationErrorRequest;
class Request_ReportAttestationErrorRequestDefaultTypeInternal;
extern Request_ReportAttestationErrorRequestDefaultTypeInternal _Request_ReportAttestationErrorRequest_default_instance_;
class Request_SGXGetExtendedEpidGroupIdRequest;
class Request_SGXGetExtendedEpidGroupIdRequestDefaultTypeInternal;
extern Request_SGXGetExtendedEpidGroupIdRequestDefaultTypeInternal _Request_SGXGetExtendedEpidGroupIdRequest_default_instance_;
class Request_SGXRegisterRequest;
class Request_SGXRegisterRequestDefaultTypeInternal;
extern Request_SGXRegisterRequestDefaultTypeInternal _Request_SGXRegisterRequest_default_instance_;
class Request_SGXSwitchExtendedEpidGroupRequest;
class Request_SGXSwitchExtendedEpidGroupRequestDefaultTypeInternal;
extern Request_SGXSwitchExtendedEpidGroupRequestDefaultTypeInternal _Request_SGXSwitchExtendedEpidGroupRequest_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class Response_CloseSessionResponse;
class Response_CloseSessionResponseDefaultTypeInternal;
extern Response_CloseSessionResponseDefaultTypeInternal _Response_CloseSessionResponse_default_instance_;
class Response_CreateSessionResponse;
class Response_CreateSessionResponseDefaultTypeInternal;
extern Response_CreateSessionResponseDefaultTypeInternal _Response_CreateSessionResponse_default_instance_;
class Response_ExchangeReportResponse;
class Response_ExchangeReportResponseDefaultTypeInternal;
extern Response_ExchangeReportResponseDefaultTypeInternal _Response_ExchangeReportResponse_default_instance_;
class Response_GetLaunchTokenResponse;
class Response_GetLaunchTokenResponseDefaultTypeInternal;
extern Response_GetLaunchTokenResponseDefaultTypeInternal _Response_GetLaunchTokenResponse_default_instance_;
class Response_GetPsCapResponse;
class Response_GetPsCapResponseDefaultTypeInternal;
extern Response_GetPsCapResponseDefaultTypeInternal _Response_GetPsCapResponse_default_instance_;
class Response_GetQuoteResponse;
class Response_GetQuoteResponseDefaultTypeInternal;
extern Response_GetQuoteResponseDefaultTypeInternal _Response_GetQuoteResponse_default_instance_;
class Response_GetWhiteListResponse;
class Response_GetWhiteListResponseDefaultTypeInternal;
extern Response_GetWhiteListResponseDefaultTypeInternal _Response_GetWhiteListResponse_default_instance_;
class Response_GetWhiteListSizeResponse;
class Response_GetWhiteListSizeResponseDefaultTypeInternal;
extern Response_GetWhiteListSizeResponseDefaultTypeInternal _Response_GetWhiteListSizeResponse_default_instance_;
class Response_InitQuoteResponse;
class Response_InitQuoteResponseDefaultTypeInternal;
extern Response_InitQuoteResponseDefaultTypeInternal _Response_InitQuoteResponse_default_instance_;
class Response_InvokeServiceResponse;
class Response_InvokeServiceResponseDefaultTypeInternal;
extern Response_InvokeServiceResponseDefaultTypeInternal _Response_InvokeServiceResponse_default_instance_;
class Response_ReportAttestationErrorResponse;
class Response_ReportAttestationErrorResponseDefaultTypeInternal;
extern Response_ReportAttestationErrorResponseDefaultTypeInternal _Response_ReportAttestationErrorResponse_default_instance_;
class Response_SGXGetExtendedEpidGroupIdResponse;
class Response_SGXGetExtendedEpidGroupIdResponseDefaultTypeInternal;
extern Response_SGXGetExtendedEpidGroupIdResponseDefaultTypeInternal _Response_SGXGetExtendedEpidGroupIdResponse_default_instance_;
class Response_SGXRegisterResponse;
class Response_SGXRegisterResponseDefaultTypeInternal;
extern Response_SGXRegisterResponseDefaultTypeInternal _Response_SGXRegisterResponse_default_instance_;
class Response_SGXSwitchExtendedEpidGroupResponse;
class Response_SGXSwitchExtendedEpidGroupResponseDefaultTypeInternal;
extern Response_SGXSwitchExtendedEpidGroupResponseDefaultTypeInternal _Response_SGXSwitchExtendedEpidGroupResponse_default_instance_;
}  // namespace message
}  // namespace aesm
namespace google {
namespace protobuf {
template<> ::aesm::message::Request* Arena::CreateMaybeMessage<::aesm::message::Request>(Arena*);
template<> ::aesm::message::Request_CloseSessionRequest* Arena::CreateMaybeMessage<::aesm::message::Request_CloseSessionRequest>(Arena*);
template<> ::aesm::message::Request_CreateSessionRequest* Arena::CreateMaybeMessage<::aesm::message::Request_CreateSessionRequest>(Arena*);
template<> ::aesm::message::Request_ExchangeReportRequest* Arena::CreateMaybeMessage<::aesm::message::Request_ExchangeReportRequest>(Arena*);
template<> ::aesm::message::Request_GetLaunchTokenRequest* Arena::CreateMaybeMessage<::aesm::message::Request_GetLaunchTokenRequest>(Arena*);
template<> ::aesm::message::Request_GetPsCapRequest* Arena::CreateMaybeMessage<::aesm::message::Request_GetPsCapRequest>(Arena*);
template<> ::aesm::message::Request_GetQuoteRequest* Arena::CreateMaybeMessage<::aesm::message::Request_GetQuoteRequest>(Arena*);
template<> ::aesm::message::Request_GetWhiteListRequest* Arena::CreateMaybeMessage<::aesm::message::Request_GetWhiteListRequest>(Arena*);
template<> ::aesm::message::Request_GetWhiteListSizeRequest* Arena::CreateMaybeMessage<::aesm::message::Request_GetWhiteListSizeRequest>(Arena*);
template<> ::aesm::message::Request_InitQuoteRequest* Arena::CreateMaybeMessage<::aesm::message::Request_InitQuoteRequest>(Arena*);
template<> ::aesm::message::Request_InvokeServiceRequest* Arena::CreateMaybeMessage<::aesm::message::Request_InvokeServiceRequest>(Arena*);
template<> ::aesm::message::Request_ReportAttestationErrorRequest* Arena::CreateMaybeMessage<::aesm::message::Request_ReportAttestationErrorRequest>(Arena*);
template<> ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest* Arena::CreateMaybeMessage<::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest>(Arena*);
template<> ::aesm::message::Request_SGXRegisterRequest* Arena::CreateMaybeMessage<::aesm::message::Request_SGXRegisterRequest>(Arena*);
template<> ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest* Arena::CreateMaybeMessage<::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest>(Arena*);
template<> ::aesm::message::Response* Arena::CreateMaybeMessage<::aesm::message::Response>(Arena*);
template<> ::aesm::message::Response_CloseSessionResponse* Arena::CreateMaybeMessage<::aesm::message::Response_CloseSessionResponse>(Arena*);
template<> ::aesm::message::Response_CreateSessionResponse* Arena::CreateMaybeMessage<::aesm::message::Response_CreateSessionResponse>(Arena*);
template<> ::aesm::message::Response_ExchangeReportResponse* Arena::CreateMaybeMessage<::aesm::message::Response_ExchangeReportResponse>(Arena*);
template<> ::aesm::message::Response_GetLaunchTokenResponse* Arena::CreateMaybeMessage<::aesm::message::Response_GetLaunchTokenResponse>(Arena*);
template<> ::aesm::message::Response_GetPsCapResponse* Arena::CreateMaybeMessage<::aesm::message::Response_GetPsCapResponse>(Arena*);
template<> ::aesm::message::Response_GetQuoteResponse* Arena::CreateMaybeMessage<::aesm::message::Response_GetQuoteResponse>(Arena*);
template<> ::aesm::message::Response_GetWhiteListResponse* Arena::CreateMaybeMessage<::aesm::message::Response_GetWhiteListResponse>(Arena*);
template<> ::aesm::message::Response_GetWhiteListSizeResponse* Arena::CreateMaybeMessage<::aesm::message::Response_GetWhiteListSizeResponse>(Arena*);
template<> ::aesm::message::Response_InitQuoteResponse* Arena::CreateMaybeMessage<::aesm::message::Response_InitQuoteResponse>(Arena*);
template<> ::aesm::message::Response_InvokeServiceResponse* Arena::CreateMaybeMessage<::aesm::message::Response_InvokeServiceResponse>(Arena*);
template<> ::aesm::message::Response_ReportAttestationErrorResponse* Arena::CreateMaybeMessage<::aesm::message::Response_ReportAttestationErrorResponse>(Arena*);
template<> ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse* Arena::CreateMaybeMessage<::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse>(Arena*);
template<> ::aesm::message::Response_SGXRegisterResponse* Arena::CreateMaybeMessage<::aesm::message::Response_SGXRegisterResponse>(Arena*);
template<> ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse* Arena::CreateMaybeMessage<::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace aesm {
namespace message {

// ===================================================================

class Request_InitQuoteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Request.InitQuoteRequest) */ {
 public:
  Request_InitQuoteRequest();
  virtual ~Request_InitQuoteRequest();

  Request_InitQuoteRequest(const Request_InitQuoteRequest& from);

  inline Request_InitQuoteRequest& operator=(const Request_InitQuoteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request_InitQuoteRequest(Request_InitQuoteRequest&& from) noexcept
    : Request_InitQuoteRequest() {
    *this = ::std::move(from);
  }

  inline Request_InitQuoteRequest& operator=(Request_InitQuoteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_InitQuoteRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request_InitQuoteRequest* internal_default_instance() {
    return reinterpret_cast<const Request_InitQuoteRequest*>(
               &_Request_InitQuoteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Request_InitQuoteRequest* other);
  friend void swap(Request_InitQuoteRequest& a, Request_InitQuoteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request_InitQuoteRequest* New() const final {
    return CreateMaybeMessage<Request_InitQuoteRequest>(NULL);
  }

  Request_InitQuoteRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request_InitQuoteRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request_InitQuoteRequest& from);
  void MergeFrom(const Request_InitQuoteRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request_InitQuoteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 timeout = 9;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 9;
  ::google::protobuf::uint32 timeout() const;
  void set_timeout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Request.InitQuoteRequest)
 private:
  void set_has_timeout();
  void clear_has_timeout();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 timeout_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request_GetQuoteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Request.GetQuoteRequest) */ {
 public:
  Request_GetQuoteRequest();
  virtual ~Request_GetQuoteRequest();

  Request_GetQuoteRequest(const Request_GetQuoteRequest& from);

  inline Request_GetQuoteRequest& operator=(const Request_GetQuoteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request_GetQuoteRequest(Request_GetQuoteRequest&& from) noexcept
    : Request_GetQuoteRequest() {
    *this = ::std::move(from);
  }

  inline Request_GetQuoteRequest& operator=(Request_GetQuoteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_GetQuoteRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request_GetQuoteRequest* internal_default_instance() {
    return reinterpret_cast<const Request_GetQuoteRequest*>(
               &_Request_GetQuoteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Request_GetQuoteRequest* other);
  friend void swap(Request_GetQuoteRequest& a, Request_GetQuoteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request_GetQuoteRequest* New() const final {
    return CreateMaybeMessage<Request_GetQuoteRequest>(NULL);
  }

  Request_GetQuoteRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request_GetQuoteRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request_GetQuoteRequest& from);
  void MergeFrom(const Request_GetQuoteRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request_GetQuoteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes report = 1;
  bool has_report() const;
  void clear_report();
  static const int kReportFieldNumber = 1;
  const ::std::string& report() const;
  void set_report(const ::std::string& value);
  #if LANG_CXX11
  void set_report(::std::string&& value);
  #endif
  void set_report(const char* value);
  void set_report(const void* value, size_t size);
  ::std::string* mutable_report();
  ::std::string* release_report();
  void set_allocated_report(::std::string* report);

  // required bytes spid = 3;
  bool has_spid() const;
  void clear_spid();
  static const int kSpidFieldNumber = 3;
  const ::std::string& spid() const;
  void set_spid(const ::std::string& value);
  #if LANG_CXX11
  void set_spid(::std::string&& value);
  #endif
  void set_spid(const char* value);
  void set_spid(const void* value, size_t size);
  ::std::string* mutable_spid();
  ::std::string* release_spid();
  void set_allocated_spid(::std::string* spid);

  // optional bytes nonce = 4;
  bool has_nonce() const;
  void clear_nonce();
  static const int kNonceFieldNumber = 4;
  const ::std::string& nonce() const;
  void set_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_nonce(::std::string&& value);
  #endif
  void set_nonce(const char* value);
  void set_nonce(const void* value, size_t size);
  ::std::string* mutable_nonce();
  ::std::string* release_nonce();
  void set_allocated_nonce(::std::string* nonce);

  // optional bytes sig_rl = 5;
  bool has_sig_rl() const;
  void clear_sig_rl();
  static const int kSigRlFieldNumber = 5;
  const ::std::string& sig_rl() const;
  void set_sig_rl(const ::std::string& value);
  #if LANG_CXX11
  void set_sig_rl(::std::string&& value);
  #endif
  void set_sig_rl(const char* value);
  void set_sig_rl(const void* value, size_t size);
  ::std::string* mutable_sig_rl();
  ::std::string* release_sig_rl();
  void set_allocated_sig_rl(::std::string* sig_rl);

  // required uint32 quote_type = 2;
  bool has_quote_type() const;
  void clear_quote_type();
  static const int kQuoteTypeFieldNumber = 2;
  ::google::protobuf::uint32 quote_type() const;
  void set_quote_type(::google::protobuf::uint32 value);

  // required uint32 buf_size = 6;
  bool has_buf_size() const;
  void clear_buf_size();
  static const int kBufSizeFieldNumber = 6;
  ::google::protobuf::uint32 buf_size() const;
  void set_buf_size(::google::protobuf::uint32 value);

  // optional bool qe_report = 7;
  bool has_qe_report() const;
  void clear_qe_report();
  static const int kQeReportFieldNumber = 7;
  bool qe_report() const;
  void set_qe_report(bool value);

  // optional uint32 timeout = 9;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 9;
  ::google::protobuf::uint32 timeout() const;
  void set_timeout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Request.GetQuoteRequest)
 private:
  void set_has_report();
  void clear_has_report();
  void set_has_quote_type();
  void clear_has_quote_type();
  void set_has_spid();
  void clear_has_spid();
  void set_has_nonce();
  void clear_has_nonce();
  void set_has_sig_rl();
  void clear_has_sig_rl();
  void set_has_buf_size();
  void clear_has_buf_size();
  void set_has_qe_report();
  void clear_has_qe_report();
  void set_has_timeout();
  void clear_has_timeout();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr report_;
  ::google::protobuf::internal::ArenaStringPtr spid_;
  ::google::protobuf::internal::ArenaStringPtr nonce_;
  ::google::protobuf::internal::ArenaStringPtr sig_rl_;
  ::google::protobuf::uint32 quote_type_;
  ::google::protobuf::uint32 buf_size_;
  bool qe_report_;
  ::google::protobuf::uint32 timeout_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request_GetLaunchTokenRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Request.GetLaunchTokenRequest) */ {
 public:
  Request_GetLaunchTokenRequest();
  virtual ~Request_GetLaunchTokenRequest();

  Request_GetLaunchTokenRequest(const Request_GetLaunchTokenRequest& from);

  inline Request_GetLaunchTokenRequest& operator=(const Request_GetLaunchTokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request_GetLaunchTokenRequest(Request_GetLaunchTokenRequest&& from) noexcept
    : Request_GetLaunchTokenRequest() {
    *this = ::std::move(from);
  }

  inline Request_GetLaunchTokenRequest& operator=(Request_GetLaunchTokenRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_GetLaunchTokenRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request_GetLaunchTokenRequest* internal_default_instance() {
    return reinterpret_cast<const Request_GetLaunchTokenRequest*>(
               &_Request_GetLaunchTokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Request_GetLaunchTokenRequest* other);
  friend void swap(Request_GetLaunchTokenRequest& a, Request_GetLaunchTokenRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request_GetLaunchTokenRequest* New() const final {
    return CreateMaybeMessage<Request_GetLaunchTokenRequest>(NULL);
  }

  Request_GetLaunchTokenRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request_GetLaunchTokenRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request_GetLaunchTokenRequest& from);
  void MergeFrom(const Request_GetLaunchTokenRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request_GetLaunchTokenRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes mr_enclave = 1;
  bool has_mr_enclave() const;
  void clear_mr_enclave();
  static const int kMrEnclaveFieldNumber = 1;
  const ::std::string& mr_enclave() const;
  void set_mr_enclave(const ::std::string& value);
  #if LANG_CXX11
  void set_mr_enclave(::std::string&& value);
  #endif
  void set_mr_enclave(const char* value);
  void set_mr_enclave(const void* value, size_t size);
  ::std::string* mutable_mr_enclave();
  ::std::string* release_mr_enclave();
  void set_allocated_mr_enclave(::std::string* mr_enclave);

  // required bytes mr_signer = 2;
  bool has_mr_signer() const;
  void clear_mr_signer();
  static const int kMrSignerFieldNumber = 2;
  const ::std::string& mr_signer() const;
  void set_mr_signer(const ::std::string& value);
  #if LANG_CXX11
  void set_mr_signer(::std::string&& value);
  #endif
  void set_mr_signer(const char* value);
  void set_mr_signer(const void* value, size_t size);
  ::std::string* mutable_mr_signer();
  ::std::string* release_mr_signer();
  void set_allocated_mr_signer(::std::string* mr_signer);

  // required bytes se_attributes = 3;
  bool has_se_attributes() const;
  void clear_se_attributes();
  static const int kSeAttributesFieldNumber = 3;
  const ::std::string& se_attributes() const;
  void set_se_attributes(const ::std::string& value);
  #if LANG_CXX11
  void set_se_attributes(::std::string&& value);
  #endif
  void set_se_attributes(const char* value);
  void set_se_attributes(const void* value, size_t size);
  ::std::string* mutable_se_attributes();
  ::std::string* release_se_attributes();
  void set_allocated_se_attributes(::std::string* se_attributes);

  // optional uint32 timeout = 9;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 9;
  ::google::protobuf::uint32 timeout() const;
  void set_timeout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Request.GetLaunchTokenRequest)
 private:
  void set_has_mr_enclave();
  void clear_has_mr_enclave();
  void set_has_mr_signer();
  void clear_has_mr_signer();
  void set_has_se_attributes();
  void clear_has_se_attributes();
  void set_has_timeout();
  void clear_has_timeout();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr mr_enclave_;
  ::google::protobuf::internal::ArenaStringPtr mr_signer_;
  ::google::protobuf::internal::ArenaStringPtr se_attributes_;
  ::google::protobuf::uint32 timeout_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request_ReportAttestationErrorRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Request.ReportAttestationErrorRequest) */ {
 public:
  Request_ReportAttestationErrorRequest();
  virtual ~Request_ReportAttestationErrorRequest();

  Request_ReportAttestationErrorRequest(const Request_ReportAttestationErrorRequest& from);

  inline Request_ReportAttestationErrorRequest& operator=(const Request_ReportAttestationErrorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request_ReportAttestationErrorRequest(Request_ReportAttestationErrorRequest&& from) noexcept
    : Request_ReportAttestationErrorRequest() {
    *this = ::std::move(from);
  }

  inline Request_ReportAttestationErrorRequest& operator=(Request_ReportAttestationErrorRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_ReportAttestationErrorRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request_ReportAttestationErrorRequest* internal_default_instance() {
    return reinterpret_cast<const Request_ReportAttestationErrorRequest*>(
               &_Request_ReportAttestationErrorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Request_ReportAttestationErrorRequest* other);
  friend void swap(Request_ReportAttestationErrorRequest& a, Request_ReportAttestationErrorRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request_ReportAttestationErrorRequest* New() const final {
    return CreateMaybeMessage<Request_ReportAttestationErrorRequest>(NULL);
  }

  Request_ReportAttestationErrorRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request_ReportAttestationErrorRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request_ReportAttestationErrorRequest& from);
  void MergeFrom(const Request_ReportAttestationErrorRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request_ReportAttestationErrorRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes platform_info = 1;
  bool has_platform_info() const;
  void clear_platform_info();
  static const int kPlatformInfoFieldNumber = 1;
  const ::std::string& platform_info() const;
  void set_platform_info(const ::std::string& value);
  #if LANG_CXX11
  void set_platform_info(::std::string&& value);
  #endif
  void set_platform_info(const char* value);
  void set_platform_info(const void* value, size_t size);
  ::std::string* mutable_platform_info();
  ::std::string* release_platform_info();
  void set_allocated_platform_info(::std::string* platform_info);

  // required uint32 attestation_error_code = 2;
  bool has_attestation_error_code() const;
  void clear_attestation_error_code();
  static const int kAttestationErrorCodeFieldNumber = 2;
  ::google::protobuf::uint32 attestation_error_code() const;
  void set_attestation_error_code(::google::protobuf::uint32 value);

  // required uint32 update_info_size = 3;
  bool has_update_info_size() const;
  void clear_update_info_size();
  static const int kUpdateInfoSizeFieldNumber = 3;
  ::google::protobuf::uint32 update_info_size() const;
  void set_update_info_size(::google::protobuf::uint32 value);

  // optional uint32 timeout = 9;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 9;
  ::google::protobuf::uint32 timeout() const;
  void set_timeout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Request.ReportAttestationErrorRequest)
 private:
  void set_has_platform_info();
  void clear_has_platform_info();
  void set_has_attestation_error_code();
  void clear_has_attestation_error_code();
  void set_has_update_info_size();
  void clear_has_update_info_size();
  void set_has_timeout();
  void clear_has_timeout();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr platform_info_;
  ::google::protobuf::uint32 attestation_error_code_;
  ::google::protobuf::uint32 update_info_size_;
  ::google::protobuf::uint32 timeout_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request_CreateSessionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Request.CreateSessionRequest) */ {
 public:
  Request_CreateSessionRequest();
  virtual ~Request_CreateSessionRequest();

  Request_CreateSessionRequest(const Request_CreateSessionRequest& from);

  inline Request_CreateSessionRequest& operator=(const Request_CreateSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request_CreateSessionRequest(Request_CreateSessionRequest&& from) noexcept
    : Request_CreateSessionRequest() {
    *this = ::std::move(from);
  }

  inline Request_CreateSessionRequest& operator=(Request_CreateSessionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_CreateSessionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request_CreateSessionRequest* internal_default_instance() {
    return reinterpret_cast<const Request_CreateSessionRequest*>(
               &_Request_CreateSessionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Request_CreateSessionRequest* other);
  friend void swap(Request_CreateSessionRequest& a, Request_CreateSessionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request_CreateSessionRequest* New() const final {
    return CreateMaybeMessage<Request_CreateSessionRequest>(NULL);
  }

  Request_CreateSessionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request_CreateSessionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request_CreateSessionRequest& from);
  void MergeFrom(const Request_CreateSessionRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request_CreateSessionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dh_msg1_size = 1;
  bool has_dh_msg1_size() const;
  void clear_dh_msg1_size();
  static const int kDhMsg1SizeFieldNumber = 1;
  ::google::protobuf::uint32 dh_msg1_size() const;
  void set_dh_msg1_size(::google::protobuf::uint32 value);

  // optional uint32 timeout = 9;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 9;
  ::google::protobuf::uint32 timeout() const;
  void set_timeout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Request.CreateSessionRequest)
 private:
  void set_has_dh_msg1_size();
  void clear_has_dh_msg1_size();
  void set_has_timeout();
  void clear_has_timeout();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 dh_msg1_size_;
  ::google::protobuf::uint32 timeout_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request_InvokeServiceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Request.InvokeServiceRequest) */ {
 public:
  Request_InvokeServiceRequest();
  virtual ~Request_InvokeServiceRequest();

  Request_InvokeServiceRequest(const Request_InvokeServiceRequest& from);

  inline Request_InvokeServiceRequest& operator=(const Request_InvokeServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request_InvokeServiceRequest(Request_InvokeServiceRequest&& from) noexcept
    : Request_InvokeServiceRequest() {
    *this = ::std::move(from);
  }

  inline Request_InvokeServiceRequest& operator=(Request_InvokeServiceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_InvokeServiceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request_InvokeServiceRequest* internal_default_instance() {
    return reinterpret_cast<const Request_InvokeServiceRequest*>(
               &_Request_InvokeServiceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Request_InvokeServiceRequest* other);
  friend void swap(Request_InvokeServiceRequest& a, Request_InvokeServiceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request_InvokeServiceRequest* New() const final {
    return CreateMaybeMessage<Request_InvokeServiceRequest>(NULL);
  }

  Request_InvokeServiceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request_InvokeServiceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request_InvokeServiceRequest& from);
  void MergeFrom(const Request_InvokeServiceRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request_InvokeServiceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes pse_message = 1;
  bool has_pse_message() const;
  void clear_pse_message();
  static const int kPseMessageFieldNumber = 1;
  const ::std::string& pse_message() const;
  void set_pse_message(const ::std::string& value);
  #if LANG_CXX11
  void set_pse_message(::std::string&& value);
  #endif
  void set_pse_message(const char* value);
  void set_pse_message(const void* value, size_t size);
  ::std::string* mutable_pse_message();
  ::std::string* release_pse_message();
  void set_allocated_pse_message(::std::string* pse_message);

  // required uint32 pse_resp_size = 2;
  bool has_pse_resp_size() const;
  void clear_pse_resp_size();
  static const int kPseRespSizeFieldNumber = 2;
  ::google::protobuf::uint32 pse_resp_size() const;
  void set_pse_resp_size(::google::protobuf::uint32 value);

  // optional uint32 timeout = 9;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 9;
  ::google::protobuf::uint32 timeout() const;
  void set_timeout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Request.InvokeServiceRequest)
 private:
  void set_has_pse_message();
  void clear_has_pse_message();
  void set_has_pse_resp_size();
  void clear_has_pse_resp_size();
  void set_has_timeout();
  void clear_has_timeout();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr pse_message_;
  ::google::protobuf::uint32 pse_resp_size_;
  ::google::protobuf::uint32 timeout_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request_ExchangeReportRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Request.ExchangeReportRequest) */ {
 public:
  Request_ExchangeReportRequest();
  virtual ~Request_ExchangeReportRequest();

  Request_ExchangeReportRequest(const Request_ExchangeReportRequest& from);

  inline Request_ExchangeReportRequest& operator=(const Request_ExchangeReportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request_ExchangeReportRequest(Request_ExchangeReportRequest&& from) noexcept
    : Request_ExchangeReportRequest() {
    *this = ::std::move(from);
  }

  inline Request_ExchangeReportRequest& operator=(Request_ExchangeReportRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_ExchangeReportRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request_ExchangeReportRequest* internal_default_instance() {
    return reinterpret_cast<const Request_ExchangeReportRequest*>(
               &_Request_ExchangeReportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Request_ExchangeReportRequest* other);
  friend void swap(Request_ExchangeReportRequest& a, Request_ExchangeReportRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request_ExchangeReportRequest* New() const final {
    return CreateMaybeMessage<Request_ExchangeReportRequest>(NULL);
  }

  Request_ExchangeReportRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request_ExchangeReportRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request_ExchangeReportRequest& from);
  void MergeFrom(const Request_ExchangeReportRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request_ExchangeReportRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes se_dh_msg2 = 2;
  bool has_se_dh_msg2() const;
  void clear_se_dh_msg2();
  static const int kSeDhMsg2FieldNumber = 2;
  const ::std::string& se_dh_msg2() const;
  void set_se_dh_msg2(const ::std::string& value);
  #if LANG_CXX11
  void set_se_dh_msg2(::std::string&& value);
  #endif
  void set_se_dh_msg2(const char* value);
  void set_se_dh_msg2(const void* value, size_t size);
  ::std::string* mutable_se_dh_msg2();
  ::std::string* release_se_dh_msg2();
  void set_allocated_se_dh_msg2(::std::string* se_dh_msg2);

  // required uint32 session_id = 1;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // required uint32 se_dh_msg3_size = 3;
  bool has_se_dh_msg3_size() const;
  void clear_se_dh_msg3_size();
  static const int kSeDhMsg3SizeFieldNumber = 3;
  ::google::protobuf::uint32 se_dh_msg3_size() const;
  void set_se_dh_msg3_size(::google::protobuf::uint32 value);

  // optional uint32 timeout = 9;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 9;
  ::google::protobuf::uint32 timeout() const;
  void set_timeout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Request.ExchangeReportRequest)
 private:
  void set_has_session_id();
  void clear_has_session_id();
  void set_has_se_dh_msg2();
  void clear_has_se_dh_msg2();
  void set_has_se_dh_msg3_size();
  void clear_has_se_dh_msg3_size();
  void set_has_timeout();
  void clear_has_timeout();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr se_dh_msg2_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 se_dh_msg3_size_;
  ::google::protobuf::uint32 timeout_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request_CloseSessionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Request.CloseSessionRequest) */ {
 public:
  Request_CloseSessionRequest();
  virtual ~Request_CloseSessionRequest();

  Request_CloseSessionRequest(const Request_CloseSessionRequest& from);

  inline Request_CloseSessionRequest& operator=(const Request_CloseSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request_CloseSessionRequest(Request_CloseSessionRequest&& from) noexcept
    : Request_CloseSessionRequest() {
    *this = ::std::move(from);
  }

  inline Request_CloseSessionRequest& operator=(Request_CloseSessionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_CloseSessionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request_CloseSessionRequest* internal_default_instance() {
    return reinterpret_cast<const Request_CloseSessionRequest*>(
               &_Request_CloseSessionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(Request_CloseSessionRequest* other);
  friend void swap(Request_CloseSessionRequest& a, Request_CloseSessionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request_CloseSessionRequest* New() const final {
    return CreateMaybeMessage<Request_CloseSessionRequest>(NULL);
  }

  Request_CloseSessionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request_CloseSessionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request_CloseSessionRequest& from);
  void MergeFrom(const Request_CloseSessionRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request_CloseSessionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 session_id = 1;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // optional uint32 timeout = 9;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 9;
  ::google::protobuf::uint32 timeout() const;
  void set_timeout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Request.CloseSessionRequest)
 private:
  void set_has_session_id();
  void clear_has_session_id();
  void set_has_timeout();
  void clear_has_timeout();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 timeout_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request_GetPsCapRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Request.GetPsCapRequest) */ {
 public:
  Request_GetPsCapRequest();
  virtual ~Request_GetPsCapRequest();

  Request_GetPsCapRequest(const Request_GetPsCapRequest& from);

  inline Request_GetPsCapRequest& operator=(const Request_GetPsCapRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request_GetPsCapRequest(Request_GetPsCapRequest&& from) noexcept
    : Request_GetPsCapRequest() {
    *this = ::std::move(from);
  }

  inline Request_GetPsCapRequest& operator=(Request_GetPsCapRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_GetPsCapRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request_GetPsCapRequest* internal_default_instance() {
    return reinterpret_cast<const Request_GetPsCapRequest*>(
               &_Request_GetPsCapRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Request_GetPsCapRequest* other);
  friend void swap(Request_GetPsCapRequest& a, Request_GetPsCapRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request_GetPsCapRequest* New() const final {
    return CreateMaybeMessage<Request_GetPsCapRequest>(NULL);
  }

  Request_GetPsCapRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request_GetPsCapRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request_GetPsCapRequest& from);
  void MergeFrom(const Request_GetPsCapRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request_GetPsCapRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 timeout = 9;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 9;
  ::google::protobuf::uint32 timeout() const;
  void set_timeout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Request.GetPsCapRequest)
 private:
  void set_has_timeout();
  void clear_has_timeout();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 timeout_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request_GetWhiteListSizeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Request.GetWhiteListSizeRequest) */ {
 public:
  Request_GetWhiteListSizeRequest();
  virtual ~Request_GetWhiteListSizeRequest();

  Request_GetWhiteListSizeRequest(const Request_GetWhiteListSizeRequest& from);

  inline Request_GetWhiteListSizeRequest& operator=(const Request_GetWhiteListSizeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request_GetWhiteListSizeRequest(Request_GetWhiteListSizeRequest&& from) noexcept
    : Request_GetWhiteListSizeRequest() {
    *this = ::std::move(from);
  }

  inline Request_GetWhiteListSizeRequest& operator=(Request_GetWhiteListSizeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_GetWhiteListSizeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request_GetWhiteListSizeRequest* internal_default_instance() {
    return reinterpret_cast<const Request_GetWhiteListSizeRequest*>(
               &_Request_GetWhiteListSizeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Request_GetWhiteListSizeRequest* other);
  friend void swap(Request_GetWhiteListSizeRequest& a, Request_GetWhiteListSizeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request_GetWhiteListSizeRequest* New() const final {
    return CreateMaybeMessage<Request_GetWhiteListSizeRequest>(NULL);
  }

  Request_GetWhiteListSizeRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request_GetWhiteListSizeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request_GetWhiteListSizeRequest& from);
  void MergeFrom(const Request_GetWhiteListSizeRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request_GetWhiteListSizeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 timeout = 9;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 9;
  ::google::protobuf::uint32 timeout() const;
  void set_timeout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Request.GetWhiteListSizeRequest)
 private:
  void set_has_timeout();
  void clear_has_timeout();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 timeout_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request_GetWhiteListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Request.GetWhiteListRequest) */ {
 public:
  Request_GetWhiteListRequest();
  virtual ~Request_GetWhiteListRequest();

  Request_GetWhiteListRequest(const Request_GetWhiteListRequest& from);

  inline Request_GetWhiteListRequest& operator=(const Request_GetWhiteListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request_GetWhiteListRequest(Request_GetWhiteListRequest&& from) noexcept
    : Request_GetWhiteListRequest() {
    *this = ::std::move(from);
  }

  inline Request_GetWhiteListRequest& operator=(Request_GetWhiteListRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_GetWhiteListRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request_GetWhiteListRequest* internal_default_instance() {
    return reinterpret_cast<const Request_GetWhiteListRequest*>(
               &_Request_GetWhiteListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(Request_GetWhiteListRequest* other);
  friend void swap(Request_GetWhiteListRequest& a, Request_GetWhiteListRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request_GetWhiteListRequest* New() const final {
    return CreateMaybeMessage<Request_GetWhiteListRequest>(NULL);
  }

  Request_GetWhiteListRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request_GetWhiteListRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request_GetWhiteListRequest& from);
  void MergeFrom(const Request_GetWhiteListRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request_GetWhiteListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 white_list_size = 1;
  bool has_white_list_size() const;
  void clear_white_list_size();
  static const int kWhiteListSizeFieldNumber = 1;
  ::google::protobuf::uint32 white_list_size() const;
  void set_white_list_size(::google::protobuf::uint32 value);

  // optional uint32 timeout = 9;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 9;
  ::google::protobuf::uint32 timeout() const;
  void set_timeout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Request.GetWhiteListRequest)
 private:
  void set_has_white_list_size();
  void clear_has_white_list_size();
  void set_has_timeout();
  void clear_has_timeout();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 white_list_size_;
  ::google::protobuf::uint32 timeout_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request_SGXGetExtendedEpidGroupIdRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest) */ {
 public:
  Request_SGXGetExtendedEpidGroupIdRequest();
  virtual ~Request_SGXGetExtendedEpidGroupIdRequest();

  Request_SGXGetExtendedEpidGroupIdRequest(const Request_SGXGetExtendedEpidGroupIdRequest& from);

  inline Request_SGXGetExtendedEpidGroupIdRequest& operator=(const Request_SGXGetExtendedEpidGroupIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request_SGXGetExtendedEpidGroupIdRequest(Request_SGXGetExtendedEpidGroupIdRequest&& from) noexcept
    : Request_SGXGetExtendedEpidGroupIdRequest() {
    *this = ::std::move(from);
  }

  inline Request_SGXGetExtendedEpidGroupIdRequest& operator=(Request_SGXGetExtendedEpidGroupIdRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_SGXGetExtendedEpidGroupIdRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request_SGXGetExtendedEpidGroupIdRequest* internal_default_instance() {
    return reinterpret_cast<const Request_SGXGetExtendedEpidGroupIdRequest*>(
               &_Request_SGXGetExtendedEpidGroupIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(Request_SGXGetExtendedEpidGroupIdRequest* other);
  friend void swap(Request_SGXGetExtendedEpidGroupIdRequest& a, Request_SGXGetExtendedEpidGroupIdRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request_SGXGetExtendedEpidGroupIdRequest* New() const final {
    return CreateMaybeMessage<Request_SGXGetExtendedEpidGroupIdRequest>(NULL);
  }

  Request_SGXGetExtendedEpidGroupIdRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request_SGXGetExtendedEpidGroupIdRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request_SGXGetExtendedEpidGroupIdRequest& from);
  void MergeFrom(const Request_SGXGetExtendedEpidGroupIdRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request_SGXGetExtendedEpidGroupIdRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 timeout = 9;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 9;
  ::google::protobuf::uint32 timeout() const;
  void set_timeout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
 private:
  void set_has_timeout();
  void clear_has_timeout();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 timeout_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request_SGXSwitchExtendedEpidGroupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest) */ {
 public:
  Request_SGXSwitchExtendedEpidGroupRequest();
  virtual ~Request_SGXSwitchExtendedEpidGroupRequest();

  Request_SGXSwitchExtendedEpidGroupRequest(const Request_SGXSwitchExtendedEpidGroupRequest& from);

  inline Request_SGXSwitchExtendedEpidGroupRequest& operator=(const Request_SGXSwitchExtendedEpidGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request_SGXSwitchExtendedEpidGroupRequest(Request_SGXSwitchExtendedEpidGroupRequest&& from) noexcept
    : Request_SGXSwitchExtendedEpidGroupRequest() {
    *this = ::std::move(from);
  }

  inline Request_SGXSwitchExtendedEpidGroupRequest& operator=(Request_SGXSwitchExtendedEpidGroupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_SGXSwitchExtendedEpidGroupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request_SGXSwitchExtendedEpidGroupRequest* internal_default_instance() {
    return reinterpret_cast<const Request_SGXSwitchExtendedEpidGroupRequest*>(
               &_Request_SGXSwitchExtendedEpidGroupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(Request_SGXSwitchExtendedEpidGroupRequest* other);
  friend void swap(Request_SGXSwitchExtendedEpidGroupRequest& a, Request_SGXSwitchExtendedEpidGroupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request_SGXSwitchExtendedEpidGroupRequest* New() const final {
    return CreateMaybeMessage<Request_SGXSwitchExtendedEpidGroupRequest>(NULL);
  }

  Request_SGXSwitchExtendedEpidGroupRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request_SGXSwitchExtendedEpidGroupRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request_SGXSwitchExtendedEpidGroupRequest& from);
  void MergeFrom(const Request_SGXSwitchExtendedEpidGroupRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request_SGXSwitchExtendedEpidGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 x_group_id = 1;
  bool has_x_group_id() const;
  void clear_x_group_id();
  static const int kXGroupIdFieldNumber = 1;
  ::google::protobuf::uint32 x_group_id() const;
  void set_x_group_id(::google::protobuf::uint32 value);

  // optional uint32 timeout = 9;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 9;
  ::google::protobuf::uint32 timeout() const;
  void set_timeout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
 private:
  void set_has_x_group_id();
  void clear_has_x_group_id();
  void set_has_timeout();
  void clear_has_timeout();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 x_group_id_;
  ::google::protobuf::uint32 timeout_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request_SGXRegisterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Request.SGXRegisterRequest) */ {
 public:
  Request_SGXRegisterRequest();
  virtual ~Request_SGXRegisterRequest();

  Request_SGXRegisterRequest(const Request_SGXRegisterRequest& from);

  inline Request_SGXRegisterRequest& operator=(const Request_SGXRegisterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request_SGXRegisterRequest(Request_SGXRegisterRequest&& from) noexcept
    : Request_SGXRegisterRequest() {
    *this = ::std::move(from);
  }

  inline Request_SGXRegisterRequest& operator=(Request_SGXRegisterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_SGXRegisterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request_SGXRegisterRequest* internal_default_instance() {
    return reinterpret_cast<const Request_SGXRegisterRequest*>(
               &_Request_SGXRegisterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(Request_SGXRegisterRequest* other);
  friend void swap(Request_SGXRegisterRequest& a, Request_SGXRegisterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request_SGXRegisterRequest* New() const final {
    return CreateMaybeMessage<Request_SGXRegisterRequest>(NULL);
  }

  Request_SGXRegisterRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request_SGXRegisterRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request_SGXRegisterRequest& from);
  void MergeFrom(const Request_SGXRegisterRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request_SGXRegisterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes buf = 1;
  bool has_buf() const;
  void clear_buf();
  static const int kBufFieldNumber = 1;
  const ::std::string& buf() const;
  void set_buf(const ::std::string& value);
  #if LANG_CXX11
  void set_buf(::std::string&& value);
  #endif
  void set_buf(const char* value);
  void set_buf(const void* value, size_t size);
  ::std::string* mutable_buf();
  ::std::string* release_buf();
  void set_allocated_buf(::std::string* buf);

  // required uint32 data_type = 2;
  bool has_data_type() const;
  void clear_data_type();
  static const int kDataTypeFieldNumber = 2;
  ::google::protobuf::uint32 data_type() const;
  void set_data_type(::google::protobuf::uint32 value);

  // optional uint32 timeout = 9;
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 9;
  ::google::protobuf::uint32 timeout() const;
  void set_timeout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Request.SGXRegisterRequest)
 private:
  void set_has_buf();
  void clear_has_buf();
  void set_has_data_type();
  void clear_has_data_type();
  void set_has_timeout();
  void clear_has_timeout();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr buf_;
  ::google::protobuf::uint32 data_type_;
  ::google::protobuf::uint32 timeout_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const final {
    return CreateMaybeMessage<Request>(NULL);
  }

  Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Request_InitQuoteRequest InitQuoteRequest;
  typedef Request_GetQuoteRequest GetQuoteRequest;
  typedef Request_GetLaunchTokenRequest GetLaunchTokenRequest;
  typedef Request_ReportAttestationErrorRequest ReportAttestationErrorRequest;
  typedef Request_CreateSessionRequest CreateSessionRequest;
  typedef Request_InvokeServiceRequest InvokeServiceRequest;
  typedef Request_ExchangeReportRequest ExchangeReportRequest;
  typedef Request_CloseSessionRequest CloseSessionRequest;
  typedef Request_GetPsCapRequest GetPsCapRequest;
  typedef Request_GetWhiteListSizeRequest GetWhiteListSizeRequest;
  typedef Request_GetWhiteListRequest GetWhiteListRequest;
  typedef Request_SGXGetExtendedEpidGroupIdRequest SGXGetExtendedEpidGroupIdRequest;
  typedef Request_SGXSwitchExtendedEpidGroupRequest SGXSwitchExtendedEpidGroupRequest;
  typedef Request_SGXRegisterRequest SGXRegisterRequest;

  // accessors -------------------------------------------------------

  // optional .aesm.message.Request.InitQuoteRequest initQuoteReq = 1;
  bool has_initquotereq() const;
  void clear_initquotereq();
  static const int kInitQuoteReqFieldNumber = 1;
  private:
  const ::aesm::message::Request_InitQuoteRequest& _internal_initquotereq() const;
  public:
  const ::aesm::message::Request_InitQuoteRequest& initquotereq() const;
  ::aesm::message::Request_InitQuoteRequest* release_initquotereq();
  ::aesm::message::Request_InitQuoteRequest* mutable_initquotereq();
  void set_allocated_initquotereq(::aesm::message::Request_InitQuoteRequest* initquotereq);

  // optional .aesm.message.Request.GetQuoteRequest getQuoteReq = 2;
  bool has_getquotereq() const;
  void clear_getquotereq();
  static const int kGetQuoteReqFieldNumber = 2;
  private:
  const ::aesm::message::Request_GetQuoteRequest& _internal_getquotereq() const;
  public:
  const ::aesm::message::Request_GetQuoteRequest& getquotereq() const;
  ::aesm::message::Request_GetQuoteRequest* release_getquotereq();
  ::aesm::message::Request_GetQuoteRequest* mutable_getquotereq();
  void set_allocated_getquotereq(::aesm::message::Request_GetQuoteRequest* getquotereq);

  // optional .aesm.message.Request.GetLaunchTokenRequest getLicTokenReq = 3;
  bool has_getlictokenreq() const;
  void clear_getlictokenreq();
  static const int kGetLicTokenReqFieldNumber = 3;
  private:
  const ::aesm::message::Request_GetLaunchTokenRequest& _internal_getlictokenreq() const;
  public:
  const ::aesm::message::Request_GetLaunchTokenRequest& getlictokenreq() const;
  ::aesm::message::Request_GetLaunchTokenRequest* release_getlictokenreq();
  ::aesm::message::Request_GetLaunchTokenRequest* mutable_getlictokenreq();
  void set_allocated_getlictokenreq(::aesm::message::Request_GetLaunchTokenRequest* getlictokenreq);

  // optional .aesm.message.Request.ReportAttestationErrorRequest reportErrReq = 4;
  bool has_reporterrreq() const;
  void clear_reporterrreq();
  static const int kReportErrReqFieldNumber = 4;
  private:
  const ::aesm::message::Request_ReportAttestationErrorRequest& _internal_reporterrreq() const;
  public:
  const ::aesm::message::Request_ReportAttestationErrorRequest& reporterrreq() const;
  ::aesm::message::Request_ReportAttestationErrorRequest* release_reporterrreq();
  ::aesm::message::Request_ReportAttestationErrorRequest* mutable_reporterrreq();
  void set_allocated_reporterrreq(::aesm::message::Request_ReportAttestationErrorRequest* reporterrreq);

  // optional .aesm.message.Request.CreateSessionRequest createSessionReq = 5;
  bool has_createsessionreq() const;
  void clear_createsessionreq();
  static const int kCreateSessionReqFieldNumber = 5;
  private:
  const ::aesm::message::Request_CreateSessionRequest& _internal_createsessionreq() const;
  public:
  const ::aesm::message::Request_CreateSessionRequest& createsessionreq() const;
  ::aesm::message::Request_CreateSessionRequest* release_createsessionreq();
  ::aesm::message::Request_CreateSessionRequest* mutable_createsessionreq();
  void set_allocated_createsessionreq(::aesm::message::Request_CreateSessionRequest* createsessionreq);

  // optional .aesm.message.Request.InvokeServiceRequest invokeServiceReq = 6;
  bool has_invokeservicereq() const;
  void clear_invokeservicereq();
  static const int kInvokeServiceReqFieldNumber = 6;
  private:
  const ::aesm::message::Request_InvokeServiceRequest& _internal_invokeservicereq() const;
  public:
  const ::aesm::message::Request_InvokeServiceRequest& invokeservicereq() const;
  ::aesm::message::Request_InvokeServiceRequest* release_invokeservicereq();
  ::aesm::message::Request_InvokeServiceRequest* mutable_invokeservicereq();
  void set_allocated_invokeservicereq(::aesm::message::Request_InvokeServiceRequest* invokeservicereq);

  // optional .aesm.message.Request.ExchangeReportRequest exchangeReportReq = 7;
  bool has_exchangereportreq() const;
  void clear_exchangereportreq();
  static const int kExchangeReportReqFieldNumber = 7;
  private:
  const ::aesm::message::Request_ExchangeReportRequest& _internal_exchangereportreq() const;
  public:
  const ::aesm::message::Request_ExchangeReportRequest& exchangereportreq() const;
  ::aesm::message::Request_ExchangeReportRequest* release_exchangereportreq();
  ::aesm::message::Request_ExchangeReportRequest* mutable_exchangereportreq();
  void set_allocated_exchangereportreq(::aesm::message::Request_ExchangeReportRequest* exchangereportreq);

  // optional .aesm.message.Request.CloseSessionRequest closeSessionReq = 8;
  bool has_closesessionreq() const;
  void clear_closesessionreq();
  static const int kCloseSessionReqFieldNumber = 8;
  private:
  const ::aesm::message::Request_CloseSessionRequest& _internal_closesessionreq() const;
  public:
  const ::aesm::message::Request_CloseSessionRequest& closesessionreq() const;
  ::aesm::message::Request_CloseSessionRequest* release_closesessionreq();
  ::aesm::message::Request_CloseSessionRequest* mutable_closesessionreq();
  void set_allocated_closesessionreq(::aesm::message::Request_CloseSessionRequest* closesessionreq);

  // optional .aesm.message.Request.GetPsCapRequest getPsCapReq = 9;
  bool has_getpscapreq() const;
  void clear_getpscapreq();
  static const int kGetPsCapReqFieldNumber = 9;
  private:
  const ::aesm::message::Request_GetPsCapRequest& _internal_getpscapreq() const;
  public:
  const ::aesm::message::Request_GetPsCapRequest& getpscapreq() const;
  ::aesm::message::Request_GetPsCapRequest* release_getpscapreq();
  ::aesm::message::Request_GetPsCapRequest* mutable_getpscapreq();
  void set_allocated_getpscapreq(::aesm::message::Request_GetPsCapRequest* getpscapreq);

  // optional .aesm.message.Request.GetWhiteListSizeRequest getWhiteListSizeReq = 10;
  bool has_getwhitelistsizereq() const;
  void clear_getwhitelistsizereq();
  static const int kGetWhiteListSizeReqFieldNumber = 10;
  private:
  const ::aesm::message::Request_GetWhiteListSizeRequest& _internal_getwhitelistsizereq() const;
  public:
  const ::aesm::message::Request_GetWhiteListSizeRequest& getwhitelistsizereq() const;
  ::aesm::message::Request_GetWhiteListSizeRequest* release_getwhitelistsizereq();
  ::aesm::message::Request_GetWhiteListSizeRequest* mutable_getwhitelistsizereq();
  void set_allocated_getwhitelistsizereq(::aesm::message::Request_GetWhiteListSizeRequest* getwhitelistsizereq);

  // optional .aesm.message.Request.GetWhiteListRequest getWhiteListReq = 11;
  bool has_getwhitelistreq() const;
  void clear_getwhitelistreq();
  static const int kGetWhiteListReqFieldNumber = 11;
  private:
  const ::aesm::message::Request_GetWhiteListRequest& _internal_getwhitelistreq() const;
  public:
  const ::aesm::message::Request_GetWhiteListRequest& getwhitelistreq() const;
  ::aesm::message::Request_GetWhiteListRequest* release_getwhitelistreq();
  ::aesm::message::Request_GetWhiteListRequest* mutable_getwhitelistreq();
  void set_allocated_getwhitelistreq(::aesm::message::Request_GetWhiteListRequest* getwhitelistreq);

  // optional .aesm.message.Request.SGXGetExtendedEpidGroupIdRequest sgxGetExtendedEpidGroupIdReq = 12;
  bool has_sgxgetextendedepidgroupidreq() const;
  void clear_sgxgetextendedepidgroupidreq();
  static const int kSgxGetExtendedEpidGroupIdReqFieldNumber = 12;
  private:
  const ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest& _internal_sgxgetextendedepidgroupidreq() const;
  public:
  const ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest& sgxgetextendedepidgroupidreq() const;
  ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest* release_sgxgetextendedepidgroupidreq();
  ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest* mutable_sgxgetextendedepidgroupidreq();
  void set_allocated_sgxgetextendedepidgroupidreq(::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest* sgxgetextendedepidgroupidreq);

  // optional .aesm.message.Request.SGXSwitchExtendedEpidGroupRequest sgxSwitchExtendedEpidGroupReq = 13;
  bool has_sgxswitchextendedepidgroupreq() const;
  void clear_sgxswitchextendedepidgroupreq();
  static const int kSgxSwitchExtendedEpidGroupReqFieldNumber = 13;
  private:
  const ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest& _internal_sgxswitchextendedepidgroupreq() const;
  public:
  const ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest& sgxswitchextendedepidgroupreq() const;
  ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest* release_sgxswitchextendedepidgroupreq();
  ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest* mutable_sgxswitchextendedepidgroupreq();
  void set_allocated_sgxswitchextendedepidgroupreq(::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest* sgxswitchextendedepidgroupreq);

  // optional .aesm.message.Request.SGXRegisterRequest sgxRegisterReq = 14;
  bool has_sgxregisterreq() const;
  void clear_sgxregisterreq();
  static const int kSgxRegisterReqFieldNumber = 14;
  private:
  const ::aesm::message::Request_SGXRegisterRequest& _internal_sgxregisterreq() const;
  public:
  const ::aesm::message::Request_SGXRegisterRequest& sgxregisterreq() const;
  ::aesm::message::Request_SGXRegisterRequest* release_sgxregisterreq();
  ::aesm::message::Request_SGXRegisterRequest* mutable_sgxregisterreq();
  void set_allocated_sgxregisterreq(::aesm::message::Request_SGXRegisterRequest* sgxregisterreq);

  // @@protoc_insertion_point(class_scope:aesm.message.Request)
 private:
  void set_has_initquotereq();
  void clear_has_initquotereq();
  void set_has_getquotereq();
  void clear_has_getquotereq();
  void set_has_getlictokenreq();
  void clear_has_getlictokenreq();
  void set_has_reporterrreq();
  void clear_has_reporterrreq();
  void set_has_createsessionreq();
  void clear_has_createsessionreq();
  void set_has_invokeservicereq();
  void clear_has_invokeservicereq();
  void set_has_exchangereportreq();
  void clear_has_exchangereportreq();
  void set_has_closesessionreq();
  void clear_has_closesessionreq();
  void set_has_getpscapreq();
  void clear_has_getpscapreq();
  void set_has_getwhitelistsizereq();
  void clear_has_getwhitelistsizereq();
  void set_has_getwhitelistreq();
  void clear_has_getwhitelistreq();
  void set_has_sgxgetextendedepidgroupidreq();
  void clear_has_sgxgetextendedepidgroupidreq();
  void set_has_sgxswitchextendedepidgroupreq();
  void clear_has_sgxswitchextendedepidgroupreq();
  void set_has_sgxregisterreq();
  void clear_has_sgxregisterreq();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::aesm::message::Request_InitQuoteRequest* initquotereq_;
  ::aesm::message::Request_GetQuoteRequest* getquotereq_;
  ::aesm::message::Request_GetLaunchTokenRequest* getlictokenreq_;
  ::aesm::message::Request_ReportAttestationErrorRequest* reporterrreq_;
  ::aesm::message::Request_CreateSessionRequest* createsessionreq_;
  ::aesm::message::Request_InvokeServiceRequest* invokeservicereq_;
  ::aesm::message::Request_ExchangeReportRequest* exchangereportreq_;
  ::aesm::message::Request_CloseSessionRequest* closesessionreq_;
  ::aesm::message::Request_GetPsCapRequest* getpscapreq_;
  ::aesm::message::Request_GetWhiteListSizeRequest* getwhitelistsizereq_;
  ::aesm::message::Request_GetWhiteListRequest* getwhitelistreq_;
  ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest* sgxgetextendedepidgroupidreq_;
  ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest* sgxswitchextendedepidgroupreq_;
  ::aesm::message::Request_SGXRegisterRequest* sgxregisterreq_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response_InitQuoteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Response.InitQuoteResponse) */ {
 public:
  Response_InitQuoteResponse();
  virtual ~Response_InitQuoteResponse();

  Response_InitQuoteResponse(const Response_InitQuoteResponse& from);

  inline Response_InitQuoteResponse& operator=(const Response_InitQuoteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response_InitQuoteResponse(Response_InitQuoteResponse&& from) noexcept
    : Response_InitQuoteResponse() {
    *this = ::std::move(from);
  }

  inline Response_InitQuoteResponse& operator=(Response_InitQuoteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_InitQuoteResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response_InitQuoteResponse* internal_default_instance() {
    return reinterpret_cast<const Response_InitQuoteResponse*>(
               &_Response_InitQuoteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(Response_InitQuoteResponse* other);
  friend void swap(Response_InitQuoteResponse& a, Response_InitQuoteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response_InitQuoteResponse* New() const final {
    return CreateMaybeMessage<Response_InitQuoteResponse>(NULL);
  }

  Response_InitQuoteResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response_InitQuoteResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response_InitQuoteResponse& from);
  void MergeFrom(const Response_InitQuoteResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response_InitQuoteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes targetInfo = 2;
  bool has_targetinfo() const;
  void clear_targetinfo();
  static const int kTargetInfoFieldNumber = 2;
  const ::std::string& targetinfo() const;
  void set_targetinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_targetinfo(::std::string&& value);
  #endif
  void set_targetinfo(const char* value);
  void set_targetinfo(const void* value, size_t size);
  ::std::string* mutable_targetinfo();
  ::std::string* release_targetinfo();
  void set_allocated_targetinfo(::std::string* targetinfo);

  // optional bytes gid = 3;
  bool has_gid() const;
  void clear_gid();
  static const int kGidFieldNumber = 3;
  const ::std::string& gid() const;
  void set_gid(const ::std::string& value);
  #if LANG_CXX11
  void set_gid(::std::string&& value);
  #endif
  void set_gid(const char* value);
  void set_gid(const void* value, size_t size);
  ::std::string* mutable_gid();
  ::std::string* release_gid();
  void set_allocated_gid(::std::string* gid);

  // required uint32 errorCode = 1 [default = 1];
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::uint32 errorcode() const;
  void set_errorcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Response.InitQuoteResponse)
 private:
  void set_has_errorcode();
  void clear_has_errorcode();
  void set_has_targetinfo();
  void clear_has_targetinfo();
  void set_has_gid();
  void clear_has_gid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr targetinfo_;
  ::google::protobuf::internal::ArenaStringPtr gid_;
  ::google::protobuf::uint32 errorcode_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response_GetQuoteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Response.GetQuoteResponse) */ {
 public:
  Response_GetQuoteResponse();
  virtual ~Response_GetQuoteResponse();

  Response_GetQuoteResponse(const Response_GetQuoteResponse& from);

  inline Response_GetQuoteResponse& operator=(const Response_GetQuoteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response_GetQuoteResponse(Response_GetQuoteResponse&& from) noexcept
    : Response_GetQuoteResponse() {
    *this = ::std::move(from);
  }

  inline Response_GetQuoteResponse& operator=(Response_GetQuoteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_GetQuoteResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response_GetQuoteResponse* internal_default_instance() {
    return reinterpret_cast<const Response_GetQuoteResponse*>(
               &_Response_GetQuoteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(Response_GetQuoteResponse* other);
  friend void swap(Response_GetQuoteResponse& a, Response_GetQuoteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response_GetQuoteResponse* New() const final {
    return CreateMaybeMessage<Response_GetQuoteResponse>(NULL);
  }

  Response_GetQuoteResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response_GetQuoteResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response_GetQuoteResponse& from);
  void MergeFrom(const Response_GetQuoteResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response_GetQuoteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes quote = 2;
  bool has_quote() const;
  void clear_quote();
  static const int kQuoteFieldNumber = 2;
  const ::std::string& quote() const;
  void set_quote(const ::std::string& value);
  #if LANG_CXX11
  void set_quote(::std::string&& value);
  #endif
  void set_quote(const char* value);
  void set_quote(const void* value, size_t size);
  ::std::string* mutable_quote();
  ::std::string* release_quote();
  void set_allocated_quote(::std::string* quote);

  // optional bytes qe_report = 3;
  bool has_qe_report() const;
  void clear_qe_report();
  static const int kQeReportFieldNumber = 3;
  const ::std::string& qe_report() const;
  void set_qe_report(const ::std::string& value);
  #if LANG_CXX11
  void set_qe_report(::std::string&& value);
  #endif
  void set_qe_report(const char* value);
  void set_qe_report(const void* value, size_t size);
  ::std::string* mutable_qe_report();
  ::std::string* release_qe_report();
  void set_allocated_qe_report(::std::string* qe_report);

  // required uint32 errorCode = 1 [default = 1];
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::uint32 errorcode() const;
  void set_errorcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Response.GetQuoteResponse)
 private:
  void set_has_errorcode();
  void clear_has_errorcode();
  void set_has_quote();
  void clear_has_quote();
  void set_has_qe_report();
  void clear_has_qe_report();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr quote_;
  ::google::protobuf::internal::ArenaStringPtr qe_report_;
  ::google::protobuf::uint32 errorcode_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response_GetLaunchTokenResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Response.GetLaunchTokenResponse) */ {
 public:
  Response_GetLaunchTokenResponse();
  virtual ~Response_GetLaunchTokenResponse();

  Response_GetLaunchTokenResponse(const Response_GetLaunchTokenResponse& from);

  inline Response_GetLaunchTokenResponse& operator=(const Response_GetLaunchTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response_GetLaunchTokenResponse(Response_GetLaunchTokenResponse&& from) noexcept
    : Response_GetLaunchTokenResponse() {
    *this = ::std::move(from);
  }

  inline Response_GetLaunchTokenResponse& operator=(Response_GetLaunchTokenResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_GetLaunchTokenResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response_GetLaunchTokenResponse* internal_default_instance() {
    return reinterpret_cast<const Response_GetLaunchTokenResponse*>(
               &_Response_GetLaunchTokenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(Response_GetLaunchTokenResponse* other);
  friend void swap(Response_GetLaunchTokenResponse& a, Response_GetLaunchTokenResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response_GetLaunchTokenResponse* New() const final {
    return CreateMaybeMessage<Response_GetLaunchTokenResponse>(NULL);
  }

  Response_GetLaunchTokenResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response_GetLaunchTokenResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response_GetLaunchTokenResponse& from);
  void MergeFrom(const Response_GetLaunchTokenResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response_GetLaunchTokenResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes token = 2;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // required uint32 errorCode = 1 [default = 1];
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::uint32 errorcode() const;
  void set_errorcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Response.GetLaunchTokenResponse)
 private:
  void set_has_errorcode();
  void clear_has_errorcode();
  void set_has_token();
  void clear_has_token();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::uint32 errorcode_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response_ReportAttestationErrorResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Response.ReportAttestationErrorResponse) */ {
 public:
  Response_ReportAttestationErrorResponse();
  virtual ~Response_ReportAttestationErrorResponse();

  Response_ReportAttestationErrorResponse(const Response_ReportAttestationErrorResponse& from);

  inline Response_ReportAttestationErrorResponse& operator=(const Response_ReportAttestationErrorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response_ReportAttestationErrorResponse(Response_ReportAttestationErrorResponse&& from) noexcept
    : Response_ReportAttestationErrorResponse() {
    *this = ::std::move(from);
  }

  inline Response_ReportAttestationErrorResponse& operator=(Response_ReportAttestationErrorResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_ReportAttestationErrorResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response_ReportAttestationErrorResponse* internal_default_instance() {
    return reinterpret_cast<const Response_ReportAttestationErrorResponse*>(
               &_Response_ReportAttestationErrorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(Response_ReportAttestationErrorResponse* other);
  friend void swap(Response_ReportAttestationErrorResponse& a, Response_ReportAttestationErrorResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response_ReportAttestationErrorResponse* New() const final {
    return CreateMaybeMessage<Response_ReportAttestationErrorResponse>(NULL);
  }

  Response_ReportAttestationErrorResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response_ReportAttestationErrorResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response_ReportAttestationErrorResponse& from);
  void MergeFrom(const Response_ReportAttestationErrorResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response_ReportAttestationErrorResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes platform_update_info = 2;
  bool has_platform_update_info() const;
  void clear_platform_update_info();
  static const int kPlatformUpdateInfoFieldNumber = 2;
  const ::std::string& platform_update_info() const;
  void set_platform_update_info(const ::std::string& value);
  #if LANG_CXX11
  void set_platform_update_info(::std::string&& value);
  #endif
  void set_platform_update_info(const char* value);
  void set_platform_update_info(const void* value, size_t size);
  ::std::string* mutable_platform_update_info();
  ::std::string* release_platform_update_info();
  void set_allocated_platform_update_info(::std::string* platform_update_info);

  // required uint32 errorCode = 1 [default = 1];
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::uint32 errorcode() const;
  void set_errorcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Response.ReportAttestationErrorResponse)
 private:
  void set_has_errorcode();
  void clear_has_errorcode();
  void set_has_platform_update_info();
  void clear_has_platform_update_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr platform_update_info_;
  ::google::protobuf::uint32 errorcode_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response_CreateSessionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Response.CreateSessionResponse) */ {
 public:
  Response_CreateSessionResponse();
  virtual ~Response_CreateSessionResponse();

  Response_CreateSessionResponse(const Response_CreateSessionResponse& from);

  inline Response_CreateSessionResponse& operator=(const Response_CreateSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response_CreateSessionResponse(Response_CreateSessionResponse&& from) noexcept
    : Response_CreateSessionResponse() {
    *this = ::std::move(from);
  }

  inline Response_CreateSessionResponse& operator=(Response_CreateSessionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_CreateSessionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response_CreateSessionResponse* internal_default_instance() {
    return reinterpret_cast<const Response_CreateSessionResponse*>(
               &_Response_CreateSessionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(Response_CreateSessionResponse* other);
  friend void swap(Response_CreateSessionResponse& a, Response_CreateSessionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response_CreateSessionResponse* New() const final {
    return CreateMaybeMessage<Response_CreateSessionResponse>(NULL);
  }

  Response_CreateSessionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response_CreateSessionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response_CreateSessionResponse& from);
  void MergeFrom(const Response_CreateSessionResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response_CreateSessionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes se_dh_msg1 = 3;
  bool has_se_dh_msg1() const;
  void clear_se_dh_msg1();
  static const int kSeDhMsg1FieldNumber = 3;
  const ::std::string& se_dh_msg1() const;
  void set_se_dh_msg1(const ::std::string& value);
  #if LANG_CXX11
  void set_se_dh_msg1(::std::string&& value);
  #endif
  void set_se_dh_msg1(const char* value);
  void set_se_dh_msg1(const void* value, size_t size);
  ::std::string* mutable_se_dh_msg1();
  ::std::string* release_se_dh_msg1();
  void set_allocated_se_dh_msg1(::std::string* se_dh_msg1);

  // optional uint32 session_id = 2;
  bool has_session_id() const;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // required uint32 errorCode = 1 [default = 1];
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::uint32 errorcode() const;
  void set_errorcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Response.CreateSessionResponse)
 private:
  void set_has_errorcode();
  void clear_has_errorcode();
  void set_has_session_id();
  void clear_has_session_id();
  void set_has_se_dh_msg1();
  void clear_has_se_dh_msg1();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr se_dh_msg1_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 errorcode_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response_InvokeServiceResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Response.InvokeServiceResponse) */ {
 public:
  Response_InvokeServiceResponse();
  virtual ~Response_InvokeServiceResponse();

  Response_InvokeServiceResponse(const Response_InvokeServiceResponse& from);

  inline Response_InvokeServiceResponse& operator=(const Response_InvokeServiceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response_InvokeServiceResponse(Response_InvokeServiceResponse&& from) noexcept
    : Response_InvokeServiceResponse() {
    *this = ::std::move(from);
  }

  inline Response_InvokeServiceResponse& operator=(Response_InvokeServiceResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_InvokeServiceResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response_InvokeServiceResponse* internal_default_instance() {
    return reinterpret_cast<const Response_InvokeServiceResponse*>(
               &_Response_InvokeServiceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(Response_InvokeServiceResponse* other);
  friend void swap(Response_InvokeServiceResponse& a, Response_InvokeServiceResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response_InvokeServiceResponse* New() const final {
    return CreateMaybeMessage<Response_InvokeServiceResponse>(NULL);
  }

  Response_InvokeServiceResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response_InvokeServiceResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response_InvokeServiceResponse& from);
  void MergeFrom(const Response_InvokeServiceResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response_InvokeServiceResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes pse_message = 2;
  bool has_pse_message() const;
  void clear_pse_message();
  static const int kPseMessageFieldNumber = 2;
  const ::std::string& pse_message() const;
  void set_pse_message(const ::std::string& value);
  #if LANG_CXX11
  void set_pse_message(::std::string&& value);
  #endif
  void set_pse_message(const char* value);
  void set_pse_message(const void* value, size_t size);
  ::std::string* mutable_pse_message();
  ::std::string* release_pse_message();
  void set_allocated_pse_message(::std::string* pse_message);

  // required uint32 errorCode = 1 [default = 1];
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::uint32 errorcode() const;
  void set_errorcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Response.InvokeServiceResponse)
 private:
  void set_has_errorcode();
  void clear_has_errorcode();
  void set_has_pse_message();
  void clear_has_pse_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr pse_message_;
  ::google::protobuf::uint32 errorcode_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response_ExchangeReportResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Response.ExchangeReportResponse) */ {
 public:
  Response_ExchangeReportResponse();
  virtual ~Response_ExchangeReportResponse();

  Response_ExchangeReportResponse(const Response_ExchangeReportResponse& from);

  inline Response_ExchangeReportResponse& operator=(const Response_ExchangeReportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response_ExchangeReportResponse(Response_ExchangeReportResponse&& from) noexcept
    : Response_ExchangeReportResponse() {
    *this = ::std::move(from);
  }

  inline Response_ExchangeReportResponse& operator=(Response_ExchangeReportResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_ExchangeReportResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response_ExchangeReportResponse* internal_default_instance() {
    return reinterpret_cast<const Response_ExchangeReportResponse*>(
               &_Response_ExchangeReportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(Response_ExchangeReportResponse* other);
  friend void swap(Response_ExchangeReportResponse& a, Response_ExchangeReportResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response_ExchangeReportResponse* New() const final {
    return CreateMaybeMessage<Response_ExchangeReportResponse>(NULL);
  }

  Response_ExchangeReportResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response_ExchangeReportResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response_ExchangeReportResponse& from);
  void MergeFrom(const Response_ExchangeReportResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response_ExchangeReportResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes se_dh_msg3 = 2;
  bool has_se_dh_msg3() const;
  void clear_se_dh_msg3();
  static const int kSeDhMsg3FieldNumber = 2;
  const ::std::string& se_dh_msg3() const;
  void set_se_dh_msg3(const ::std::string& value);
  #if LANG_CXX11
  void set_se_dh_msg3(::std::string&& value);
  #endif
  void set_se_dh_msg3(const char* value);
  void set_se_dh_msg3(const void* value, size_t size);
  ::std::string* mutable_se_dh_msg3();
  ::std::string* release_se_dh_msg3();
  void set_allocated_se_dh_msg3(::std::string* se_dh_msg3);

  // required uint32 errorCode = 1 [default = 1];
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::uint32 errorcode() const;
  void set_errorcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Response.ExchangeReportResponse)
 private:
  void set_has_errorcode();
  void clear_has_errorcode();
  void set_has_se_dh_msg3();
  void clear_has_se_dh_msg3();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr se_dh_msg3_;
  ::google::protobuf::uint32 errorcode_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response_CloseSessionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Response.CloseSessionResponse) */ {
 public:
  Response_CloseSessionResponse();
  virtual ~Response_CloseSessionResponse();

  Response_CloseSessionResponse(const Response_CloseSessionResponse& from);

  inline Response_CloseSessionResponse& operator=(const Response_CloseSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response_CloseSessionResponse(Response_CloseSessionResponse&& from) noexcept
    : Response_CloseSessionResponse() {
    *this = ::std::move(from);
  }

  inline Response_CloseSessionResponse& operator=(Response_CloseSessionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_CloseSessionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response_CloseSessionResponse* internal_default_instance() {
    return reinterpret_cast<const Response_CloseSessionResponse*>(
               &_Response_CloseSessionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(Response_CloseSessionResponse* other);
  friend void swap(Response_CloseSessionResponse& a, Response_CloseSessionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response_CloseSessionResponse* New() const final {
    return CreateMaybeMessage<Response_CloseSessionResponse>(NULL);
  }

  Response_CloseSessionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response_CloseSessionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response_CloseSessionResponse& from);
  void MergeFrom(const Response_CloseSessionResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response_CloseSessionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 errorCode = 1 [default = 1];
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::uint32 errorcode() const;
  void set_errorcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Response.CloseSessionResponse)
 private:
  void set_has_errorcode();
  void clear_has_errorcode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 errorcode_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response_GetPsCapResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Response.GetPsCapResponse) */ {
 public:
  Response_GetPsCapResponse();
  virtual ~Response_GetPsCapResponse();

  Response_GetPsCapResponse(const Response_GetPsCapResponse& from);

  inline Response_GetPsCapResponse& operator=(const Response_GetPsCapResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response_GetPsCapResponse(Response_GetPsCapResponse&& from) noexcept
    : Response_GetPsCapResponse() {
    *this = ::std::move(from);
  }

  inline Response_GetPsCapResponse& operator=(Response_GetPsCapResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_GetPsCapResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response_GetPsCapResponse* internal_default_instance() {
    return reinterpret_cast<const Response_GetPsCapResponse*>(
               &_Response_GetPsCapResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(Response_GetPsCapResponse* other);
  friend void swap(Response_GetPsCapResponse& a, Response_GetPsCapResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response_GetPsCapResponse* New() const final {
    return CreateMaybeMessage<Response_GetPsCapResponse>(NULL);
  }

  Response_GetPsCapResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response_GetPsCapResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response_GetPsCapResponse& from);
  void MergeFrom(const Response_GetPsCapResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response_GetPsCapResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 ps_cap = 2;
  bool has_ps_cap() const;
  void clear_ps_cap();
  static const int kPsCapFieldNumber = 2;
  ::google::protobuf::uint64 ps_cap() const;
  void set_ps_cap(::google::protobuf::uint64 value);

  // required uint32 errorCode = 1 [default = 1];
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::uint32 errorcode() const;
  void set_errorcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Response.GetPsCapResponse)
 private:
  void set_has_errorcode();
  void clear_has_errorcode();
  void set_has_ps_cap();
  void clear_has_ps_cap();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 ps_cap_;
  ::google::protobuf::uint32 errorcode_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response_GetWhiteListSizeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Response.GetWhiteListSizeResponse) */ {
 public:
  Response_GetWhiteListSizeResponse();
  virtual ~Response_GetWhiteListSizeResponse();

  Response_GetWhiteListSizeResponse(const Response_GetWhiteListSizeResponse& from);

  inline Response_GetWhiteListSizeResponse& operator=(const Response_GetWhiteListSizeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response_GetWhiteListSizeResponse(Response_GetWhiteListSizeResponse&& from) noexcept
    : Response_GetWhiteListSizeResponse() {
    *this = ::std::move(from);
  }

  inline Response_GetWhiteListSizeResponse& operator=(Response_GetWhiteListSizeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_GetWhiteListSizeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response_GetWhiteListSizeResponse* internal_default_instance() {
    return reinterpret_cast<const Response_GetWhiteListSizeResponse*>(
               &_Response_GetWhiteListSizeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(Response_GetWhiteListSizeResponse* other);
  friend void swap(Response_GetWhiteListSizeResponse& a, Response_GetWhiteListSizeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response_GetWhiteListSizeResponse* New() const final {
    return CreateMaybeMessage<Response_GetWhiteListSizeResponse>(NULL);
  }

  Response_GetWhiteListSizeResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response_GetWhiteListSizeResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response_GetWhiteListSizeResponse& from);
  void MergeFrom(const Response_GetWhiteListSizeResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response_GetWhiteListSizeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 white_list_size = 2;
  bool has_white_list_size() const;
  void clear_white_list_size();
  static const int kWhiteListSizeFieldNumber = 2;
  ::google::protobuf::uint32 white_list_size() const;
  void set_white_list_size(::google::protobuf::uint32 value);

  // required uint32 errorCode = 1 [default = 1];
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::uint32 errorcode() const;
  void set_errorcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Response.GetWhiteListSizeResponse)
 private:
  void set_has_errorcode();
  void clear_has_errorcode();
  void set_has_white_list_size();
  void clear_has_white_list_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 white_list_size_;
  ::google::protobuf::uint32 errorcode_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response_GetWhiteListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Response.GetWhiteListResponse) */ {
 public:
  Response_GetWhiteListResponse();
  virtual ~Response_GetWhiteListResponse();

  Response_GetWhiteListResponse(const Response_GetWhiteListResponse& from);

  inline Response_GetWhiteListResponse& operator=(const Response_GetWhiteListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response_GetWhiteListResponse(Response_GetWhiteListResponse&& from) noexcept
    : Response_GetWhiteListResponse() {
    *this = ::std::move(from);
  }

  inline Response_GetWhiteListResponse& operator=(Response_GetWhiteListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_GetWhiteListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response_GetWhiteListResponse* internal_default_instance() {
    return reinterpret_cast<const Response_GetWhiteListResponse*>(
               &_Response_GetWhiteListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(Response_GetWhiteListResponse* other);
  friend void swap(Response_GetWhiteListResponse& a, Response_GetWhiteListResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response_GetWhiteListResponse* New() const final {
    return CreateMaybeMessage<Response_GetWhiteListResponse>(NULL);
  }

  Response_GetWhiteListResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response_GetWhiteListResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response_GetWhiteListResponse& from);
  void MergeFrom(const Response_GetWhiteListResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response_GetWhiteListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes white_list = 2;
  bool has_white_list() const;
  void clear_white_list();
  static const int kWhiteListFieldNumber = 2;
  const ::std::string& white_list() const;
  void set_white_list(const ::std::string& value);
  #if LANG_CXX11
  void set_white_list(::std::string&& value);
  #endif
  void set_white_list(const char* value);
  void set_white_list(const void* value, size_t size);
  ::std::string* mutable_white_list();
  ::std::string* release_white_list();
  void set_allocated_white_list(::std::string* white_list);

  // required uint32 errorCode = 1 [default = 1];
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::uint32 errorcode() const;
  void set_errorcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Response.GetWhiteListResponse)
 private:
  void set_has_errorcode();
  void clear_has_errorcode();
  void set_has_white_list();
  void clear_has_white_list();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr white_list_;
  ::google::protobuf::uint32 errorcode_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response_SGXGetExtendedEpidGroupIdResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse) */ {
 public:
  Response_SGXGetExtendedEpidGroupIdResponse();
  virtual ~Response_SGXGetExtendedEpidGroupIdResponse();

  Response_SGXGetExtendedEpidGroupIdResponse(const Response_SGXGetExtendedEpidGroupIdResponse& from);

  inline Response_SGXGetExtendedEpidGroupIdResponse& operator=(const Response_SGXGetExtendedEpidGroupIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response_SGXGetExtendedEpidGroupIdResponse(Response_SGXGetExtendedEpidGroupIdResponse&& from) noexcept
    : Response_SGXGetExtendedEpidGroupIdResponse() {
    *this = ::std::move(from);
  }

  inline Response_SGXGetExtendedEpidGroupIdResponse& operator=(Response_SGXGetExtendedEpidGroupIdResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_SGXGetExtendedEpidGroupIdResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response_SGXGetExtendedEpidGroupIdResponse* internal_default_instance() {
    return reinterpret_cast<const Response_SGXGetExtendedEpidGroupIdResponse*>(
               &_Response_SGXGetExtendedEpidGroupIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(Response_SGXGetExtendedEpidGroupIdResponse* other);
  friend void swap(Response_SGXGetExtendedEpidGroupIdResponse& a, Response_SGXGetExtendedEpidGroupIdResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response_SGXGetExtendedEpidGroupIdResponse* New() const final {
    return CreateMaybeMessage<Response_SGXGetExtendedEpidGroupIdResponse>(NULL);
  }

  Response_SGXGetExtendedEpidGroupIdResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response_SGXGetExtendedEpidGroupIdResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response_SGXGetExtendedEpidGroupIdResponse& from);
  void MergeFrom(const Response_SGXGetExtendedEpidGroupIdResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response_SGXGetExtendedEpidGroupIdResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 x_group_id = 2;
  bool has_x_group_id() const;
  void clear_x_group_id();
  static const int kXGroupIdFieldNumber = 2;
  ::google::protobuf::uint32 x_group_id() const;
  void set_x_group_id(::google::protobuf::uint32 value);

  // required uint32 errorCode = 1 [default = 1];
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::uint32 errorcode() const;
  void set_errorcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
 private:
  void set_has_errorcode();
  void clear_has_errorcode();
  void set_has_x_group_id();
  void clear_has_x_group_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 x_group_id_;
  ::google::protobuf::uint32 errorcode_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response_SGXSwitchExtendedEpidGroupResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse) */ {
 public:
  Response_SGXSwitchExtendedEpidGroupResponse();
  virtual ~Response_SGXSwitchExtendedEpidGroupResponse();

  Response_SGXSwitchExtendedEpidGroupResponse(const Response_SGXSwitchExtendedEpidGroupResponse& from);

  inline Response_SGXSwitchExtendedEpidGroupResponse& operator=(const Response_SGXSwitchExtendedEpidGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response_SGXSwitchExtendedEpidGroupResponse(Response_SGXSwitchExtendedEpidGroupResponse&& from) noexcept
    : Response_SGXSwitchExtendedEpidGroupResponse() {
    *this = ::std::move(from);
  }

  inline Response_SGXSwitchExtendedEpidGroupResponse& operator=(Response_SGXSwitchExtendedEpidGroupResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_SGXSwitchExtendedEpidGroupResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response_SGXSwitchExtendedEpidGroupResponse* internal_default_instance() {
    return reinterpret_cast<const Response_SGXSwitchExtendedEpidGroupResponse*>(
               &_Response_SGXSwitchExtendedEpidGroupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(Response_SGXSwitchExtendedEpidGroupResponse* other);
  friend void swap(Response_SGXSwitchExtendedEpidGroupResponse& a, Response_SGXSwitchExtendedEpidGroupResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response_SGXSwitchExtendedEpidGroupResponse* New() const final {
    return CreateMaybeMessage<Response_SGXSwitchExtendedEpidGroupResponse>(NULL);
  }

  Response_SGXSwitchExtendedEpidGroupResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response_SGXSwitchExtendedEpidGroupResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response_SGXSwitchExtendedEpidGroupResponse& from);
  void MergeFrom(const Response_SGXSwitchExtendedEpidGroupResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response_SGXSwitchExtendedEpidGroupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 errorCode = 1 [default = 1];
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::uint32 errorcode() const;
  void set_errorcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
 private:
  void set_has_errorcode();
  void clear_has_errorcode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 errorcode_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response_SGXRegisterResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Response.SGXRegisterResponse) */ {
 public:
  Response_SGXRegisterResponse();
  virtual ~Response_SGXRegisterResponse();

  Response_SGXRegisterResponse(const Response_SGXRegisterResponse& from);

  inline Response_SGXRegisterResponse& operator=(const Response_SGXRegisterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response_SGXRegisterResponse(Response_SGXRegisterResponse&& from) noexcept
    : Response_SGXRegisterResponse() {
    *this = ::std::move(from);
  }

  inline Response_SGXRegisterResponse& operator=(Response_SGXRegisterResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_SGXRegisterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response_SGXRegisterResponse* internal_default_instance() {
    return reinterpret_cast<const Response_SGXRegisterResponse*>(
               &_Response_SGXRegisterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(Response_SGXRegisterResponse* other);
  friend void swap(Response_SGXRegisterResponse& a, Response_SGXRegisterResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response_SGXRegisterResponse* New() const final {
    return CreateMaybeMessage<Response_SGXRegisterResponse>(NULL);
  }

  Response_SGXRegisterResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response_SGXRegisterResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response_SGXRegisterResponse& from);
  void MergeFrom(const Response_SGXRegisterResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response_SGXRegisterResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 errorCode = 1 [default = 1];
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::uint32 errorcode() const;
  void set_errorcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:aesm.message.Response.SGXRegisterResponse)
 private:
  void set_has_errorcode();
  void clear_has_errorcode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 errorcode_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:aesm.message.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const final {
    return CreateMaybeMessage<Response>(NULL);
  }

  Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Response_InitQuoteResponse InitQuoteResponse;
  typedef Response_GetQuoteResponse GetQuoteResponse;
  typedef Response_GetLaunchTokenResponse GetLaunchTokenResponse;
  typedef Response_ReportAttestationErrorResponse ReportAttestationErrorResponse;
  typedef Response_CreateSessionResponse CreateSessionResponse;
  typedef Response_InvokeServiceResponse InvokeServiceResponse;
  typedef Response_ExchangeReportResponse ExchangeReportResponse;
  typedef Response_CloseSessionResponse CloseSessionResponse;
  typedef Response_GetPsCapResponse GetPsCapResponse;
  typedef Response_GetWhiteListSizeResponse GetWhiteListSizeResponse;
  typedef Response_GetWhiteListResponse GetWhiteListResponse;
  typedef Response_SGXGetExtendedEpidGroupIdResponse SGXGetExtendedEpidGroupIdResponse;
  typedef Response_SGXSwitchExtendedEpidGroupResponse SGXSwitchExtendedEpidGroupResponse;
  typedef Response_SGXRegisterResponse SGXRegisterResponse;

  // accessors -------------------------------------------------------

  // optional .aesm.message.Response.InitQuoteResponse initQuoteRes = 1;
  bool has_initquoteres() const;
  void clear_initquoteres();
  static const int kInitQuoteResFieldNumber = 1;
  private:
  const ::aesm::message::Response_InitQuoteResponse& _internal_initquoteres() const;
  public:
  const ::aesm::message::Response_InitQuoteResponse& initquoteres() const;
  ::aesm::message::Response_InitQuoteResponse* release_initquoteres();
  ::aesm::message::Response_InitQuoteResponse* mutable_initquoteres();
  void set_allocated_initquoteres(::aesm::message::Response_InitQuoteResponse* initquoteres);

  // optional .aesm.message.Response.GetQuoteResponse getQuoteRes = 2;
  bool has_getquoteres() const;
  void clear_getquoteres();
  static const int kGetQuoteResFieldNumber = 2;
  private:
  const ::aesm::message::Response_GetQuoteResponse& _internal_getquoteres() const;
  public:
  const ::aesm::message::Response_GetQuoteResponse& getquoteres() const;
  ::aesm::message::Response_GetQuoteResponse* release_getquoteres();
  ::aesm::message::Response_GetQuoteResponse* mutable_getquoteres();
  void set_allocated_getquoteres(::aesm::message::Response_GetQuoteResponse* getquoteres);

  // optional .aesm.message.Response.GetLaunchTokenResponse getLicTokenRes = 3;
  bool has_getlictokenres() const;
  void clear_getlictokenres();
  static const int kGetLicTokenResFieldNumber = 3;
  private:
  const ::aesm::message::Response_GetLaunchTokenResponse& _internal_getlictokenres() const;
  public:
  const ::aesm::message::Response_GetLaunchTokenResponse& getlictokenres() const;
  ::aesm::message::Response_GetLaunchTokenResponse* release_getlictokenres();
  ::aesm::message::Response_GetLaunchTokenResponse* mutable_getlictokenres();
  void set_allocated_getlictokenres(::aesm::message::Response_GetLaunchTokenResponse* getlictokenres);

  // optional .aesm.message.Response.ReportAttestationErrorResponse reportErrRes = 4;
  bool has_reporterrres() const;
  void clear_reporterrres();
  static const int kReportErrResFieldNumber = 4;
  private:
  const ::aesm::message::Response_ReportAttestationErrorResponse& _internal_reporterrres() const;
  public:
  const ::aesm::message::Response_ReportAttestationErrorResponse& reporterrres() const;
  ::aesm::message::Response_ReportAttestationErrorResponse* release_reporterrres();
  ::aesm::message::Response_ReportAttestationErrorResponse* mutable_reporterrres();
  void set_allocated_reporterrres(::aesm::message::Response_ReportAttestationErrorResponse* reporterrres);

  // optional .aesm.message.Response.CreateSessionResponse createSessionRes = 5;
  bool has_createsessionres() const;
  void clear_createsessionres();
  static const int kCreateSessionResFieldNumber = 5;
  private:
  const ::aesm::message::Response_CreateSessionResponse& _internal_createsessionres() const;
  public:
  const ::aesm::message::Response_CreateSessionResponse& createsessionres() const;
  ::aesm::message::Response_CreateSessionResponse* release_createsessionres();
  ::aesm::message::Response_CreateSessionResponse* mutable_createsessionres();
  void set_allocated_createsessionres(::aesm::message::Response_CreateSessionResponse* createsessionres);

  // optional .aesm.message.Response.InvokeServiceResponse invokeServiceRes = 6;
  bool has_invokeserviceres() const;
  void clear_invokeserviceres();
  static const int kInvokeServiceResFieldNumber = 6;
  private:
  const ::aesm::message::Response_InvokeServiceResponse& _internal_invokeserviceres() const;
  public:
  const ::aesm::message::Response_InvokeServiceResponse& invokeserviceres() const;
  ::aesm::message::Response_InvokeServiceResponse* release_invokeserviceres();
  ::aesm::message::Response_InvokeServiceResponse* mutable_invokeserviceres();
  void set_allocated_invokeserviceres(::aesm::message::Response_InvokeServiceResponse* invokeserviceres);

  // optional .aesm.message.Response.ExchangeReportResponse exchangeReportRes = 7;
  bool has_exchangereportres() const;
  void clear_exchangereportres();
  static const int kExchangeReportResFieldNumber = 7;
  private:
  const ::aesm::message::Response_ExchangeReportResponse& _internal_exchangereportres() const;
  public:
  const ::aesm::message::Response_ExchangeReportResponse& exchangereportres() const;
  ::aesm::message::Response_ExchangeReportResponse* release_exchangereportres();
  ::aesm::message::Response_ExchangeReportResponse* mutable_exchangereportres();
  void set_allocated_exchangereportres(::aesm::message::Response_ExchangeReportResponse* exchangereportres);

  // optional .aesm.message.Response.CloseSessionResponse closeSessionRes = 8;
  bool has_closesessionres() const;
  void clear_closesessionres();
  static const int kCloseSessionResFieldNumber = 8;
  private:
  const ::aesm::message::Response_CloseSessionResponse& _internal_closesessionres() const;
  public:
  const ::aesm::message::Response_CloseSessionResponse& closesessionres() const;
  ::aesm::message::Response_CloseSessionResponse* release_closesessionres();
  ::aesm::message::Response_CloseSessionResponse* mutable_closesessionres();
  void set_allocated_closesessionres(::aesm::message::Response_CloseSessionResponse* closesessionres);

  // optional .aesm.message.Response.GetPsCapResponse getPsCapRes = 9;
  bool has_getpscapres() const;
  void clear_getpscapres();
  static const int kGetPsCapResFieldNumber = 9;
  private:
  const ::aesm::message::Response_GetPsCapResponse& _internal_getpscapres() const;
  public:
  const ::aesm::message::Response_GetPsCapResponse& getpscapres() const;
  ::aesm::message::Response_GetPsCapResponse* release_getpscapres();
  ::aesm::message::Response_GetPsCapResponse* mutable_getpscapres();
  void set_allocated_getpscapres(::aesm::message::Response_GetPsCapResponse* getpscapres);

  // optional .aesm.message.Response.GetWhiteListSizeResponse getWhiteListSizeRes = 10;
  bool has_getwhitelistsizeres() const;
  void clear_getwhitelistsizeres();
  static const int kGetWhiteListSizeResFieldNumber = 10;
  private:
  const ::aesm::message::Response_GetWhiteListSizeResponse& _internal_getwhitelistsizeres() const;
  public:
  const ::aesm::message::Response_GetWhiteListSizeResponse& getwhitelistsizeres() const;
  ::aesm::message::Response_GetWhiteListSizeResponse* release_getwhitelistsizeres();
  ::aesm::message::Response_GetWhiteListSizeResponse* mutable_getwhitelistsizeres();
  void set_allocated_getwhitelistsizeres(::aesm::message::Response_GetWhiteListSizeResponse* getwhitelistsizeres);

  // optional .aesm.message.Response.GetWhiteListResponse getWhiteListRes = 11;
  bool has_getwhitelistres() const;
  void clear_getwhitelistres();
  static const int kGetWhiteListResFieldNumber = 11;
  private:
  const ::aesm::message::Response_GetWhiteListResponse& _internal_getwhitelistres() const;
  public:
  const ::aesm::message::Response_GetWhiteListResponse& getwhitelistres() const;
  ::aesm::message::Response_GetWhiteListResponse* release_getwhitelistres();
  ::aesm::message::Response_GetWhiteListResponse* mutable_getwhitelistres();
  void set_allocated_getwhitelistres(::aesm::message::Response_GetWhiteListResponse* getwhitelistres);

  // optional .aesm.message.Response.SGXGetExtendedEpidGroupIdResponse sgxGetExtendedEpidGroupIdRes = 12;
  bool has_sgxgetextendedepidgroupidres() const;
  void clear_sgxgetextendedepidgroupidres();
  static const int kSgxGetExtendedEpidGroupIdResFieldNumber = 12;
  private:
  const ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse& _internal_sgxgetextendedepidgroupidres() const;
  public:
  const ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse& sgxgetextendedepidgroupidres() const;
  ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse* release_sgxgetextendedepidgroupidres();
  ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse* mutable_sgxgetextendedepidgroupidres();
  void set_allocated_sgxgetextendedepidgroupidres(::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse* sgxgetextendedepidgroupidres);

  // optional .aesm.message.Response.SGXSwitchExtendedEpidGroupResponse sgxSwitchExtendedEpidGroupRes = 13;
  bool has_sgxswitchextendedepidgroupres() const;
  void clear_sgxswitchextendedepidgroupres();
  static const int kSgxSwitchExtendedEpidGroupResFieldNumber = 13;
  private:
  const ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse& _internal_sgxswitchextendedepidgroupres() const;
  public:
  const ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse& sgxswitchextendedepidgroupres() const;
  ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse* release_sgxswitchextendedepidgroupres();
  ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse* mutable_sgxswitchextendedepidgroupres();
  void set_allocated_sgxswitchextendedepidgroupres(::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse* sgxswitchextendedepidgroupres);

  // optional .aesm.message.Response.SGXRegisterResponse sgxRegisterRes = 14;
  bool has_sgxregisterres() const;
  void clear_sgxregisterres();
  static const int kSgxRegisterResFieldNumber = 14;
  private:
  const ::aesm::message::Response_SGXRegisterResponse& _internal_sgxregisterres() const;
  public:
  const ::aesm::message::Response_SGXRegisterResponse& sgxregisterres() const;
  ::aesm::message::Response_SGXRegisterResponse* release_sgxregisterres();
  ::aesm::message::Response_SGXRegisterResponse* mutable_sgxregisterres();
  void set_allocated_sgxregisterres(::aesm::message::Response_SGXRegisterResponse* sgxregisterres);

  // @@protoc_insertion_point(class_scope:aesm.message.Response)
 private:
  void set_has_initquoteres();
  void clear_has_initquoteres();
  void set_has_getquoteres();
  void clear_has_getquoteres();
  void set_has_getlictokenres();
  void clear_has_getlictokenres();
  void set_has_reporterrres();
  void clear_has_reporterrres();
  void set_has_createsessionres();
  void clear_has_createsessionres();
  void set_has_invokeserviceres();
  void clear_has_invokeserviceres();
  void set_has_exchangereportres();
  void clear_has_exchangereportres();
  void set_has_closesessionres();
  void clear_has_closesessionres();
  void set_has_getpscapres();
  void clear_has_getpscapres();
  void set_has_getwhitelistsizeres();
  void clear_has_getwhitelistsizeres();
  void set_has_getwhitelistres();
  void clear_has_getwhitelistres();
  void set_has_sgxgetextendedepidgroupidres();
  void clear_has_sgxgetextendedepidgroupidres();
  void set_has_sgxswitchextendedepidgroupres();
  void clear_has_sgxswitchextendedepidgroupres();
  void set_has_sgxregisterres();
  void clear_has_sgxregisterres();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::aesm::message::Response_InitQuoteResponse* initquoteres_;
  ::aesm::message::Response_GetQuoteResponse* getquoteres_;
  ::aesm::message::Response_GetLaunchTokenResponse* getlictokenres_;
  ::aesm::message::Response_ReportAttestationErrorResponse* reporterrres_;
  ::aesm::message::Response_CreateSessionResponse* createsessionres_;
  ::aesm::message::Response_InvokeServiceResponse* invokeserviceres_;
  ::aesm::message::Response_ExchangeReportResponse* exchangereportres_;
  ::aesm::message::Response_CloseSessionResponse* closesessionres_;
  ::aesm::message::Response_GetPsCapResponse* getpscapres_;
  ::aesm::message::Response_GetWhiteListSizeResponse* getwhitelistsizeres_;
  ::aesm::message::Response_GetWhiteListResponse* getwhitelistres_;
  ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse* sgxgetextendedepidgroupidres_;
  ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse* sgxswitchextendedepidgroupres_;
  ::aesm::message::Response_SGXRegisterResponse* sgxregisterres_;
  friend struct ::protobuf_messages_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Request_InitQuoteRequest

// optional uint32 timeout = 9;
inline bool Request_InitQuoteRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_InitQuoteRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_InitQuoteRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_InitQuoteRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 Request_InitQuoteRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.InitQuoteRequest.timeout)
  return timeout_;
}
inline void Request_InitQuoteRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.InitQuoteRequest.timeout)
}

// -------------------------------------------------------------------

// Request_GetQuoteRequest

// required bytes report = 1;
inline bool Request_GetQuoteRequest::has_report() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_GetQuoteRequest::set_has_report() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_GetQuoteRequest::clear_has_report() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_GetQuoteRequest::clear_report() {
  report_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_report();
}
inline const ::std::string& Request_GetQuoteRequest::report() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteRequest.report)
  return report_.GetNoArena();
}
inline void Request_GetQuoteRequest::set_report(const ::std::string& value) {
  set_has_report();
  report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteRequest.report)
}
#if LANG_CXX11
inline void Request_GetQuoteRequest::set_report(::std::string&& value) {
  set_has_report();
  report_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Request.GetQuoteRequest.report)
}
#endif
inline void Request_GetQuoteRequest::set_report(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_report();
  report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.GetQuoteRequest.report)
}
inline void Request_GetQuoteRequest::set_report(const void* value, size_t size) {
  set_has_report();
  report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.GetQuoteRequest.report)
}
inline ::std::string* Request_GetQuoteRequest::mutable_report() {
  set_has_report();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.GetQuoteRequest.report)
  return report_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_GetQuoteRequest::release_report() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.GetQuoteRequest.report)
  if (!has_report()) {
    return NULL;
  }
  clear_has_report();
  return report_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_GetQuoteRequest::set_allocated_report(::std::string* report) {
  if (report != NULL) {
    set_has_report();
  } else {
    clear_has_report();
  }
  report_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), report);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.GetQuoteRequest.report)
}

// required uint32 quote_type = 2;
inline bool Request_GetQuoteRequest::has_quote_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Request_GetQuoteRequest::set_has_quote_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Request_GetQuoteRequest::clear_has_quote_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Request_GetQuoteRequest::clear_quote_type() {
  quote_type_ = 0u;
  clear_has_quote_type();
}
inline ::google::protobuf::uint32 Request_GetQuoteRequest::quote_type() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteRequest.quote_type)
  return quote_type_;
}
inline void Request_GetQuoteRequest::set_quote_type(::google::protobuf::uint32 value) {
  set_has_quote_type();
  quote_type_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteRequest.quote_type)
}

// required bytes spid = 3;
inline bool Request_GetQuoteRequest::has_spid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_GetQuoteRequest::set_has_spid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_GetQuoteRequest::clear_has_spid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_GetQuoteRequest::clear_spid() {
  spid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_spid();
}
inline const ::std::string& Request_GetQuoteRequest::spid() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteRequest.spid)
  return spid_.GetNoArena();
}
inline void Request_GetQuoteRequest::set_spid(const ::std::string& value) {
  set_has_spid();
  spid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteRequest.spid)
}
#if LANG_CXX11
inline void Request_GetQuoteRequest::set_spid(::std::string&& value) {
  set_has_spid();
  spid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Request.GetQuoteRequest.spid)
}
#endif
inline void Request_GetQuoteRequest::set_spid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_spid();
  spid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.GetQuoteRequest.spid)
}
inline void Request_GetQuoteRequest::set_spid(const void* value, size_t size) {
  set_has_spid();
  spid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.GetQuoteRequest.spid)
}
inline ::std::string* Request_GetQuoteRequest::mutable_spid() {
  set_has_spid();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.GetQuoteRequest.spid)
  return spid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_GetQuoteRequest::release_spid() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.GetQuoteRequest.spid)
  if (!has_spid()) {
    return NULL;
  }
  clear_has_spid();
  return spid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_GetQuoteRequest::set_allocated_spid(::std::string* spid) {
  if (spid != NULL) {
    set_has_spid();
  } else {
    clear_has_spid();
  }
  spid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spid);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.GetQuoteRequest.spid)
}

// optional bytes nonce = 4;
inline bool Request_GetQuoteRequest::has_nonce() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request_GetQuoteRequest::set_has_nonce() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request_GetQuoteRequest::clear_has_nonce() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request_GetQuoteRequest::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nonce();
}
inline const ::std::string& Request_GetQuoteRequest::nonce() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteRequest.nonce)
  return nonce_.GetNoArena();
}
inline void Request_GetQuoteRequest::set_nonce(const ::std::string& value) {
  set_has_nonce();
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteRequest.nonce)
}
#if LANG_CXX11
inline void Request_GetQuoteRequest::set_nonce(::std::string&& value) {
  set_has_nonce();
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Request.GetQuoteRequest.nonce)
}
#endif
inline void Request_GetQuoteRequest::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nonce();
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.GetQuoteRequest.nonce)
}
inline void Request_GetQuoteRequest::set_nonce(const void* value, size_t size) {
  set_has_nonce();
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.GetQuoteRequest.nonce)
}
inline ::std::string* Request_GetQuoteRequest::mutable_nonce() {
  set_has_nonce();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.GetQuoteRequest.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_GetQuoteRequest::release_nonce() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.GetQuoteRequest.nonce)
  if (!has_nonce()) {
    return NULL;
  }
  clear_has_nonce();
  return nonce_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_GetQuoteRequest::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    set_has_nonce();
  } else {
    clear_has_nonce();
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.GetQuoteRequest.nonce)
}

// optional bytes sig_rl = 5;
inline bool Request_GetQuoteRequest::has_sig_rl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Request_GetQuoteRequest::set_has_sig_rl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Request_GetQuoteRequest::clear_has_sig_rl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Request_GetQuoteRequest::clear_sig_rl() {
  sig_rl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sig_rl();
}
inline const ::std::string& Request_GetQuoteRequest::sig_rl() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteRequest.sig_rl)
  return sig_rl_.GetNoArena();
}
inline void Request_GetQuoteRequest::set_sig_rl(const ::std::string& value) {
  set_has_sig_rl();
  sig_rl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteRequest.sig_rl)
}
#if LANG_CXX11
inline void Request_GetQuoteRequest::set_sig_rl(::std::string&& value) {
  set_has_sig_rl();
  sig_rl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Request.GetQuoteRequest.sig_rl)
}
#endif
inline void Request_GetQuoteRequest::set_sig_rl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sig_rl();
  sig_rl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.GetQuoteRequest.sig_rl)
}
inline void Request_GetQuoteRequest::set_sig_rl(const void* value, size_t size) {
  set_has_sig_rl();
  sig_rl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.GetQuoteRequest.sig_rl)
}
inline ::std::string* Request_GetQuoteRequest::mutable_sig_rl() {
  set_has_sig_rl();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.GetQuoteRequest.sig_rl)
  return sig_rl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_GetQuoteRequest::release_sig_rl() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.GetQuoteRequest.sig_rl)
  if (!has_sig_rl()) {
    return NULL;
  }
  clear_has_sig_rl();
  return sig_rl_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_GetQuoteRequest::set_allocated_sig_rl(::std::string* sig_rl) {
  if (sig_rl != NULL) {
    set_has_sig_rl();
  } else {
    clear_has_sig_rl();
  }
  sig_rl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sig_rl);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.GetQuoteRequest.sig_rl)
}

// required uint32 buf_size = 6;
inline bool Request_GetQuoteRequest::has_buf_size() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Request_GetQuoteRequest::set_has_buf_size() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Request_GetQuoteRequest::clear_has_buf_size() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Request_GetQuoteRequest::clear_buf_size() {
  buf_size_ = 0u;
  clear_has_buf_size();
}
inline ::google::protobuf::uint32 Request_GetQuoteRequest::buf_size() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteRequest.buf_size)
  return buf_size_;
}
inline void Request_GetQuoteRequest::set_buf_size(::google::protobuf::uint32 value) {
  set_has_buf_size();
  buf_size_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteRequest.buf_size)
}

// optional bool qe_report = 7;
inline bool Request_GetQuoteRequest::has_qe_report() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Request_GetQuoteRequest::set_has_qe_report() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Request_GetQuoteRequest::clear_has_qe_report() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Request_GetQuoteRequest::clear_qe_report() {
  qe_report_ = false;
  clear_has_qe_report();
}
inline bool Request_GetQuoteRequest::qe_report() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteRequest.qe_report)
  return qe_report_;
}
inline void Request_GetQuoteRequest::set_qe_report(bool value) {
  set_has_qe_report();
  qe_report_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteRequest.qe_report)
}

// optional uint32 timeout = 9;
inline bool Request_GetQuoteRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Request_GetQuoteRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Request_GetQuoteRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Request_GetQuoteRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 Request_GetQuoteRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteRequest.timeout)
  return timeout_;
}
inline void Request_GetQuoteRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteRequest.timeout)
}

// -------------------------------------------------------------------

// Request_GetLaunchTokenRequest

// required bytes mr_enclave = 1;
inline bool Request_GetLaunchTokenRequest::has_mr_enclave() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_GetLaunchTokenRequest::set_has_mr_enclave() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_GetLaunchTokenRequest::clear_has_mr_enclave() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_GetLaunchTokenRequest::clear_mr_enclave() {
  mr_enclave_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mr_enclave();
}
inline const ::std::string& Request_GetLaunchTokenRequest::mr_enclave() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetLaunchTokenRequest.mr_enclave)
  return mr_enclave_.GetNoArena();
}
inline void Request_GetLaunchTokenRequest::set_mr_enclave(const ::std::string& value) {
  set_has_mr_enclave();
  mr_enclave_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetLaunchTokenRequest.mr_enclave)
}
#if LANG_CXX11
inline void Request_GetLaunchTokenRequest::set_mr_enclave(::std::string&& value) {
  set_has_mr_enclave();
  mr_enclave_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Request.GetLaunchTokenRequest.mr_enclave)
}
#endif
inline void Request_GetLaunchTokenRequest::set_mr_enclave(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mr_enclave();
  mr_enclave_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.GetLaunchTokenRequest.mr_enclave)
}
inline void Request_GetLaunchTokenRequest::set_mr_enclave(const void* value, size_t size) {
  set_has_mr_enclave();
  mr_enclave_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.GetLaunchTokenRequest.mr_enclave)
}
inline ::std::string* Request_GetLaunchTokenRequest::mutable_mr_enclave() {
  set_has_mr_enclave();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.GetLaunchTokenRequest.mr_enclave)
  return mr_enclave_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_GetLaunchTokenRequest::release_mr_enclave() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.GetLaunchTokenRequest.mr_enclave)
  if (!has_mr_enclave()) {
    return NULL;
  }
  clear_has_mr_enclave();
  return mr_enclave_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_GetLaunchTokenRequest::set_allocated_mr_enclave(::std::string* mr_enclave) {
  if (mr_enclave != NULL) {
    set_has_mr_enclave();
  } else {
    clear_has_mr_enclave();
  }
  mr_enclave_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mr_enclave);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.GetLaunchTokenRequest.mr_enclave)
}

// required bytes mr_signer = 2;
inline bool Request_GetLaunchTokenRequest::has_mr_signer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_GetLaunchTokenRequest::set_has_mr_signer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_GetLaunchTokenRequest::clear_has_mr_signer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_GetLaunchTokenRequest::clear_mr_signer() {
  mr_signer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mr_signer();
}
inline const ::std::string& Request_GetLaunchTokenRequest::mr_signer() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetLaunchTokenRequest.mr_signer)
  return mr_signer_.GetNoArena();
}
inline void Request_GetLaunchTokenRequest::set_mr_signer(const ::std::string& value) {
  set_has_mr_signer();
  mr_signer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetLaunchTokenRequest.mr_signer)
}
#if LANG_CXX11
inline void Request_GetLaunchTokenRequest::set_mr_signer(::std::string&& value) {
  set_has_mr_signer();
  mr_signer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Request.GetLaunchTokenRequest.mr_signer)
}
#endif
inline void Request_GetLaunchTokenRequest::set_mr_signer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mr_signer();
  mr_signer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.GetLaunchTokenRequest.mr_signer)
}
inline void Request_GetLaunchTokenRequest::set_mr_signer(const void* value, size_t size) {
  set_has_mr_signer();
  mr_signer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.GetLaunchTokenRequest.mr_signer)
}
inline ::std::string* Request_GetLaunchTokenRequest::mutable_mr_signer() {
  set_has_mr_signer();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.GetLaunchTokenRequest.mr_signer)
  return mr_signer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_GetLaunchTokenRequest::release_mr_signer() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.GetLaunchTokenRequest.mr_signer)
  if (!has_mr_signer()) {
    return NULL;
  }
  clear_has_mr_signer();
  return mr_signer_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_GetLaunchTokenRequest::set_allocated_mr_signer(::std::string* mr_signer) {
  if (mr_signer != NULL) {
    set_has_mr_signer();
  } else {
    clear_has_mr_signer();
  }
  mr_signer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mr_signer);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.GetLaunchTokenRequest.mr_signer)
}

// required bytes se_attributes = 3;
inline bool Request_GetLaunchTokenRequest::has_se_attributes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request_GetLaunchTokenRequest::set_has_se_attributes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request_GetLaunchTokenRequest::clear_has_se_attributes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request_GetLaunchTokenRequest::clear_se_attributes() {
  se_attributes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_se_attributes();
}
inline const ::std::string& Request_GetLaunchTokenRequest::se_attributes() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetLaunchTokenRequest.se_attributes)
  return se_attributes_.GetNoArena();
}
inline void Request_GetLaunchTokenRequest::set_se_attributes(const ::std::string& value) {
  set_has_se_attributes();
  se_attributes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetLaunchTokenRequest.se_attributes)
}
#if LANG_CXX11
inline void Request_GetLaunchTokenRequest::set_se_attributes(::std::string&& value) {
  set_has_se_attributes();
  se_attributes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Request.GetLaunchTokenRequest.se_attributes)
}
#endif
inline void Request_GetLaunchTokenRequest::set_se_attributes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_se_attributes();
  se_attributes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.GetLaunchTokenRequest.se_attributes)
}
inline void Request_GetLaunchTokenRequest::set_se_attributes(const void* value, size_t size) {
  set_has_se_attributes();
  se_attributes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.GetLaunchTokenRequest.se_attributes)
}
inline ::std::string* Request_GetLaunchTokenRequest::mutable_se_attributes() {
  set_has_se_attributes();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.GetLaunchTokenRequest.se_attributes)
  return se_attributes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_GetLaunchTokenRequest::release_se_attributes() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.GetLaunchTokenRequest.se_attributes)
  if (!has_se_attributes()) {
    return NULL;
  }
  clear_has_se_attributes();
  return se_attributes_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_GetLaunchTokenRequest::set_allocated_se_attributes(::std::string* se_attributes) {
  if (se_attributes != NULL) {
    set_has_se_attributes();
  } else {
    clear_has_se_attributes();
  }
  se_attributes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), se_attributes);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.GetLaunchTokenRequest.se_attributes)
}

// optional uint32 timeout = 9;
inline bool Request_GetLaunchTokenRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Request_GetLaunchTokenRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Request_GetLaunchTokenRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Request_GetLaunchTokenRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 Request_GetLaunchTokenRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetLaunchTokenRequest.timeout)
  return timeout_;
}
inline void Request_GetLaunchTokenRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetLaunchTokenRequest.timeout)
}

// -------------------------------------------------------------------

// Request_ReportAttestationErrorRequest

// required bytes platform_info = 1;
inline bool Request_ReportAttestationErrorRequest::has_platform_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_ReportAttestationErrorRequest::set_has_platform_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_ReportAttestationErrorRequest::clear_has_platform_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_ReportAttestationErrorRequest::clear_platform_info() {
  platform_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platform_info();
}
inline const ::std::string& Request_ReportAttestationErrorRequest::platform_info() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.ReportAttestationErrorRequest.platform_info)
  return platform_info_.GetNoArena();
}
inline void Request_ReportAttestationErrorRequest::set_platform_info(const ::std::string& value) {
  set_has_platform_info();
  platform_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.ReportAttestationErrorRequest.platform_info)
}
#if LANG_CXX11
inline void Request_ReportAttestationErrorRequest::set_platform_info(::std::string&& value) {
  set_has_platform_info();
  platform_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Request.ReportAttestationErrorRequest.platform_info)
}
#endif
inline void Request_ReportAttestationErrorRequest::set_platform_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_platform_info();
  platform_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.ReportAttestationErrorRequest.platform_info)
}
inline void Request_ReportAttestationErrorRequest::set_platform_info(const void* value, size_t size) {
  set_has_platform_info();
  platform_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.ReportAttestationErrorRequest.platform_info)
}
inline ::std::string* Request_ReportAttestationErrorRequest::mutable_platform_info() {
  set_has_platform_info();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.ReportAttestationErrorRequest.platform_info)
  return platform_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_ReportAttestationErrorRequest::release_platform_info() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.ReportAttestationErrorRequest.platform_info)
  if (!has_platform_info()) {
    return NULL;
  }
  clear_has_platform_info();
  return platform_info_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_ReportAttestationErrorRequest::set_allocated_platform_info(::std::string* platform_info) {
  if (platform_info != NULL) {
    set_has_platform_info();
  } else {
    clear_has_platform_info();
  }
  platform_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform_info);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.ReportAttestationErrorRequest.platform_info)
}

// required uint32 attestation_error_code = 2;
inline bool Request_ReportAttestationErrorRequest::has_attestation_error_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_ReportAttestationErrorRequest::set_has_attestation_error_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_ReportAttestationErrorRequest::clear_has_attestation_error_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_ReportAttestationErrorRequest::clear_attestation_error_code() {
  attestation_error_code_ = 0u;
  clear_has_attestation_error_code();
}
inline ::google::protobuf::uint32 Request_ReportAttestationErrorRequest::attestation_error_code() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.ReportAttestationErrorRequest.attestation_error_code)
  return attestation_error_code_;
}
inline void Request_ReportAttestationErrorRequest::set_attestation_error_code(::google::protobuf::uint32 value) {
  set_has_attestation_error_code();
  attestation_error_code_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.ReportAttestationErrorRequest.attestation_error_code)
}

// required uint32 update_info_size = 3;
inline bool Request_ReportAttestationErrorRequest::has_update_info_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request_ReportAttestationErrorRequest::set_has_update_info_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request_ReportAttestationErrorRequest::clear_has_update_info_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request_ReportAttestationErrorRequest::clear_update_info_size() {
  update_info_size_ = 0u;
  clear_has_update_info_size();
}
inline ::google::protobuf::uint32 Request_ReportAttestationErrorRequest::update_info_size() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.ReportAttestationErrorRequest.update_info_size)
  return update_info_size_;
}
inline void Request_ReportAttestationErrorRequest::set_update_info_size(::google::protobuf::uint32 value) {
  set_has_update_info_size();
  update_info_size_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.ReportAttestationErrorRequest.update_info_size)
}

// optional uint32 timeout = 9;
inline bool Request_ReportAttestationErrorRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Request_ReportAttestationErrorRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Request_ReportAttestationErrorRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Request_ReportAttestationErrorRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 Request_ReportAttestationErrorRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.ReportAttestationErrorRequest.timeout)
  return timeout_;
}
inline void Request_ReportAttestationErrorRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.ReportAttestationErrorRequest.timeout)
}

// -------------------------------------------------------------------

// Request_CreateSessionRequest

// required uint32 dh_msg1_size = 1;
inline bool Request_CreateSessionRequest::has_dh_msg1_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_CreateSessionRequest::set_has_dh_msg1_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_CreateSessionRequest::clear_has_dh_msg1_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_CreateSessionRequest::clear_dh_msg1_size() {
  dh_msg1_size_ = 0u;
  clear_has_dh_msg1_size();
}
inline ::google::protobuf::uint32 Request_CreateSessionRequest::dh_msg1_size() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.CreateSessionRequest.dh_msg1_size)
  return dh_msg1_size_;
}
inline void Request_CreateSessionRequest::set_dh_msg1_size(::google::protobuf::uint32 value) {
  set_has_dh_msg1_size();
  dh_msg1_size_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.CreateSessionRequest.dh_msg1_size)
}

// optional uint32 timeout = 9;
inline bool Request_CreateSessionRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_CreateSessionRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_CreateSessionRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_CreateSessionRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 Request_CreateSessionRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.CreateSessionRequest.timeout)
  return timeout_;
}
inline void Request_CreateSessionRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.CreateSessionRequest.timeout)
}

// -------------------------------------------------------------------

// Request_InvokeServiceRequest

// required bytes pse_message = 1;
inline bool Request_InvokeServiceRequest::has_pse_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_InvokeServiceRequest::set_has_pse_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_InvokeServiceRequest::clear_has_pse_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_InvokeServiceRequest::clear_pse_message() {
  pse_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pse_message();
}
inline const ::std::string& Request_InvokeServiceRequest::pse_message() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.InvokeServiceRequest.pse_message)
  return pse_message_.GetNoArena();
}
inline void Request_InvokeServiceRequest::set_pse_message(const ::std::string& value) {
  set_has_pse_message();
  pse_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.InvokeServiceRequest.pse_message)
}
#if LANG_CXX11
inline void Request_InvokeServiceRequest::set_pse_message(::std::string&& value) {
  set_has_pse_message();
  pse_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Request.InvokeServiceRequest.pse_message)
}
#endif
inline void Request_InvokeServiceRequest::set_pse_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pse_message();
  pse_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.InvokeServiceRequest.pse_message)
}
inline void Request_InvokeServiceRequest::set_pse_message(const void* value, size_t size) {
  set_has_pse_message();
  pse_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.InvokeServiceRequest.pse_message)
}
inline ::std::string* Request_InvokeServiceRequest::mutable_pse_message() {
  set_has_pse_message();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.InvokeServiceRequest.pse_message)
  return pse_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_InvokeServiceRequest::release_pse_message() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.InvokeServiceRequest.pse_message)
  if (!has_pse_message()) {
    return NULL;
  }
  clear_has_pse_message();
  return pse_message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_InvokeServiceRequest::set_allocated_pse_message(::std::string* pse_message) {
  if (pse_message != NULL) {
    set_has_pse_message();
  } else {
    clear_has_pse_message();
  }
  pse_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pse_message);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.InvokeServiceRequest.pse_message)
}

// required uint32 pse_resp_size = 2;
inline bool Request_InvokeServiceRequest::has_pse_resp_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_InvokeServiceRequest::set_has_pse_resp_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_InvokeServiceRequest::clear_has_pse_resp_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_InvokeServiceRequest::clear_pse_resp_size() {
  pse_resp_size_ = 0u;
  clear_has_pse_resp_size();
}
inline ::google::protobuf::uint32 Request_InvokeServiceRequest::pse_resp_size() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.InvokeServiceRequest.pse_resp_size)
  return pse_resp_size_;
}
inline void Request_InvokeServiceRequest::set_pse_resp_size(::google::protobuf::uint32 value) {
  set_has_pse_resp_size();
  pse_resp_size_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.InvokeServiceRequest.pse_resp_size)
}

// optional uint32 timeout = 9;
inline bool Request_InvokeServiceRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request_InvokeServiceRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request_InvokeServiceRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request_InvokeServiceRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 Request_InvokeServiceRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.InvokeServiceRequest.timeout)
  return timeout_;
}
inline void Request_InvokeServiceRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.InvokeServiceRequest.timeout)
}

// -------------------------------------------------------------------

// Request_ExchangeReportRequest

// required uint32 session_id = 1;
inline bool Request_ExchangeReportRequest::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_ExchangeReportRequest::set_has_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_ExchangeReportRequest::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_ExchangeReportRequest::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 Request_ExchangeReportRequest::session_id() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.ExchangeReportRequest.session_id)
  return session_id_;
}
inline void Request_ExchangeReportRequest::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.ExchangeReportRequest.session_id)
}

// required bytes se_dh_msg2 = 2;
inline bool Request_ExchangeReportRequest::has_se_dh_msg2() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_ExchangeReportRequest::set_has_se_dh_msg2() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_ExchangeReportRequest::clear_has_se_dh_msg2() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_ExchangeReportRequest::clear_se_dh_msg2() {
  se_dh_msg2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_se_dh_msg2();
}
inline const ::std::string& Request_ExchangeReportRequest::se_dh_msg2() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.ExchangeReportRequest.se_dh_msg2)
  return se_dh_msg2_.GetNoArena();
}
inline void Request_ExchangeReportRequest::set_se_dh_msg2(const ::std::string& value) {
  set_has_se_dh_msg2();
  se_dh_msg2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.ExchangeReportRequest.se_dh_msg2)
}
#if LANG_CXX11
inline void Request_ExchangeReportRequest::set_se_dh_msg2(::std::string&& value) {
  set_has_se_dh_msg2();
  se_dh_msg2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Request.ExchangeReportRequest.se_dh_msg2)
}
#endif
inline void Request_ExchangeReportRequest::set_se_dh_msg2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_se_dh_msg2();
  se_dh_msg2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.ExchangeReportRequest.se_dh_msg2)
}
inline void Request_ExchangeReportRequest::set_se_dh_msg2(const void* value, size_t size) {
  set_has_se_dh_msg2();
  se_dh_msg2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.ExchangeReportRequest.se_dh_msg2)
}
inline ::std::string* Request_ExchangeReportRequest::mutable_se_dh_msg2() {
  set_has_se_dh_msg2();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.ExchangeReportRequest.se_dh_msg2)
  return se_dh_msg2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_ExchangeReportRequest::release_se_dh_msg2() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.ExchangeReportRequest.se_dh_msg2)
  if (!has_se_dh_msg2()) {
    return NULL;
  }
  clear_has_se_dh_msg2();
  return se_dh_msg2_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_ExchangeReportRequest::set_allocated_se_dh_msg2(::std::string* se_dh_msg2) {
  if (se_dh_msg2 != NULL) {
    set_has_se_dh_msg2();
  } else {
    clear_has_se_dh_msg2();
  }
  se_dh_msg2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), se_dh_msg2);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.ExchangeReportRequest.se_dh_msg2)
}

// required uint32 se_dh_msg3_size = 3;
inline bool Request_ExchangeReportRequest::has_se_dh_msg3_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request_ExchangeReportRequest::set_has_se_dh_msg3_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request_ExchangeReportRequest::clear_has_se_dh_msg3_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request_ExchangeReportRequest::clear_se_dh_msg3_size() {
  se_dh_msg3_size_ = 0u;
  clear_has_se_dh_msg3_size();
}
inline ::google::protobuf::uint32 Request_ExchangeReportRequest::se_dh_msg3_size() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.ExchangeReportRequest.se_dh_msg3_size)
  return se_dh_msg3_size_;
}
inline void Request_ExchangeReportRequest::set_se_dh_msg3_size(::google::protobuf::uint32 value) {
  set_has_se_dh_msg3_size();
  se_dh_msg3_size_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.ExchangeReportRequest.se_dh_msg3_size)
}

// optional uint32 timeout = 9;
inline bool Request_ExchangeReportRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Request_ExchangeReportRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Request_ExchangeReportRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Request_ExchangeReportRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 Request_ExchangeReportRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.ExchangeReportRequest.timeout)
  return timeout_;
}
inline void Request_ExchangeReportRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.ExchangeReportRequest.timeout)
}

// -------------------------------------------------------------------

// Request_CloseSessionRequest

// required uint32 session_id = 1;
inline bool Request_CloseSessionRequest::has_session_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_CloseSessionRequest::set_has_session_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_CloseSessionRequest::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_CloseSessionRequest::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 Request_CloseSessionRequest::session_id() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.CloseSessionRequest.session_id)
  return session_id_;
}
inline void Request_CloseSessionRequest::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.CloseSessionRequest.session_id)
}

// optional uint32 timeout = 9;
inline bool Request_CloseSessionRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_CloseSessionRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_CloseSessionRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_CloseSessionRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 Request_CloseSessionRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.CloseSessionRequest.timeout)
  return timeout_;
}
inline void Request_CloseSessionRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.CloseSessionRequest.timeout)
}

// -------------------------------------------------------------------

// Request_GetPsCapRequest

// optional uint32 timeout = 9;
inline bool Request_GetPsCapRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_GetPsCapRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_GetPsCapRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_GetPsCapRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 Request_GetPsCapRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetPsCapRequest.timeout)
  return timeout_;
}
inline void Request_GetPsCapRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetPsCapRequest.timeout)
}

// -------------------------------------------------------------------

// Request_GetWhiteListSizeRequest

// optional uint32 timeout = 9;
inline bool Request_GetWhiteListSizeRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_GetWhiteListSizeRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_GetWhiteListSizeRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_GetWhiteListSizeRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 Request_GetWhiteListSizeRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetWhiteListSizeRequest.timeout)
  return timeout_;
}
inline void Request_GetWhiteListSizeRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetWhiteListSizeRequest.timeout)
}

// -------------------------------------------------------------------

// Request_GetWhiteListRequest

// optional uint32 white_list_size = 1;
inline bool Request_GetWhiteListRequest::has_white_list_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_GetWhiteListRequest::set_has_white_list_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_GetWhiteListRequest::clear_has_white_list_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_GetWhiteListRequest::clear_white_list_size() {
  white_list_size_ = 0u;
  clear_has_white_list_size();
}
inline ::google::protobuf::uint32 Request_GetWhiteListRequest::white_list_size() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetWhiteListRequest.white_list_size)
  return white_list_size_;
}
inline void Request_GetWhiteListRequest::set_white_list_size(::google::protobuf::uint32 value) {
  set_has_white_list_size();
  white_list_size_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetWhiteListRequest.white_list_size)
}

// optional uint32 timeout = 9;
inline bool Request_GetWhiteListRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_GetWhiteListRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_GetWhiteListRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_GetWhiteListRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 Request_GetWhiteListRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetWhiteListRequest.timeout)
  return timeout_;
}
inline void Request_GetWhiteListRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetWhiteListRequest.timeout)
}

// -------------------------------------------------------------------

// Request_SGXGetExtendedEpidGroupIdRequest

// optional uint32 timeout = 9;
inline bool Request_SGXGetExtendedEpidGroupIdRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_SGXGetExtendedEpidGroupIdRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_SGXGetExtendedEpidGroupIdRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_SGXGetExtendedEpidGroupIdRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 Request_SGXGetExtendedEpidGroupIdRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest.timeout)
  return timeout_;
}
inline void Request_SGXGetExtendedEpidGroupIdRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest.timeout)
}

// -------------------------------------------------------------------

// Request_SGXSwitchExtendedEpidGroupRequest

// optional uint32 x_group_id = 1;
inline bool Request_SGXSwitchExtendedEpidGroupRequest::has_x_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_SGXSwitchExtendedEpidGroupRequest::set_has_x_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_SGXSwitchExtendedEpidGroupRequest::clear_has_x_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_SGXSwitchExtendedEpidGroupRequest::clear_x_group_id() {
  x_group_id_ = 0u;
  clear_has_x_group_id();
}
inline ::google::protobuf::uint32 Request_SGXSwitchExtendedEpidGroupRequest::x_group_id() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest.x_group_id)
  return x_group_id_;
}
inline void Request_SGXSwitchExtendedEpidGroupRequest::set_x_group_id(::google::protobuf::uint32 value) {
  set_has_x_group_id();
  x_group_id_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest.x_group_id)
}

// optional uint32 timeout = 9;
inline bool Request_SGXSwitchExtendedEpidGroupRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_SGXSwitchExtendedEpidGroupRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_SGXSwitchExtendedEpidGroupRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_SGXSwitchExtendedEpidGroupRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 Request_SGXSwitchExtendedEpidGroupRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest.timeout)
  return timeout_;
}
inline void Request_SGXSwitchExtendedEpidGroupRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest.timeout)
}

// -------------------------------------------------------------------

// Request_SGXRegisterRequest

// required bytes buf = 1;
inline bool Request_SGXRegisterRequest::has_buf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_SGXRegisterRequest::set_has_buf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_SGXRegisterRequest::clear_has_buf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_SGXRegisterRequest::clear_buf() {
  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buf();
}
inline const ::std::string& Request_SGXRegisterRequest::buf() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.SGXRegisterRequest.buf)
  return buf_.GetNoArena();
}
inline void Request_SGXRegisterRequest::set_buf(const ::std::string& value) {
  set_has_buf();
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.SGXRegisterRequest.buf)
}
#if LANG_CXX11
inline void Request_SGXRegisterRequest::set_buf(::std::string&& value) {
  set_has_buf();
  buf_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Request.SGXRegisterRequest.buf)
}
#endif
inline void Request_SGXRegisterRequest::set_buf(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_buf();
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.SGXRegisterRequest.buf)
}
inline void Request_SGXRegisterRequest::set_buf(const void* value, size_t size) {
  set_has_buf();
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.SGXRegisterRequest.buf)
}
inline ::std::string* Request_SGXRegisterRequest::mutable_buf() {
  set_has_buf();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.SGXRegisterRequest.buf)
  return buf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_SGXRegisterRequest::release_buf() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.SGXRegisterRequest.buf)
  if (!has_buf()) {
    return NULL;
  }
  clear_has_buf();
  return buf_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_SGXRegisterRequest::set_allocated_buf(::std::string* buf) {
  if (buf != NULL) {
    set_has_buf();
  } else {
    clear_has_buf();
  }
  buf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.SGXRegisterRequest.buf)
}

// required uint32 data_type = 2;
inline bool Request_SGXRegisterRequest::has_data_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_SGXRegisterRequest::set_has_data_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_SGXRegisterRequest::clear_has_data_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_SGXRegisterRequest::clear_data_type() {
  data_type_ = 0u;
  clear_has_data_type();
}
inline ::google::protobuf::uint32 Request_SGXRegisterRequest::data_type() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.SGXRegisterRequest.data_type)
  return data_type_;
}
inline void Request_SGXRegisterRequest::set_data_type(::google::protobuf::uint32 value) {
  set_has_data_type();
  data_type_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.SGXRegisterRequest.data_type)
}

// optional uint32 timeout = 9;
inline bool Request_SGXRegisterRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request_SGXRegisterRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request_SGXRegisterRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request_SGXRegisterRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 Request_SGXRegisterRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.SGXRegisterRequest.timeout)
  return timeout_;
}
inline void Request_SGXRegisterRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.SGXRegisterRequest.timeout)
}

// -------------------------------------------------------------------

// Request

// optional .aesm.message.Request.InitQuoteRequest initQuoteReq = 1;
inline bool Request::has_initquotereq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_initquotereq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_initquotereq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_initquotereq() {
  if (initquotereq_ != NULL) initquotereq_->Clear();
  clear_has_initquotereq();
}
inline const ::aesm::message::Request_InitQuoteRequest& Request::_internal_initquotereq() const {
  return *initquotereq_;
}
inline const ::aesm::message::Request_InitQuoteRequest& Request::initquotereq() const {
  const ::aesm::message::Request_InitQuoteRequest* p = initquotereq_;
  // @@protoc_insertion_point(field_get:aesm.message.Request.initQuoteReq)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Request_InitQuoteRequest*>(
      &::aesm::message::_Request_InitQuoteRequest_default_instance_);
}
inline ::aesm::message::Request_InitQuoteRequest* Request::release_initquotereq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.initQuoteReq)
  clear_has_initquotereq();
  ::aesm::message::Request_InitQuoteRequest* temp = initquotereq_;
  initquotereq_ = NULL;
  return temp;
}
inline ::aesm::message::Request_InitQuoteRequest* Request::mutable_initquotereq() {
  set_has_initquotereq();
  if (initquotereq_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Request_InitQuoteRequest>(GetArenaNoVirtual());
    initquotereq_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.initQuoteReq)
  return initquotereq_;
}
inline void Request::set_allocated_initquotereq(::aesm::message::Request_InitQuoteRequest* initquotereq) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete initquotereq_;
  }
  if (initquotereq) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      initquotereq = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, initquotereq, submessage_arena);
    }
    set_has_initquotereq();
  } else {
    clear_has_initquotereq();
  }
  initquotereq_ = initquotereq;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.initQuoteReq)
}

// optional .aesm.message.Request.GetQuoteRequest getQuoteReq = 2;
inline bool Request::has_getquotereq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request::set_has_getquotereq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request::clear_has_getquotereq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request::clear_getquotereq() {
  if (getquotereq_ != NULL) getquotereq_->Clear();
  clear_has_getquotereq();
}
inline const ::aesm::message::Request_GetQuoteRequest& Request::_internal_getquotereq() const {
  return *getquotereq_;
}
inline const ::aesm::message::Request_GetQuoteRequest& Request::getquotereq() const {
  const ::aesm::message::Request_GetQuoteRequest* p = getquotereq_;
  // @@protoc_insertion_point(field_get:aesm.message.Request.getQuoteReq)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Request_GetQuoteRequest*>(
      &::aesm::message::_Request_GetQuoteRequest_default_instance_);
}
inline ::aesm::message::Request_GetQuoteRequest* Request::release_getquotereq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.getQuoteReq)
  clear_has_getquotereq();
  ::aesm::message::Request_GetQuoteRequest* temp = getquotereq_;
  getquotereq_ = NULL;
  return temp;
}
inline ::aesm::message::Request_GetQuoteRequest* Request::mutable_getquotereq() {
  set_has_getquotereq();
  if (getquotereq_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Request_GetQuoteRequest>(GetArenaNoVirtual());
    getquotereq_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.getQuoteReq)
  return getquotereq_;
}
inline void Request::set_allocated_getquotereq(::aesm::message::Request_GetQuoteRequest* getquotereq) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete getquotereq_;
  }
  if (getquotereq) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getquotereq = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getquotereq, submessage_arena);
    }
    set_has_getquotereq();
  } else {
    clear_has_getquotereq();
  }
  getquotereq_ = getquotereq;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.getQuoteReq)
}

// optional .aesm.message.Request.GetLaunchTokenRequest getLicTokenReq = 3;
inline bool Request::has_getlictokenreq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request::set_has_getlictokenreq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request::clear_has_getlictokenreq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request::clear_getlictokenreq() {
  if (getlictokenreq_ != NULL) getlictokenreq_->Clear();
  clear_has_getlictokenreq();
}
inline const ::aesm::message::Request_GetLaunchTokenRequest& Request::_internal_getlictokenreq() const {
  return *getlictokenreq_;
}
inline const ::aesm::message::Request_GetLaunchTokenRequest& Request::getlictokenreq() const {
  const ::aesm::message::Request_GetLaunchTokenRequest* p = getlictokenreq_;
  // @@protoc_insertion_point(field_get:aesm.message.Request.getLicTokenReq)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Request_GetLaunchTokenRequest*>(
      &::aesm::message::_Request_GetLaunchTokenRequest_default_instance_);
}
inline ::aesm::message::Request_GetLaunchTokenRequest* Request::release_getlictokenreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.getLicTokenReq)
  clear_has_getlictokenreq();
  ::aesm::message::Request_GetLaunchTokenRequest* temp = getlictokenreq_;
  getlictokenreq_ = NULL;
  return temp;
}
inline ::aesm::message::Request_GetLaunchTokenRequest* Request::mutable_getlictokenreq() {
  set_has_getlictokenreq();
  if (getlictokenreq_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Request_GetLaunchTokenRequest>(GetArenaNoVirtual());
    getlictokenreq_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.getLicTokenReq)
  return getlictokenreq_;
}
inline void Request::set_allocated_getlictokenreq(::aesm::message::Request_GetLaunchTokenRequest* getlictokenreq) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete getlictokenreq_;
  }
  if (getlictokenreq) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getlictokenreq = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getlictokenreq, submessage_arena);
    }
    set_has_getlictokenreq();
  } else {
    clear_has_getlictokenreq();
  }
  getlictokenreq_ = getlictokenreq;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.getLicTokenReq)
}

// optional .aesm.message.Request.ReportAttestationErrorRequest reportErrReq = 4;
inline bool Request::has_reporterrreq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Request::set_has_reporterrreq() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Request::clear_has_reporterrreq() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Request::clear_reporterrreq() {
  if (reporterrreq_ != NULL) reporterrreq_->Clear();
  clear_has_reporterrreq();
}
inline const ::aesm::message::Request_ReportAttestationErrorRequest& Request::_internal_reporterrreq() const {
  return *reporterrreq_;
}
inline const ::aesm::message::Request_ReportAttestationErrorRequest& Request::reporterrreq() const {
  const ::aesm::message::Request_ReportAttestationErrorRequest* p = reporterrreq_;
  // @@protoc_insertion_point(field_get:aesm.message.Request.reportErrReq)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Request_ReportAttestationErrorRequest*>(
      &::aesm::message::_Request_ReportAttestationErrorRequest_default_instance_);
}
inline ::aesm::message::Request_ReportAttestationErrorRequest* Request::release_reporterrreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.reportErrReq)
  clear_has_reporterrreq();
  ::aesm::message::Request_ReportAttestationErrorRequest* temp = reporterrreq_;
  reporterrreq_ = NULL;
  return temp;
}
inline ::aesm::message::Request_ReportAttestationErrorRequest* Request::mutable_reporterrreq() {
  set_has_reporterrreq();
  if (reporterrreq_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Request_ReportAttestationErrorRequest>(GetArenaNoVirtual());
    reporterrreq_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.reportErrReq)
  return reporterrreq_;
}
inline void Request::set_allocated_reporterrreq(::aesm::message::Request_ReportAttestationErrorRequest* reporterrreq) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reporterrreq_;
  }
  if (reporterrreq) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reporterrreq = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reporterrreq, submessage_arena);
    }
    set_has_reporterrreq();
  } else {
    clear_has_reporterrreq();
  }
  reporterrreq_ = reporterrreq;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.reportErrReq)
}

// optional .aesm.message.Request.CreateSessionRequest createSessionReq = 5;
inline bool Request::has_createsessionreq() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Request::set_has_createsessionreq() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Request::clear_has_createsessionreq() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Request::clear_createsessionreq() {
  if (createsessionreq_ != NULL) createsessionreq_->Clear();
  clear_has_createsessionreq();
}
inline const ::aesm::message::Request_CreateSessionRequest& Request::_internal_createsessionreq() const {
  return *createsessionreq_;
}
inline const ::aesm::message::Request_CreateSessionRequest& Request::createsessionreq() const {
  const ::aesm::message::Request_CreateSessionRequest* p = createsessionreq_;
  // @@protoc_insertion_point(field_get:aesm.message.Request.createSessionReq)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Request_CreateSessionRequest*>(
      &::aesm::message::_Request_CreateSessionRequest_default_instance_);
}
inline ::aesm::message::Request_CreateSessionRequest* Request::release_createsessionreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.createSessionReq)
  clear_has_createsessionreq();
  ::aesm::message::Request_CreateSessionRequest* temp = createsessionreq_;
  createsessionreq_ = NULL;
  return temp;
}
inline ::aesm::message::Request_CreateSessionRequest* Request::mutable_createsessionreq() {
  set_has_createsessionreq();
  if (createsessionreq_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Request_CreateSessionRequest>(GetArenaNoVirtual());
    createsessionreq_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.createSessionReq)
  return createsessionreq_;
}
inline void Request::set_allocated_createsessionreq(::aesm::message::Request_CreateSessionRequest* createsessionreq) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete createsessionreq_;
  }
  if (createsessionreq) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      createsessionreq = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, createsessionreq, submessage_arena);
    }
    set_has_createsessionreq();
  } else {
    clear_has_createsessionreq();
  }
  createsessionreq_ = createsessionreq;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.createSessionReq)
}

// optional .aesm.message.Request.InvokeServiceRequest invokeServiceReq = 6;
inline bool Request::has_invokeservicereq() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Request::set_has_invokeservicereq() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Request::clear_has_invokeservicereq() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Request::clear_invokeservicereq() {
  if (invokeservicereq_ != NULL) invokeservicereq_->Clear();
  clear_has_invokeservicereq();
}
inline const ::aesm::message::Request_InvokeServiceRequest& Request::_internal_invokeservicereq() const {
  return *invokeservicereq_;
}
inline const ::aesm::message::Request_InvokeServiceRequest& Request::invokeservicereq() const {
  const ::aesm::message::Request_InvokeServiceRequest* p = invokeservicereq_;
  // @@protoc_insertion_point(field_get:aesm.message.Request.invokeServiceReq)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Request_InvokeServiceRequest*>(
      &::aesm::message::_Request_InvokeServiceRequest_default_instance_);
}
inline ::aesm::message::Request_InvokeServiceRequest* Request::release_invokeservicereq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.invokeServiceReq)
  clear_has_invokeservicereq();
  ::aesm::message::Request_InvokeServiceRequest* temp = invokeservicereq_;
  invokeservicereq_ = NULL;
  return temp;
}
inline ::aesm::message::Request_InvokeServiceRequest* Request::mutable_invokeservicereq() {
  set_has_invokeservicereq();
  if (invokeservicereq_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Request_InvokeServiceRequest>(GetArenaNoVirtual());
    invokeservicereq_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.invokeServiceReq)
  return invokeservicereq_;
}
inline void Request::set_allocated_invokeservicereq(::aesm::message::Request_InvokeServiceRequest* invokeservicereq) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete invokeservicereq_;
  }
  if (invokeservicereq) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      invokeservicereq = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, invokeservicereq, submessage_arena);
    }
    set_has_invokeservicereq();
  } else {
    clear_has_invokeservicereq();
  }
  invokeservicereq_ = invokeservicereq;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.invokeServiceReq)
}

// optional .aesm.message.Request.ExchangeReportRequest exchangeReportReq = 7;
inline bool Request::has_exchangereportreq() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Request::set_has_exchangereportreq() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Request::clear_has_exchangereportreq() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Request::clear_exchangereportreq() {
  if (exchangereportreq_ != NULL) exchangereportreq_->Clear();
  clear_has_exchangereportreq();
}
inline const ::aesm::message::Request_ExchangeReportRequest& Request::_internal_exchangereportreq() const {
  return *exchangereportreq_;
}
inline const ::aesm::message::Request_ExchangeReportRequest& Request::exchangereportreq() const {
  const ::aesm::message::Request_ExchangeReportRequest* p = exchangereportreq_;
  // @@protoc_insertion_point(field_get:aesm.message.Request.exchangeReportReq)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Request_ExchangeReportRequest*>(
      &::aesm::message::_Request_ExchangeReportRequest_default_instance_);
}
inline ::aesm::message::Request_ExchangeReportRequest* Request::release_exchangereportreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.exchangeReportReq)
  clear_has_exchangereportreq();
  ::aesm::message::Request_ExchangeReportRequest* temp = exchangereportreq_;
  exchangereportreq_ = NULL;
  return temp;
}
inline ::aesm::message::Request_ExchangeReportRequest* Request::mutable_exchangereportreq() {
  set_has_exchangereportreq();
  if (exchangereportreq_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Request_ExchangeReportRequest>(GetArenaNoVirtual());
    exchangereportreq_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.exchangeReportReq)
  return exchangereportreq_;
}
inline void Request::set_allocated_exchangereportreq(::aesm::message::Request_ExchangeReportRequest* exchangereportreq) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete exchangereportreq_;
  }
  if (exchangereportreq) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      exchangereportreq = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, exchangereportreq, submessage_arena);
    }
    set_has_exchangereportreq();
  } else {
    clear_has_exchangereportreq();
  }
  exchangereportreq_ = exchangereportreq;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.exchangeReportReq)
}

// optional .aesm.message.Request.CloseSessionRequest closeSessionReq = 8;
inline bool Request::has_closesessionreq() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Request::set_has_closesessionreq() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Request::clear_has_closesessionreq() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Request::clear_closesessionreq() {
  if (closesessionreq_ != NULL) closesessionreq_->Clear();
  clear_has_closesessionreq();
}
inline const ::aesm::message::Request_CloseSessionRequest& Request::_internal_closesessionreq() const {
  return *closesessionreq_;
}
inline const ::aesm::message::Request_CloseSessionRequest& Request::closesessionreq() const {
  const ::aesm::message::Request_CloseSessionRequest* p = closesessionreq_;
  // @@protoc_insertion_point(field_get:aesm.message.Request.closeSessionReq)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Request_CloseSessionRequest*>(
      &::aesm::message::_Request_CloseSessionRequest_default_instance_);
}
inline ::aesm::message::Request_CloseSessionRequest* Request::release_closesessionreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.closeSessionReq)
  clear_has_closesessionreq();
  ::aesm::message::Request_CloseSessionRequest* temp = closesessionreq_;
  closesessionreq_ = NULL;
  return temp;
}
inline ::aesm::message::Request_CloseSessionRequest* Request::mutable_closesessionreq() {
  set_has_closesessionreq();
  if (closesessionreq_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Request_CloseSessionRequest>(GetArenaNoVirtual());
    closesessionreq_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.closeSessionReq)
  return closesessionreq_;
}
inline void Request::set_allocated_closesessionreq(::aesm::message::Request_CloseSessionRequest* closesessionreq) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete closesessionreq_;
  }
  if (closesessionreq) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      closesessionreq = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, closesessionreq, submessage_arena);
    }
    set_has_closesessionreq();
  } else {
    clear_has_closesessionreq();
  }
  closesessionreq_ = closesessionreq;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.closeSessionReq)
}

// optional .aesm.message.Request.GetPsCapRequest getPsCapReq = 9;
inline bool Request::has_getpscapreq() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Request::set_has_getpscapreq() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Request::clear_has_getpscapreq() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Request::clear_getpscapreq() {
  if (getpscapreq_ != NULL) getpscapreq_->Clear();
  clear_has_getpscapreq();
}
inline const ::aesm::message::Request_GetPsCapRequest& Request::_internal_getpscapreq() const {
  return *getpscapreq_;
}
inline const ::aesm::message::Request_GetPsCapRequest& Request::getpscapreq() const {
  const ::aesm::message::Request_GetPsCapRequest* p = getpscapreq_;
  // @@protoc_insertion_point(field_get:aesm.message.Request.getPsCapReq)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Request_GetPsCapRequest*>(
      &::aesm::message::_Request_GetPsCapRequest_default_instance_);
}
inline ::aesm::message::Request_GetPsCapRequest* Request::release_getpscapreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.getPsCapReq)
  clear_has_getpscapreq();
  ::aesm::message::Request_GetPsCapRequest* temp = getpscapreq_;
  getpscapreq_ = NULL;
  return temp;
}
inline ::aesm::message::Request_GetPsCapRequest* Request::mutable_getpscapreq() {
  set_has_getpscapreq();
  if (getpscapreq_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Request_GetPsCapRequest>(GetArenaNoVirtual());
    getpscapreq_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.getPsCapReq)
  return getpscapreq_;
}
inline void Request::set_allocated_getpscapreq(::aesm::message::Request_GetPsCapRequest* getpscapreq) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete getpscapreq_;
  }
  if (getpscapreq) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getpscapreq = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getpscapreq, submessage_arena);
    }
    set_has_getpscapreq();
  } else {
    clear_has_getpscapreq();
  }
  getpscapreq_ = getpscapreq;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.getPsCapReq)
}

// optional .aesm.message.Request.GetWhiteListSizeRequest getWhiteListSizeReq = 10;
inline bool Request::has_getwhitelistsizereq() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Request::set_has_getwhitelistsizereq() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Request::clear_has_getwhitelistsizereq() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Request::clear_getwhitelistsizereq() {
  if (getwhitelistsizereq_ != NULL) getwhitelistsizereq_->Clear();
  clear_has_getwhitelistsizereq();
}
inline const ::aesm::message::Request_GetWhiteListSizeRequest& Request::_internal_getwhitelistsizereq() const {
  return *getwhitelistsizereq_;
}
inline const ::aesm::message::Request_GetWhiteListSizeRequest& Request::getwhitelistsizereq() const {
  const ::aesm::message::Request_GetWhiteListSizeRequest* p = getwhitelistsizereq_;
  // @@protoc_insertion_point(field_get:aesm.message.Request.getWhiteListSizeReq)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Request_GetWhiteListSizeRequest*>(
      &::aesm::message::_Request_GetWhiteListSizeRequest_default_instance_);
}
inline ::aesm::message::Request_GetWhiteListSizeRequest* Request::release_getwhitelistsizereq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.getWhiteListSizeReq)
  clear_has_getwhitelistsizereq();
  ::aesm::message::Request_GetWhiteListSizeRequest* temp = getwhitelistsizereq_;
  getwhitelistsizereq_ = NULL;
  return temp;
}
inline ::aesm::message::Request_GetWhiteListSizeRequest* Request::mutable_getwhitelistsizereq() {
  set_has_getwhitelistsizereq();
  if (getwhitelistsizereq_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Request_GetWhiteListSizeRequest>(GetArenaNoVirtual());
    getwhitelistsizereq_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.getWhiteListSizeReq)
  return getwhitelistsizereq_;
}
inline void Request::set_allocated_getwhitelistsizereq(::aesm::message::Request_GetWhiteListSizeRequest* getwhitelistsizereq) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete getwhitelistsizereq_;
  }
  if (getwhitelistsizereq) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getwhitelistsizereq = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getwhitelistsizereq, submessage_arena);
    }
    set_has_getwhitelistsizereq();
  } else {
    clear_has_getwhitelistsizereq();
  }
  getwhitelistsizereq_ = getwhitelistsizereq;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.getWhiteListSizeReq)
}

// optional .aesm.message.Request.GetWhiteListRequest getWhiteListReq = 11;
inline bool Request::has_getwhitelistreq() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Request::set_has_getwhitelistreq() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Request::clear_has_getwhitelistreq() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Request::clear_getwhitelistreq() {
  if (getwhitelistreq_ != NULL) getwhitelistreq_->Clear();
  clear_has_getwhitelistreq();
}
inline const ::aesm::message::Request_GetWhiteListRequest& Request::_internal_getwhitelistreq() const {
  return *getwhitelistreq_;
}
inline const ::aesm::message::Request_GetWhiteListRequest& Request::getwhitelistreq() const {
  const ::aesm::message::Request_GetWhiteListRequest* p = getwhitelistreq_;
  // @@protoc_insertion_point(field_get:aesm.message.Request.getWhiteListReq)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Request_GetWhiteListRequest*>(
      &::aesm::message::_Request_GetWhiteListRequest_default_instance_);
}
inline ::aesm::message::Request_GetWhiteListRequest* Request::release_getwhitelistreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.getWhiteListReq)
  clear_has_getwhitelistreq();
  ::aesm::message::Request_GetWhiteListRequest* temp = getwhitelistreq_;
  getwhitelistreq_ = NULL;
  return temp;
}
inline ::aesm::message::Request_GetWhiteListRequest* Request::mutable_getwhitelistreq() {
  set_has_getwhitelistreq();
  if (getwhitelistreq_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Request_GetWhiteListRequest>(GetArenaNoVirtual());
    getwhitelistreq_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.getWhiteListReq)
  return getwhitelistreq_;
}
inline void Request::set_allocated_getwhitelistreq(::aesm::message::Request_GetWhiteListRequest* getwhitelistreq) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete getwhitelistreq_;
  }
  if (getwhitelistreq) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getwhitelistreq = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getwhitelistreq, submessage_arena);
    }
    set_has_getwhitelistreq();
  } else {
    clear_has_getwhitelistreq();
  }
  getwhitelistreq_ = getwhitelistreq;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.getWhiteListReq)
}

// optional .aesm.message.Request.SGXGetExtendedEpidGroupIdRequest sgxGetExtendedEpidGroupIdReq = 12;
inline bool Request::has_sgxgetextendedepidgroupidreq() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Request::set_has_sgxgetextendedepidgroupidreq() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Request::clear_has_sgxgetextendedepidgroupidreq() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Request::clear_sgxgetextendedepidgroupidreq() {
  if (sgxgetextendedepidgroupidreq_ != NULL) sgxgetextendedepidgroupidreq_->Clear();
  clear_has_sgxgetextendedepidgroupidreq();
}
inline const ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest& Request::_internal_sgxgetextendedepidgroupidreq() const {
  return *sgxgetextendedepidgroupidreq_;
}
inline const ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest& Request::sgxgetextendedepidgroupidreq() const {
  const ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest* p = sgxgetextendedepidgroupidreq_;
  // @@protoc_insertion_point(field_get:aesm.message.Request.sgxGetExtendedEpidGroupIdReq)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest*>(
      &::aesm::message::_Request_SGXGetExtendedEpidGroupIdRequest_default_instance_);
}
inline ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest* Request::release_sgxgetextendedepidgroupidreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.sgxGetExtendedEpidGroupIdReq)
  clear_has_sgxgetextendedepidgroupidreq();
  ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest* temp = sgxgetextendedepidgroupidreq_;
  sgxgetextendedepidgroupidreq_ = NULL;
  return temp;
}
inline ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest* Request::mutable_sgxgetextendedepidgroupidreq() {
  set_has_sgxgetextendedepidgroupidreq();
  if (sgxgetextendedepidgroupidreq_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest>(GetArenaNoVirtual());
    sgxgetextendedepidgroupidreq_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.sgxGetExtendedEpidGroupIdReq)
  return sgxgetextendedepidgroupidreq_;
}
inline void Request::set_allocated_sgxgetextendedepidgroupidreq(::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest* sgxgetextendedepidgroupidreq) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete sgxgetextendedepidgroupidreq_;
  }
  if (sgxgetextendedepidgroupidreq) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sgxgetextendedepidgroupidreq = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sgxgetextendedepidgroupidreq, submessage_arena);
    }
    set_has_sgxgetextendedepidgroupidreq();
  } else {
    clear_has_sgxgetextendedepidgroupidreq();
  }
  sgxgetextendedepidgroupidreq_ = sgxgetextendedepidgroupidreq;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.sgxGetExtendedEpidGroupIdReq)
}

// optional .aesm.message.Request.SGXSwitchExtendedEpidGroupRequest sgxSwitchExtendedEpidGroupReq = 13;
inline bool Request::has_sgxswitchextendedepidgroupreq() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Request::set_has_sgxswitchextendedepidgroupreq() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Request::clear_has_sgxswitchextendedepidgroupreq() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Request::clear_sgxswitchextendedepidgroupreq() {
  if (sgxswitchextendedepidgroupreq_ != NULL) sgxswitchextendedepidgroupreq_->Clear();
  clear_has_sgxswitchextendedepidgroupreq();
}
inline const ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest& Request::_internal_sgxswitchextendedepidgroupreq() const {
  return *sgxswitchextendedepidgroupreq_;
}
inline const ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest& Request::sgxswitchextendedepidgroupreq() const {
  const ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest* p = sgxswitchextendedepidgroupreq_;
  // @@protoc_insertion_point(field_get:aesm.message.Request.sgxSwitchExtendedEpidGroupReq)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest*>(
      &::aesm::message::_Request_SGXSwitchExtendedEpidGroupRequest_default_instance_);
}
inline ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest* Request::release_sgxswitchextendedepidgroupreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.sgxSwitchExtendedEpidGroupReq)
  clear_has_sgxswitchextendedepidgroupreq();
  ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest* temp = sgxswitchextendedepidgroupreq_;
  sgxswitchextendedepidgroupreq_ = NULL;
  return temp;
}
inline ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest* Request::mutable_sgxswitchextendedepidgroupreq() {
  set_has_sgxswitchextendedepidgroupreq();
  if (sgxswitchextendedepidgroupreq_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest>(GetArenaNoVirtual());
    sgxswitchextendedepidgroupreq_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.sgxSwitchExtendedEpidGroupReq)
  return sgxswitchextendedepidgroupreq_;
}
inline void Request::set_allocated_sgxswitchextendedepidgroupreq(::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest* sgxswitchextendedepidgroupreq) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete sgxswitchextendedepidgroupreq_;
  }
  if (sgxswitchextendedepidgroupreq) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sgxswitchextendedepidgroupreq = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sgxswitchextendedepidgroupreq, submessage_arena);
    }
    set_has_sgxswitchextendedepidgroupreq();
  } else {
    clear_has_sgxswitchextendedepidgroupreq();
  }
  sgxswitchextendedepidgroupreq_ = sgxswitchextendedepidgroupreq;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.sgxSwitchExtendedEpidGroupReq)
}

// optional .aesm.message.Request.SGXRegisterRequest sgxRegisterReq = 14;
inline bool Request::has_sgxregisterreq() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Request::set_has_sgxregisterreq() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Request::clear_has_sgxregisterreq() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Request::clear_sgxregisterreq() {
  if (sgxregisterreq_ != NULL) sgxregisterreq_->Clear();
  clear_has_sgxregisterreq();
}
inline const ::aesm::message::Request_SGXRegisterRequest& Request::_internal_sgxregisterreq() const {
  return *sgxregisterreq_;
}
inline const ::aesm::message::Request_SGXRegisterRequest& Request::sgxregisterreq() const {
  const ::aesm::message::Request_SGXRegisterRequest* p = sgxregisterreq_;
  // @@protoc_insertion_point(field_get:aesm.message.Request.sgxRegisterReq)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Request_SGXRegisterRequest*>(
      &::aesm::message::_Request_SGXRegisterRequest_default_instance_);
}
inline ::aesm::message::Request_SGXRegisterRequest* Request::release_sgxregisterreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.sgxRegisterReq)
  clear_has_sgxregisterreq();
  ::aesm::message::Request_SGXRegisterRequest* temp = sgxregisterreq_;
  sgxregisterreq_ = NULL;
  return temp;
}
inline ::aesm::message::Request_SGXRegisterRequest* Request::mutable_sgxregisterreq() {
  set_has_sgxregisterreq();
  if (sgxregisterreq_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Request_SGXRegisterRequest>(GetArenaNoVirtual());
    sgxregisterreq_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.sgxRegisterReq)
  return sgxregisterreq_;
}
inline void Request::set_allocated_sgxregisterreq(::aesm::message::Request_SGXRegisterRequest* sgxregisterreq) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete sgxregisterreq_;
  }
  if (sgxregisterreq) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sgxregisterreq = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sgxregisterreq, submessage_arena);
    }
    set_has_sgxregisterreq();
  } else {
    clear_has_sgxregisterreq();
  }
  sgxregisterreq_ = sgxregisterreq;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.sgxRegisterReq)
}

// -------------------------------------------------------------------

// Response_InitQuoteResponse

// required uint32 errorCode = 1 [default = 1];
inline bool Response_InitQuoteResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response_InitQuoteResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response_InitQuoteResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response_InitQuoteResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
inline ::google::protobuf::uint32 Response_InitQuoteResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.InitQuoteResponse.errorCode)
  return errorcode_;
}
inline void Response_InitQuoteResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.InitQuoteResponse.errorCode)
}

// optional bytes targetInfo = 2;
inline bool Response_InitQuoteResponse::has_targetinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_InitQuoteResponse::set_has_targetinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_InitQuoteResponse::clear_has_targetinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_InitQuoteResponse::clear_targetinfo() {
  targetinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_targetinfo();
}
inline const ::std::string& Response_InitQuoteResponse::targetinfo() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.InitQuoteResponse.targetInfo)
  return targetinfo_.GetNoArena();
}
inline void Response_InitQuoteResponse::set_targetinfo(const ::std::string& value) {
  set_has_targetinfo();
  targetinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.InitQuoteResponse.targetInfo)
}
#if LANG_CXX11
inline void Response_InitQuoteResponse::set_targetinfo(::std::string&& value) {
  set_has_targetinfo();
  targetinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Response.InitQuoteResponse.targetInfo)
}
#endif
inline void Response_InitQuoteResponse::set_targetinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_targetinfo();
  targetinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.InitQuoteResponse.targetInfo)
}
inline void Response_InitQuoteResponse::set_targetinfo(const void* value, size_t size) {
  set_has_targetinfo();
  targetinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.InitQuoteResponse.targetInfo)
}
inline ::std::string* Response_InitQuoteResponse::mutable_targetinfo() {
  set_has_targetinfo();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.InitQuoteResponse.targetInfo)
  return targetinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_InitQuoteResponse::release_targetinfo() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.InitQuoteResponse.targetInfo)
  if (!has_targetinfo()) {
    return NULL;
  }
  clear_has_targetinfo();
  return targetinfo_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_InitQuoteResponse::set_allocated_targetinfo(::std::string* targetinfo) {
  if (targetinfo != NULL) {
    set_has_targetinfo();
  } else {
    clear_has_targetinfo();
  }
  targetinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), targetinfo);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.InitQuoteResponse.targetInfo)
}

// optional bytes gid = 3;
inline bool Response_InitQuoteResponse::has_gid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_InitQuoteResponse::set_has_gid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_InitQuoteResponse::clear_has_gid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_InitQuoteResponse::clear_gid() {
  gid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gid();
}
inline const ::std::string& Response_InitQuoteResponse::gid() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.InitQuoteResponse.gid)
  return gid_.GetNoArena();
}
inline void Response_InitQuoteResponse::set_gid(const ::std::string& value) {
  set_has_gid();
  gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.InitQuoteResponse.gid)
}
#if LANG_CXX11
inline void Response_InitQuoteResponse::set_gid(::std::string&& value) {
  set_has_gid();
  gid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Response.InitQuoteResponse.gid)
}
#endif
inline void Response_InitQuoteResponse::set_gid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gid();
  gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.InitQuoteResponse.gid)
}
inline void Response_InitQuoteResponse::set_gid(const void* value, size_t size) {
  set_has_gid();
  gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.InitQuoteResponse.gid)
}
inline ::std::string* Response_InitQuoteResponse::mutable_gid() {
  set_has_gid();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.InitQuoteResponse.gid)
  return gid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_InitQuoteResponse::release_gid() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.InitQuoteResponse.gid)
  if (!has_gid()) {
    return NULL;
  }
  clear_has_gid();
  return gid_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_InitQuoteResponse::set_allocated_gid(::std::string* gid) {
  if (gid != NULL) {
    set_has_gid();
  } else {
    clear_has_gid();
  }
  gid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gid);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.InitQuoteResponse.gid)
}

// -------------------------------------------------------------------

// Response_GetQuoteResponse

// required uint32 errorCode = 1 [default = 1];
inline bool Response_GetQuoteResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response_GetQuoteResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response_GetQuoteResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response_GetQuoteResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
inline ::google::protobuf::uint32 Response_GetQuoteResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetQuoteResponse.errorCode)
  return errorcode_;
}
inline void Response_GetQuoteResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetQuoteResponse.errorCode)
}

// optional bytes quote = 2;
inline bool Response_GetQuoteResponse::has_quote() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_GetQuoteResponse::set_has_quote() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_GetQuoteResponse::clear_has_quote() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_GetQuoteResponse::clear_quote() {
  quote_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_quote();
}
inline const ::std::string& Response_GetQuoteResponse::quote() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetQuoteResponse.quote)
  return quote_.GetNoArena();
}
inline void Response_GetQuoteResponse::set_quote(const ::std::string& value) {
  set_has_quote();
  quote_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetQuoteResponse.quote)
}
#if LANG_CXX11
inline void Response_GetQuoteResponse::set_quote(::std::string&& value) {
  set_has_quote();
  quote_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Response.GetQuoteResponse.quote)
}
#endif
inline void Response_GetQuoteResponse::set_quote(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_quote();
  quote_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.GetQuoteResponse.quote)
}
inline void Response_GetQuoteResponse::set_quote(const void* value, size_t size) {
  set_has_quote();
  quote_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.GetQuoteResponse.quote)
}
inline ::std::string* Response_GetQuoteResponse::mutable_quote() {
  set_has_quote();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.GetQuoteResponse.quote)
  return quote_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_GetQuoteResponse::release_quote() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.GetQuoteResponse.quote)
  if (!has_quote()) {
    return NULL;
  }
  clear_has_quote();
  return quote_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_GetQuoteResponse::set_allocated_quote(::std::string* quote) {
  if (quote != NULL) {
    set_has_quote();
  } else {
    clear_has_quote();
  }
  quote_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), quote);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.GetQuoteResponse.quote)
}

// optional bytes qe_report = 3;
inline bool Response_GetQuoteResponse::has_qe_report() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_GetQuoteResponse::set_has_qe_report() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_GetQuoteResponse::clear_has_qe_report() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_GetQuoteResponse::clear_qe_report() {
  qe_report_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_qe_report();
}
inline const ::std::string& Response_GetQuoteResponse::qe_report() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetQuoteResponse.qe_report)
  return qe_report_.GetNoArena();
}
inline void Response_GetQuoteResponse::set_qe_report(const ::std::string& value) {
  set_has_qe_report();
  qe_report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetQuoteResponse.qe_report)
}
#if LANG_CXX11
inline void Response_GetQuoteResponse::set_qe_report(::std::string&& value) {
  set_has_qe_report();
  qe_report_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Response.GetQuoteResponse.qe_report)
}
#endif
inline void Response_GetQuoteResponse::set_qe_report(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_qe_report();
  qe_report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.GetQuoteResponse.qe_report)
}
inline void Response_GetQuoteResponse::set_qe_report(const void* value, size_t size) {
  set_has_qe_report();
  qe_report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.GetQuoteResponse.qe_report)
}
inline ::std::string* Response_GetQuoteResponse::mutable_qe_report() {
  set_has_qe_report();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.GetQuoteResponse.qe_report)
  return qe_report_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_GetQuoteResponse::release_qe_report() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.GetQuoteResponse.qe_report)
  if (!has_qe_report()) {
    return NULL;
  }
  clear_has_qe_report();
  return qe_report_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_GetQuoteResponse::set_allocated_qe_report(::std::string* qe_report) {
  if (qe_report != NULL) {
    set_has_qe_report();
  } else {
    clear_has_qe_report();
  }
  qe_report_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qe_report);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.GetQuoteResponse.qe_report)
}

// -------------------------------------------------------------------

// Response_GetLaunchTokenResponse

// required uint32 errorCode = 1 [default = 1];
inline bool Response_GetLaunchTokenResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_GetLaunchTokenResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_GetLaunchTokenResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_GetLaunchTokenResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
inline ::google::protobuf::uint32 Response_GetLaunchTokenResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetLaunchTokenResponse.errorCode)
  return errorcode_;
}
inline void Response_GetLaunchTokenResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetLaunchTokenResponse.errorCode)
}

// optional bytes token = 2;
inline bool Response_GetLaunchTokenResponse::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_GetLaunchTokenResponse::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_GetLaunchTokenResponse::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_GetLaunchTokenResponse::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& Response_GetLaunchTokenResponse::token() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetLaunchTokenResponse.token)
  return token_.GetNoArena();
}
inline void Response_GetLaunchTokenResponse::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetLaunchTokenResponse.token)
}
#if LANG_CXX11
inline void Response_GetLaunchTokenResponse::set_token(::std::string&& value) {
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Response.GetLaunchTokenResponse.token)
}
#endif
inline void Response_GetLaunchTokenResponse::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.GetLaunchTokenResponse.token)
}
inline void Response_GetLaunchTokenResponse::set_token(const void* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.GetLaunchTokenResponse.token)
}
inline ::std::string* Response_GetLaunchTokenResponse::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.GetLaunchTokenResponse.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_GetLaunchTokenResponse::release_token() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.GetLaunchTokenResponse.token)
  if (!has_token()) {
    return NULL;
  }
  clear_has_token();
  return token_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_GetLaunchTokenResponse::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.GetLaunchTokenResponse.token)
}

// -------------------------------------------------------------------

// Response_ReportAttestationErrorResponse

// required uint32 errorCode = 1 [default = 1];
inline bool Response_ReportAttestationErrorResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_ReportAttestationErrorResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_ReportAttestationErrorResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_ReportAttestationErrorResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
inline ::google::protobuf::uint32 Response_ReportAttestationErrorResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.ReportAttestationErrorResponse.errorCode)
  return errorcode_;
}
inline void Response_ReportAttestationErrorResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.ReportAttestationErrorResponse.errorCode)
}

// optional bytes platform_update_info = 2;
inline bool Response_ReportAttestationErrorResponse::has_platform_update_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_ReportAttestationErrorResponse::set_has_platform_update_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_ReportAttestationErrorResponse::clear_has_platform_update_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_ReportAttestationErrorResponse::clear_platform_update_info() {
  platform_update_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platform_update_info();
}
inline const ::std::string& Response_ReportAttestationErrorResponse::platform_update_info() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.ReportAttestationErrorResponse.platform_update_info)
  return platform_update_info_.GetNoArena();
}
inline void Response_ReportAttestationErrorResponse::set_platform_update_info(const ::std::string& value) {
  set_has_platform_update_info();
  platform_update_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.ReportAttestationErrorResponse.platform_update_info)
}
#if LANG_CXX11
inline void Response_ReportAttestationErrorResponse::set_platform_update_info(::std::string&& value) {
  set_has_platform_update_info();
  platform_update_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Response.ReportAttestationErrorResponse.platform_update_info)
}
#endif
inline void Response_ReportAttestationErrorResponse::set_platform_update_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_platform_update_info();
  platform_update_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.ReportAttestationErrorResponse.platform_update_info)
}
inline void Response_ReportAttestationErrorResponse::set_platform_update_info(const void* value, size_t size) {
  set_has_platform_update_info();
  platform_update_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.ReportAttestationErrorResponse.platform_update_info)
}
inline ::std::string* Response_ReportAttestationErrorResponse::mutable_platform_update_info() {
  set_has_platform_update_info();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.ReportAttestationErrorResponse.platform_update_info)
  return platform_update_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_ReportAttestationErrorResponse::release_platform_update_info() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.ReportAttestationErrorResponse.platform_update_info)
  if (!has_platform_update_info()) {
    return NULL;
  }
  clear_has_platform_update_info();
  return platform_update_info_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_ReportAttestationErrorResponse::set_allocated_platform_update_info(::std::string* platform_update_info) {
  if (platform_update_info != NULL) {
    set_has_platform_update_info();
  } else {
    clear_has_platform_update_info();
  }
  platform_update_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform_update_info);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.ReportAttestationErrorResponse.platform_update_info)
}

// -------------------------------------------------------------------

// Response_CreateSessionResponse

// required uint32 errorCode = 1 [default = 1];
inline bool Response_CreateSessionResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response_CreateSessionResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response_CreateSessionResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response_CreateSessionResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
inline ::google::protobuf::uint32 Response_CreateSessionResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.CreateSessionResponse.errorCode)
  return errorcode_;
}
inline void Response_CreateSessionResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.CreateSessionResponse.errorCode)
}

// optional uint32 session_id = 2;
inline bool Response_CreateSessionResponse::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_CreateSessionResponse::set_has_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_CreateSessionResponse::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_CreateSessionResponse::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 Response_CreateSessionResponse::session_id() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.CreateSessionResponse.session_id)
  return session_id_;
}
inline void Response_CreateSessionResponse::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.CreateSessionResponse.session_id)
}

// optional bytes se_dh_msg1 = 3;
inline bool Response_CreateSessionResponse::has_se_dh_msg1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_CreateSessionResponse::set_has_se_dh_msg1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_CreateSessionResponse::clear_has_se_dh_msg1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_CreateSessionResponse::clear_se_dh_msg1() {
  se_dh_msg1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_se_dh_msg1();
}
inline const ::std::string& Response_CreateSessionResponse::se_dh_msg1() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.CreateSessionResponse.se_dh_msg1)
  return se_dh_msg1_.GetNoArena();
}
inline void Response_CreateSessionResponse::set_se_dh_msg1(const ::std::string& value) {
  set_has_se_dh_msg1();
  se_dh_msg1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.CreateSessionResponse.se_dh_msg1)
}
#if LANG_CXX11
inline void Response_CreateSessionResponse::set_se_dh_msg1(::std::string&& value) {
  set_has_se_dh_msg1();
  se_dh_msg1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Response.CreateSessionResponse.se_dh_msg1)
}
#endif
inline void Response_CreateSessionResponse::set_se_dh_msg1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_se_dh_msg1();
  se_dh_msg1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.CreateSessionResponse.se_dh_msg1)
}
inline void Response_CreateSessionResponse::set_se_dh_msg1(const void* value, size_t size) {
  set_has_se_dh_msg1();
  se_dh_msg1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.CreateSessionResponse.se_dh_msg1)
}
inline ::std::string* Response_CreateSessionResponse::mutable_se_dh_msg1() {
  set_has_se_dh_msg1();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.CreateSessionResponse.se_dh_msg1)
  return se_dh_msg1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_CreateSessionResponse::release_se_dh_msg1() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.CreateSessionResponse.se_dh_msg1)
  if (!has_se_dh_msg1()) {
    return NULL;
  }
  clear_has_se_dh_msg1();
  return se_dh_msg1_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_CreateSessionResponse::set_allocated_se_dh_msg1(::std::string* se_dh_msg1) {
  if (se_dh_msg1 != NULL) {
    set_has_se_dh_msg1();
  } else {
    clear_has_se_dh_msg1();
  }
  se_dh_msg1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), se_dh_msg1);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.CreateSessionResponse.se_dh_msg1)
}

// -------------------------------------------------------------------

// Response_InvokeServiceResponse

// required uint32 errorCode = 1 [default = 1];
inline bool Response_InvokeServiceResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_InvokeServiceResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_InvokeServiceResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_InvokeServiceResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
inline ::google::protobuf::uint32 Response_InvokeServiceResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.InvokeServiceResponse.errorCode)
  return errorcode_;
}
inline void Response_InvokeServiceResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.InvokeServiceResponse.errorCode)
}

// optional bytes pse_message = 2;
inline bool Response_InvokeServiceResponse::has_pse_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_InvokeServiceResponse::set_has_pse_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_InvokeServiceResponse::clear_has_pse_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_InvokeServiceResponse::clear_pse_message() {
  pse_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pse_message();
}
inline const ::std::string& Response_InvokeServiceResponse::pse_message() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.InvokeServiceResponse.pse_message)
  return pse_message_.GetNoArena();
}
inline void Response_InvokeServiceResponse::set_pse_message(const ::std::string& value) {
  set_has_pse_message();
  pse_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.InvokeServiceResponse.pse_message)
}
#if LANG_CXX11
inline void Response_InvokeServiceResponse::set_pse_message(::std::string&& value) {
  set_has_pse_message();
  pse_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Response.InvokeServiceResponse.pse_message)
}
#endif
inline void Response_InvokeServiceResponse::set_pse_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pse_message();
  pse_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.InvokeServiceResponse.pse_message)
}
inline void Response_InvokeServiceResponse::set_pse_message(const void* value, size_t size) {
  set_has_pse_message();
  pse_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.InvokeServiceResponse.pse_message)
}
inline ::std::string* Response_InvokeServiceResponse::mutable_pse_message() {
  set_has_pse_message();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.InvokeServiceResponse.pse_message)
  return pse_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_InvokeServiceResponse::release_pse_message() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.InvokeServiceResponse.pse_message)
  if (!has_pse_message()) {
    return NULL;
  }
  clear_has_pse_message();
  return pse_message_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_InvokeServiceResponse::set_allocated_pse_message(::std::string* pse_message) {
  if (pse_message != NULL) {
    set_has_pse_message();
  } else {
    clear_has_pse_message();
  }
  pse_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pse_message);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.InvokeServiceResponse.pse_message)
}

// -------------------------------------------------------------------

// Response_ExchangeReportResponse

// required uint32 errorCode = 1 [default = 1];
inline bool Response_ExchangeReportResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_ExchangeReportResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_ExchangeReportResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_ExchangeReportResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
inline ::google::protobuf::uint32 Response_ExchangeReportResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.ExchangeReportResponse.errorCode)
  return errorcode_;
}
inline void Response_ExchangeReportResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.ExchangeReportResponse.errorCode)
}

// optional bytes se_dh_msg3 = 2;
inline bool Response_ExchangeReportResponse::has_se_dh_msg3() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_ExchangeReportResponse::set_has_se_dh_msg3() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_ExchangeReportResponse::clear_has_se_dh_msg3() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_ExchangeReportResponse::clear_se_dh_msg3() {
  se_dh_msg3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_se_dh_msg3();
}
inline const ::std::string& Response_ExchangeReportResponse::se_dh_msg3() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.ExchangeReportResponse.se_dh_msg3)
  return se_dh_msg3_.GetNoArena();
}
inline void Response_ExchangeReportResponse::set_se_dh_msg3(const ::std::string& value) {
  set_has_se_dh_msg3();
  se_dh_msg3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.ExchangeReportResponse.se_dh_msg3)
}
#if LANG_CXX11
inline void Response_ExchangeReportResponse::set_se_dh_msg3(::std::string&& value) {
  set_has_se_dh_msg3();
  se_dh_msg3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Response.ExchangeReportResponse.se_dh_msg3)
}
#endif
inline void Response_ExchangeReportResponse::set_se_dh_msg3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_se_dh_msg3();
  se_dh_msg3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.ExchangeReportResponse.se_dh_msg3)
}
inline void Response_ExchangeReportResponse::set_se_dh_msg3(const void* value, size_t size) {
  set_has_se_dh_msg3();
  se_dh_msg3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.ExchangeReportResponse.se_dh_msg3)
}
inline ::std::string* Response_ExchangeReportResponse::mutable_se_dh_msg3() {
  set_has_se_dh_msg3();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.ExchangeReportResponse.se_dh_msg3)
  return se_dh_msg3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_ExchangeReportResponse::release_se_dh_msg3() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.ExchangeReportResponse.se_dh_msg3)
  if (!has_se_dh_msg3()) {
    return NULL;
  }
  clear_has_se_dh_msg3();
  return se_dh_msg3_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_ExchangeReportResponse::set_allocated_se_dh_msg3(::std::string* se_dh_msg3) {
  if (se_dh_msg3 != NULL) {
    set_has_se_dh_msg3();
  } else {
    clear_has_se_dh_msg3();
  }
  se_dh_msg3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), se_dh_msg3);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.ExchangeReportResponse.se_dh_msg3)
}

// -------------------------------------------------------------------

// Response_CloseSessionResponse

// required uint32 errorCode = 1 [default = 1];
inline bool Response_CloseSessionResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_CloseSessionResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_CloseSessionResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_CloseSessionResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
inline ::google::protobuf::uint32 Response_CloseSessionResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.CloseSessionResponse.errorCode)
  return errorcode_;
}
inline void Response_CloseSessionResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.CloseSessionResponse.errorCode)
}

// -------------------------------------------------------------------

// Response_GetPsCapResponse

// required uint32 errorCode = 1 [default = 1];
inline bool Response_GetPsCapResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_GetPsCapResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_GetPsCapResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_GetPsCapResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
inline ::google::protobuf::uint32 Response_GetPsCapResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetPsCapResponse.errorCode)
  return errorcode_;
}
inline void Response_GetPsCapResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetPsCapResponse.errorCode)
}

// optional uint64 ps_cap = 2;
inline bool Response_GetPsCapResponse::has_ps_cap() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_GetPsCapResponse::set_has_ps_cap() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_GetPsCapResponse::clear_has_ps_cap() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_GetPsCapResponse::clear_ps_cap() {
  ps_cap_ = GOOGLE_ULONGLONG(0);
  clear_has_ps_cap();
}
inline ::google::protobuf::uint64 Response_GetPsCapResponse::ps_cap() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetPsCapResponse.ps_cap)
  return ps_cap_;
}
inline void Response_GetPsCapResponse::set_ps_cap(::google::protobuf::uint64 value) {
  set_has_ps_cap();
  ps_cap_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetPsCapResponse.ps_cap)
}

// -------------------------------------------------------------------

// Response_GetWhiteListSizeResponse

// required uint32 errorCode = 1 [default = 1];
inline bool Response_GetWhiteListSizeResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_GetWhiteListSizeResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_GetWhiteListSizeResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_GetWhiteListSizeResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
inline ::google::protobuf::uint32 Response_GetWhiteListSizeResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetWhiteListSizeResponse.errorCode)
  return errorcode_;
}
inline void Response_GetWhiteListSizeResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetWhiteListSizeResponse.errorCode)
}

// optional uint32 white_list_size = 2;
inline bool Response_GetWhiteListSizeResponse::has_white_list_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_GetWhiteListSizeResponse::set_has_white_list_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_GetWhiteListSizeResponse::clear_has_white_list_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_GetWhiteListSizeResponse::clear_white_list_size() {
  white_list_size_ = 0u;
  clear_has_white_list_size();
}
inline ::google::protobuf::uint32 Response_GetWhiteListSizeResponse::white_list_size() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetWhiteListSizeResponse.white_list_size)
  return white_list_size_;
}
inline void Response_GetWhiteListSizeResponse::set_white_list_size(::google::protobuf::uint32 value) {
  set_has_white_list_size();
  white_list_size_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetWhiteListSizeResponse.white_list_size)
}

// -------------------------------------------------------------------

// Response_GetWhiteListResponse

// required uint32 errorCode = 1 [default = 1];
inline bool Response_GetWhiteListResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_GetWhiteListResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_GetWhiteListResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_GetWhiteListResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
inline ::google::protobuf::uint32 Response_GetWhiteListResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetWhiteListResponse.errorCode)
  return errorcode_;
}
inline void Response_GetWhiteListResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetWhiteListResponse.errorCode)
}

// optional bytes white_list = 2;
inline bool Response_GetWhiteListResponse::has_white_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_GetWhiteListResponse::set_has_white_list() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_GetWhiteListResponse::clear_has_white_list() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_GetWhiteListResponse::clear_white_list() {
  white_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_white_list();
}
inline const ::std::string& Response_GetWhiteListResponse::white_list() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetWhiteListResponse.white_list)
  return white_list_.GetNoArena();
}
inline void Response_GetWhiteListResponse::set_white_list(const ::std::string& value) {
  set_has_white_list();
  white_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetWhiteListResponse.white_list)
}
#if LANG_CXX11
inline void Response_GetWhiteListResponse::set_white_list(::std::string&& value) {
  set_has_white_list();
  white_list_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:aesm.message.Response.GetWhiteListResponse.white_list)
}
#endif
inline void Response_GetWhiteListResponse::set_white_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_white_list();
  white_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.GetWhiteListResponse.white_list)
}
inline void Response_GetWhiteListResponse::set_white_list(const void* value, size_t size) {
  set_has_white_list();
  white_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.GetWhiteListResponse.white_list)
}
inline ::std::string* Response_GetWhiteListResponse::mutable_white_list() {
  set_has_white_list();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.GetWhiteListResponse.white_list)
  return white_list_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_GetWhiteListResponse::release_white_list() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.GetWhiteListResponse.white_list)
  if (!has_white_list()) {
    return NULL;
  }
  clear_has_white_list();
  return white_list_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_GetWhiteListResponse::set_allocated_white_list(::std::string* white_list) {
  if (white_list != NULL) {
    set_has_white_list();
  } else {
    clear_has_white_list();
  }
  white_list_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), white_list);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.GetWhiteListResponse.white_list)
}

// -------------------------------------------------------------------

// Response_SGXGetExtendedEpidGroupIdResponse

// required uint32 errorCode = 1 [default = 1];
inline bool Response_SGXGetExtendedEpidGroupIdResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_SGXGetExtendedEpidGroupIdResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_SGXGetExtendedEpidGroupIdResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_SGXGetExtendedEpidGroupIdResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
inline ::google::protobuf::uint32 Response_SGXGetExtendedEpidGroupIdResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse.errorCode)
  return errorcode_;
}
inline void Response_SGXGetExtendedEpidGroupIdResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse.errorCode)
}

// optional uint32 x_group_id = 2;
inline bool Response_SGXGetExtendedEpidGroupIdResponse::has_x_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_SGXGetExtendedEpidGroupIdResponse::set_has_x_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_SGXGetExtendedEpidGroupIdResponse::clear_has_x_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_SGXGetExtendedEpidGroupIdResponse::clear_x_group_id() {
  x_group_id_ = 0u;
  clear_has_x_group_id();
}
inline ::google::protobuf::uint32 Response_SGXGetExtendedEpidGroupIdResponse::x_group_id() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse.x_group_id)
  return x_group_id_;
}
inline void Response_SGXGetExtendedEpidGroupIdResponse::set_x_group_id(::google::protobuf::uint32 value) {
  set_has_x_group_id();
  x_group_id_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse.x_group_id)
}

// -------------------------------------------------------------------

// Response_SGXSwitchExtendedEpidGroupResponse

// required uint32 errorCode = 1 [default = 1];
inline bool Response_SGXSwitchExtendedEpidGroupResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_SGXSwitchExtendedEpidGroupResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_SGXSwitchExtendedEpidGroupResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_SGXSwitchExtendedEpidGroupResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
inline ::google::protobuf::uint32 Response_SGXSwitchExtendedEpidGroupResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse.errorCode)
  return errorcode_;
}
inline void Response_SGXSwitchExtendedEpidGroupResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse.errorCode)
}

// -------------------------------------------------------------------

// Response_SGXRegisterResponse

// required uint32 errorCode = 1 [default = 1];
inline bool Response_SGXRegisterResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_SGXRegisterResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_SGXRegisterResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_SGXRegisterResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
inline ::google::protobuf::uint32 Response_SGXRegisterResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.SGXRegisterResponse.errorCode)
  return errorcode_;
}
inline void Response_SGXRegisterResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.SGXRegisterResponse.errorCode)
}

// -------------------------------------------------------------------

// Response

// optional .aesm.message.Response.InitQuoteResponse initQuoteRes = 1;
inline bool Response::has_initquoteres() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_initquoteres() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_initquoteres() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_initquoteres() {
  if (initquoteres_ != NULL) initquoteres_->Clear();
  clear_has_initquoteres();
}
inline const ::aesm::message::Response_InitQuoteResponse& Response::_internal_initquoteres() const {
  return *initquoteres_;
}
inline const ::aesm::message::Response_InitQuoteResponse& Response::initquoteres() const {
  const ::aesm::message::Response_InitQuoteResponse* p = initquoteres_;
  // @@protoc_insertion_point(field_get:aesm.message.Response.initQuoteRes)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Response_InitQuoteResponse*>(
      &::aesm::message::_Response_InitQuoteResponse_default_instance_);
}
inline ::aesm::message::Response_InitQuoteResponse* Response::release_initquoteres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.initQuoteRes)
  clear_has_initquoteres();
  ::aesm::message::Response_InitQuoteResponse* temp = initquoteres_;
  initquoteres_ = NULL;
  return temp;
}
inline ::aesm::message::Response_InitQuoteResponse* Response::mutable_initquoteres() {
  set_has_initquoteres();
  if (initquoteres_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Response_InitQuoteResponse>(GetArenaNoVirtual());
    initquoteres_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.initQuoteRes)
  return initquoteres_;
}
inline void Response::set_allocated_initquoteres(::aesm::message::Response_InitQuoteResponse* initquoteres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete initquoteres_;
  }
  if (initquoteres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      initquoteres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, initquoteres, submessage_arena);
    }
    set_has_initquoteres();
  } else {
    clear_has_initquoteres();
  }
  initquoteres_ = initquoteres;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.initQuoteRes)
}

// optional .aesm.message.Response.GetQuoteResponse getQuoteRes = 2;
inline bool Response::has_getquoteres() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_getquoteres() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_getquoteres() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_getquoteres() {
  if (getquoteres_ != NULL) getquoteres_->Clear();
  clear_has_getquoteres();
}
inline const ::aesm::message::Response_GetQuoteResponse& Response::_internal_getquoteres() const {
  return *getquoteres_;
}
inline const ::aesm::message::Response_GetQuoteResponse& Response::getquoteres() const {
  const ::aesm::message::Response_GetQuoteResponse* p = getquoteres_;
  // @@protoc_insertion_point(field_get:aesm.message.Response.getQuoteRes)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Response_GetQuoteResponse*>(
      &::aesm::message::_Response_GetQuoteResponse_default_instance_);
}
inline ::aesm::message::Response_GetQuoteResponse* Response::release_getquoteres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.getQuoteRes)
  clear_has_getquoteres();
  ::aesm::message::Response_GetQuoteResponse* temp = getquoteres_;
  getquoteres_ = NULL;
  return temp;
}
inline ::aesm::message::Response_GetQuoteResponse* Response::mutable_getquoteres() {
  set_has_getquoteres();
  if (getquoteres_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Response_GetQuoteResponse>(GetArenaNoVirtual());
    getquoteres_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.getQuoteRes)
  return getquoteres_;
}
inline void Response::set_allocated_getquoteres(::aesm::message::Response_GetQuoteResponse* getquoteres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete getquoteres_;
  }
  if (getquoteres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getquoteres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getquoteres, submessage_arena);
    }
    set_has_getquoteres();
  } else {
    clear_has_getquoteres();
  }
  getquoteres_ = getquoteres;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.getQuoteRes)
}

// optional .aesm.message.Response.GetLaunchTokenResponse getLicTokenRes = 3;
inline bool Response::has_getlictokenres() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response::set_has_getlictokenres() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response::clear_has_getlictokenres() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response::clear_getlictokenres() {
  if (getlictokenres_ != NULL) getlictokenres_->Clear();
  clear_has_getlictokenres();
}
inline const ::aesm::message::Response_GetLaunchTokenResponse& Response::_internal_getlictokenres() const {
  return *getlictokenres_;
}
inline const ::aesm::message::Response_GetLaunchTokenResponse& Response::getlictokenres() const {
  const ::aesm::message::Response_GetLaunchTokenResponse* p = getlictokenres_;
  // @@protoc_insertion_point(field_get:aesm.message.Response.getLicTokenRes)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Response_GetLaunchTokenResponse*>(
      &::aesm::message::_Response_GetLaunchTokenResponse_default_instance_);
}
inline ::aesm::message::Response_GetLaunchTokenResponse* Response::release_getlictokenres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.getLicTokenRes)
  clear_has_getlictokenres();
  ::aesm::message::Response_GetLaunchTokenResponse* temp = getlictokenres_;
  getlictokenres_ = NULL;
  return temp;
}
inline ::aesm::message::Response_GetLaunchTokenResponse* Response::mutable_getlictokenres() {
  set_has_getlictokenres();
  if (getlictokenres_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Response_GetLaunchTokenResponse>(GetArenaNoVirtual());
    getlictokenres_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.getLicTokenRes)
  return getlictokenres_;
}
inline void Response::set_allocated_getlictokenres(::aesm::message::Response_GetLaunchTokenResponse* getlictokenres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete getlictokenres_;
  }
  if (getlictokenres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getlictokenres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getlictokenres, submessage_arena);
    }
    set_has_getlictokenres();
  } else {
    clear_has_getlictokenres();
  }
  getlictokenres_ = getlictokenres;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.getLicTokenRes)
}

// optional .aesm.message.Response.ReportAttestationErrorResponse reportErrRes = 4;
inline bool Response::has_reporterrres() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Response::set_has_reporterrres() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Response::clear_has_reporterrres() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Response::clear_reporterrres() {
  if (reporterrres_ != NULL) reporterrres_->Clear();
  clear_has_reporterrres();
}
inline const ::aesm::message::Response_ReportAttestationErrorResponse& Response::_internal_reporterrres() const {
  return *reporterrres_;
}
inline const ::aesm::message::Response_ReportAttestationErrorResponse& Response::reporterrres() const {
  const ::aesm::message::Response_ReportAttestationErrorResponse* p = reporterrres_;
  // @@protoc_insertion_point(field_get:aesm.message.Response.reportErrRes)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Response_ReportAttestationErrorResponse*>(
      &::aesm::message::_Response_ReportAttestationErrorResponse_default_instance_);
}
inline ::aesm::message::Response_ReportAttestationErrorResponse* Response::release_reporterrres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.reportErrRes)
  clear_has_reporterrres();
  ::aesm::message::Response_ReportAttestationErrorResponse* temp = reporterrres_;
  reporterrres_ = NULL;
  return temp;
}
inline ::aesm::message::Response_ReportAttestationErrorResponse* Response::mutable_reporterrres() {
  set_has_reporterrres();
  if (reporterrres_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Response_ReportAttestationErrorResponse>(GetArenaNoVirtual());
    reporterrres_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.reportErrRes)
  return reporterrres_;
}
inline void Response::set_allocated_reporterrres(::aesm::message::Response_ReportAttestationErrorResponse* reporterrres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reporterrres_;
  }
  if (reporterrres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reporterrres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reporterrres, submessage_arena);
    }
    set_has_reporterrres();
  } else {
    clear_has_reporterrres();
  }
  reporterrres_ = reporterrres;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.reportErrRes)
}

// optional .aesm.message.Response.CreateSessionResponse createSessionRes = 5;
inline bool Response::has_createsessionres() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Response::set_has_createsessionres() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Response::clear_has_createsessionres() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Response::clear_createsessionres() {
  if (createsessionres_ != NULL) createsessionres_->Clear();
  clear_has_createsessionres();
}
inline const ::aesm::message::Response_CreateSessionResponse& Response::_internal_createsessionres() const {
  return *createsessionres_;
}
inline const ::aesm::message::Response_CreateSessionResponse& Response::createsessionres() const {
  const ::aesm::message::Response_CreateSessionResponse* p = createsessionres_;
  // @@protoc_insertion_point(field_get:aesm.message.Response.createSessionRes)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Response_CreateSessionResponse*>(
      &::aesm::message::_Response_CreateSessionResponse_default_instance_);
}
inline ::aesm::message::Response_CreateSessionResponse* Response::release_createsessionres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.createSessionRes)
  clear_has_createsessionres();
  ::aesm::message::Response_CreateSessionResponse* temp = createsessionres_;
  createsessionres_ = NULL;
  return temp;
}
inline ::aesm::message::Response_CreateSessionResponse* Response::mutable_createsessionres() {
  set_has_createsessionres();
  if (createsessionres_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Response_CreateSessionResponse>(GetArenaNoVirtual());
    createsessionres_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.createSessionRes)
  return createsessionres_;
}
inline void Response::set_allocated_createsessionres(::aesm::message::Response_CreateSessionResponse* createsessionres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete createsessionres_;
  }
  if (createsessionres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      createsessionres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, createsessionres, submessage_arena);
    }
    set_has_createsessionres();
  } else {
    clear_has_createsessionres();
  }
  createsessionres_ = createsessionres;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.createSessionRes)
}

// optional .aesm.message.Response.InvokeServiceResponse invokeServiceRes = 6;
inline bool Response::has_invokeserviceres() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Response::set_has_invokeserviceres() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Response::clear_has_invokeserviceres() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Response::clear_invokeserviceres() {
  if (invokeserviceres_ != NULL) invokeserviceres_->Clear();
  clear_has_invokeserviceres();
}
inline const ::aesm::message::Response_InvokeServiceResponse& Response::_internal_invokeserviceres() const {
  return *invokeserviceres_;
}
inline const ::aesm::message::Response_InvokeServiceResponse& Response::invokeserviceres() const {
  const ::aesm::message::Response_InvokeServiceResponse* p = invokeserviceres_;
  // @@protoc_insertion_point(field_get:aesm.message.Response.invokeServiceRes)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Response_InvokeServiceResponse*>(
      &::aesm::message::_Response_InvokeServiceResponse_default_instance_);
}
inline ::aesm::message::Response_InvokeServiceResponse* Response::release_invokeserviceres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.invokeServiceRes)
  clear_has_invokeserviceres();
  ::aesm::message::Response_InvokeServiceResponse* temp = invokeserviceres_;
  invokeserviceres_ = NULL;
  return temp;
}
inline ::aesm::message::Response_InvokeServiceResponse* Response::mutable_invokeserviceres() {
  set_has_invokeserviceres();
  if (invokeserviceres_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Response_InvokeServiceResponse>(GetArenaNoVirtual());
    invokeserviceres_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.invokeServiceRes)
  return invokeserviceres_;
}
inline void Response::set_allocated_invokeserviceres(::aesm::message::Response_InvokeServiceResponse* invokeserviceres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete invokeserviceres_;
  }
  if (invokeserviceres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      invokeserviceres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, invokeserviceres, submessage_arena);
    }
    set_has_invokeserviceres();
  } else {
    clear_has_invokeserviceres();
  }
  invokeserviceres_ = invokeserviceres;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.invokeServiceRes)
}

// optional .aesm.message.Response.ExchangeReportResponse exchangeReportRes = 7;
inline bool Response::has_exchangereportres() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Response::set_has_exchangereportres() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Response::clear_has_exchangereportres() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Response::clear_exchangereportres() {
  if (exchangereportres_ != NULL) exchangereportres_->Clear();
  clear_has_exchangereportres();
}
inline const ::aesm::message::Response_ExchangeReportResponse& Response::_internal_exchangereportres() const {
  return *exchangereportres_;
}
inline const ::aesm::message::Response_ExchangeReportResponse& Response::exchangereportres() const {
  const ::aesm::message::Response_ExchangeReportResponse* p = exchangereportres_;
  // @@protoc_insertion_point(field_get:aesm.message.Response.exchangeReportRes)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Response_ExchangeReportResponse*>(
      &::aesm::message::_Response_ExchangeReportResponse_default_instance_);
}
inline ::aesm::message::Response_ExchangeReportResponse* Response::release_exchangereportres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.exchangeReportRes)
  clear_has_exchangereportres();
  ::aesm::message::Response_ExchangeReportResponse* temp = exchangereportres_;
  exchangereportres_ = NULL;
  return temp;
}
inline ::aesm::message::Response_ExchangeReportResponse* Response::mutable_exchangereportres() {
  set_has_exchangereportres();
  if (exchangereportres_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Response_ExchangeReportResponse>(GetArenaNoVirtual());
    exchangereportres_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.exchangeReportRes)
  return exchangereportres_;
}
inline void Response::set_allocated_exchangereportres(::aesm::message::Response_ExchangeReportResponse* exchangereportres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete exchangereportres_;
  }
  if (exchangereportres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      exchangereportres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, exchangereportres, submessage_arena);
    }
    set_has_exchangereportres();
  } else {
    clear_has_exchangereportres();
  }
  exchangereportres_ = exchangereportres;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.exchangeReportRes)
}

// optional .aesm.message.Response.CloseSessionResponse closeSessionRes = 8;
inline bool Response::has_closesessionres() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Response::set_has_closesessionres() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Response::clear_has_closesessionres() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Response::clear_closesessionres() {
  if (closesessionres_ != NULL) closesessionres_->Clear();
  clear_has_closesessionres();
}
inline const ::aesm::message::Response_CloseSessionResponse& Response::_internal_closesessionres() const {
  return *closesessionres_;
}
inline const ::aesm::message::Response_CloseSessionResponse& Response::closesessionres() const {
  const ::aesm::message::Response_CloseSessionResponse* p = closesessionres_;
  // @@protoc_insertion_point(field_get:aesm.message.Response.closeSessionRes)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Response_CloseSessionResponse*>(
      &::aesm::message::_Response_CloseSessionResponse_default_instance_);
}
inline ::aesm::message::Response_CloseSessionResponse* Response::release_closesessionres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.closeSessionRes)
  clear_has_closesessionres();
  ::aesm::message::Response_CloseSessionResponse* temp = closesessionres_;
  closesessionres_ = NULL;
  return temp;
}
inline ::aesm::message::Response_CloseSessionResponse* Response::mutable_closesessionres() {
  set_has_closesessionres();
  if (closesessionres_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Response_CloseSessionResponse>(GetArenaNoVirtual());
    closesessionres_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.closeSessionRes)
  return closesessionres_;
}
inline void Response::set_allocated_closesessionres(::aesm::message::Response_CloseSessionResponse* closesessionres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete closesessionres_;
  }
  if (closesessionres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      closesessionres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, closesessionres, submessage_arena);
    }
    set_has_closesessionres();
  } else {
    clear_has_closesessionres();
  }
  closesessionres_ = closesessionres;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.closeSessionRes)
}

// optional .aesm.message.Response.GetPsCapResponse getPsCapRes = 9;
inline bool Response::has_getpscapres() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Response::set_has_getpscapres() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Response::clear_has_getpscapres() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Response::clear_getpscapres() {
  if (getpscapres_ != NULL) getpscapres_->Clear();
  clear_has_getpscapres();
}
inline const ::aesm::message::Response_GetPsCapResponse& Response::_internal_getpscapres() const {
  return *getpscapres_;
}
inline const ::aesm::message::Response_GetPsCapResponse& Response::getpscapres() const {
  const ::aesm::message::Response_GetPsCapResponse* p = getpscapres_;
  // @@protoc_insertion_point(field_get:aesm.message.Response.getPsCapRes)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Response_GetPsCapResponse*>(
      &::aesm::message::_Response_GetPsCapResponse_default_instance_);
}
inline ::aesm::message::Response_GetPsCapResponse* Response::release_getpscapres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.getPsCapRes)
  clear_has_getpscapres();
  ::aesm::message::Response_GetPsCapResponse* temp = getpscapres_;
  getpscapres_ = NULL;
  return temp;
}
inline ::aesm::message::Response_GetPsCapResponse* Response::mutable_getpscapres() {
  set_has_getpscapres();
  if (getpscapres_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Response_GetPsCapResponse>(GetArenaNoVirtual());
    getpscapres_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.getPsCapRes)
  return getpscapres_;
}
inline void Response::set_allocated_getpscapres(::aesm::message::Response_GetPsCapResponse* getpscapres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete getpscapres_;
  }
  if (getpscapres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getpscapres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getpscapres, submessage_arena);
    }
    set_has_getpscapres();
  } else {
    clear_has_getpscapres();
  }
  getpscapres_ = getpscapres;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.getPsCapRes)
}

// optional .aesm.message.Response.GetWhiteListSizeResponse getWhiteListSizeRes = 10;
inline bool Response::has_getwhitelistsizeres() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Response::set_has_getwhitelistsizeres() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Response::clear_has_getwhitelistsizeres() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Response::clear_getwhitelistsizeres() {
  if (getwhitelistsizeres_ != NULL) getwhitelistsizeres_->Clear();
  clear_has_getwhitelistsizeres();
}
inline const ::aesm::message::Response_GetWhiteListSizeResponse& Response::_internal_getwhitelistsizeres() const {
  return *getwhitelistsizeres_;
}
inline const ::aesm::message::Response_GetWhiteListSizeResponse& Response::getwhitelistsizeres() const {
  const ::aesm::message::Response_GetWhiteListSizeResponse* p = getwhitelistsizeres_;
  // @@protoc_insertion_point(field_get:aesm.message.Response.getWhiteListSizeRes)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Response_GetWhiteListSizeResponse*>(
      &::aesm::message::_Response_GetWhiteListSizeResponse_default_instance_);
}
inline ::aesm::message::Response_GetWhiteListSizeResponse* Response::release_getwhitelistsizeres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.getWhiteListSizeRes)
  clear_has_getwhitelistsizeres();
  ::aesm::message::Response_GetWhiteListSizeResponse* temp = getwhitelistsizeres_;
  getwhitelistsizeres_ = NULL;
  return temp;
}
inline ::aesm::message::Response_GetWhiteListSizeResponse* Response::mutable_getwhitelistsizeres() {
  set_has_getwhitelistsizeres();
  if (getwhitelistsizeres_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Response_GetWhiteListSizeResponse>(GetArenaNoVirtual());
    getwhitelistsizeres_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.getWhiteListSizeRes)
  return getwhitelistsizeres_;
}
inline void Response::set_allocated_getwhitelistsizeres(::aesm::message::Response_GetWhiteListSizeResponse* getwhitelistsizeres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete getwhitelistsizeres_;
  }
  if (getwhitelistsizeres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getwhitelistsizeres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getwhitelistsizeres, submessage_arena);
    }
    set_has_getwhitelistsizeres();
  } else {
    clear_has_getwhitelistsizeres();
  }
  getwhitelistsizeres_ = getwhitelistsizeres;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.getWhiteListSizeRes)
}

// optional .aesm.message.Response.GetWhiteListResponse getWhiteListRes = 11;
inline bool Response::has_getwhitelistres() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Response::set_has_getwhitelistres() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Response::clear_has_getwhitelistres() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Response::clear_getwhitelistres() {
  if (getwhitelistres_ != NULL) getwhitelistres_->Clear();
  clear_has_getwhitelistres();
}
inline const ::aesm::message::Response_GetWhiteListResponse& Response::_internal_getwhitelistres() const {
  return *getwhitelistres_;
}
inline const ::aesm::message::Response_GetWhiteListResponse& Response::getwhitelistres() const {
  const ::aesm::message::Response_GetWhiteListResponse* p = getwhitelistres_;
  // @@protoc_insertion_point(field_get:aesm.message.Response.getWhiteListRes)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Response_GetWhiteListResponse*>(
      &::aesm::message::_Response_GetWhiteListResponse_default_instance_);
}
inline ::aesm::message::Response_GetWhiteListResponse* Response::release_getwhitelistres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.getWhiteListRes)
  clear_has_getwhitelistres();
  ::aesm::message::Response_GetWhiteListResponse* temp = getwhitelistres_;
  getwhitelistres_ = NULL;
  return temp;
}
inline ::aesm::message::Response_GetWhiteListResponse* Response::mutable_getwhitelistres() {
  set_has_getwhitelistres();
  if (getwhitelistres_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Response_GetWhiteListResponse>(GetArenaNoVirtual());
    getwhitelistres_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.getWhiteListRes)
  return getwhitelistres_;
}
inline void Response::set_allocated_getwhitelistres(::aesm::message::Response_GetWhiteListResponse* getwhitelistres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete getwhitelistres_;
  }
  if (getwhitelistres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getwhitelistres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getwhitelistres, submessage_arena);
    }
    set_has_getwhitelistres();
  } else {
    clear_has_getwhitelistres();
  }
  getwhitelistres_ = getwhitelistres;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.getWhiteListRes)
}

// optional .aesm.message.Response.SGXGetExtendedEpidGroupIdResponse sgxGetExtendedEpidGroupIdRes = 12;
inline bool Response::has_sgxgetextendedepidgroupidres() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Response::set_has_sgxgetextendedepidgroupidres() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Response::clear_has_sgxgetextendedepidgroupidres() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Response::clear_sgxgetextendedepidgroupidres() {
  if (sgxgetextendedepidgroupidres_ != NULL) sgxgetextendedepidgroupidres_->Clear();
  clear_has_sgxgetextendedepidgroupidres();
}
inline const ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse& Response::_internal_sgxgetextendedepidgroupidres() const {
  return *sgxgetextendedepidgroupidres_;
}
inline const ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse& Response::sgxgetextendedepidgroupidres() const {
  const ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse* p = sgxgetextendedepidgroupidres_;
  // @@protoc_insertion_point(field_get:aesm.message.Response.sgxGetExtendedEpidGroupIdRes)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse*>(
      &::aesm::message::_Response_SGXGetExtendedEpidGroupIdResponse_default_instance_);
}
inline ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse* Response::release_sgxgetextendedepidgroupidres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.sgxGetExtendedEpidGroupIdRes)
  clear_has_sgxgetextendedepidgroupidres();
  ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse* temp = sgxgetextendedepidgroupidres_;
  sgxgetextendedepidgroupidres_ = NULL;
  return temp;
}
inline ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse* Response::mutable_sgxgetextendedepidgroupidres() {
  set_has_sgxgetextendedepidgroupidres();
  if (sgxgetextendedepidgroupidres_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse>(GetArenaNoVirtual());
    sgxgetextendedepidgroupidres_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.sgxGetExtendedEpidGroupIdRes)
  return sgxgetextendedepidgroupidres_;
}
inline void Response::set_allocated_sgxgetextendedepidgroupidres(::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse* sgxgetextendedepidgroupidres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete sgxgetextendedepidgroupidres_;
  }
  if (sgxgetextendedepidgroupidres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sgxgetextendedepidgroupidres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sgxgetextendedepidgroupidres, submessage_arena);
    }
    set_has_sgxgetextendedepidgroupidres();
  } else {
    clear_has_sgxgetextendedepidgroupidres();
  }
  sgxgetextendedepidgroupidres_ = sgxgetextendedepidgroupidres;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.sgxGetExtendedEpidGroupIdRes)
}

// optional .aesm.message.Response.SGXSwitchExtendedEpidGroupResponse sgxSwitchExtendedEpidGroupRes = 13;
inline bool Response::has_sgxswitchextendedepidgroupres() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Response::set_has_sgxswitchextendedepidgroupres() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Response::clear_has_sgxswitchextendedepidgroupres() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Response::clear_sgxswitchextendedepidgroupres() {
  if (sgxswitchextendedepidgroupres_ != NULL) sgxswitchextendedepidgroupres_->Clear();
  clear_has_sgxswitchextendedepidgroupres();
}
inline const ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse& Response::_internal_sgxswitchextendedepidgroupres() const {
  return *sgxswitchextendedepidgroupres_;
}
inline const ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse& Response::sgxswitchextendedepidgroupres() const {
  const ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse* p = sgxswitchextendedepidgroupres_;
  // @@protoc_insertion_point(field_get:aesm.message.Response.sgxSwitchExtendedEpidGroupRes)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse*>(
      &::aesm::message::_Response_SGXSwitchExtendedEpidGroupResponse_default_instance_);
}
inline ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse* Response::release_sgxswitchextendedepidgroupres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.sgxSwitchExtendedEpidGroupRes)
  clear_has_sgxswitchextendedepidgroupres();
  ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse* temp = sgxswitchextendedepidgroupres_;
  sgxswitchextendedepidgroupres_ = NULL;
  return temp;
}
inline ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse* Response::mutable_sgxswitchextendedepidgroupres() {
  set_has_sgxswitchextendedepidgroupres();
  if (sgxswitchextendedepidgroupres_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse>(GetArenaNoVirtual());
    sgxswitchextendedepidgroupres_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.sgxSwitchExtendedEpidGroupRes)
  return sgxswitchextendedepidgroupres_;
}
inline void Response::set_allocated_sgxswitchextendedepidgroupres(::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse* sgxswitchextendedepidgroupres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete sgxswitchextendedepidgroupres_;
  }
  if (sgxswitchextendedepidgroupres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sgxswitchextendedepidgroupres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sgxswitchextendedepidgroupres, submessage_arena);
    }
    set_has_sgxswitchextendedepidgroupres();
  } else {
    clear_has_sgxswitchextendedepidgroupres();
  }
  sgxswitchextendedepidgroupres_ = sgxswitchextendedepidgroupres;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.sgxSwitchExtendedEpidGroupRes)
}

// optional .aesm.message.Response.SGXRegisterResponse sgxRegisterRes = 14;
inline bool Response::has_sgxregisterres() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Response::set_has_sgxregisterres() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Response::clear_has_sgxregisterres() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Response::clear_sgxregisterres() {
  if (sgxregisterres_ != NULL) sgxregisterres_->Clear();
  clear_has_sgxregisterres();
}
inline const ::aesm::message::Response_SGXRegisterResponse& Response::_internal_sgxregisterres() const {
  return *sgxregisterres_;
}
inline const ::aesm::message::Response_SGXRegisterResponse& Response::sgxregisterres() const {
  const ::aesm::message::Response_SGXRegisterResponse* p = sgxregisterres_;
  // @@protoc_insertion_point(field_get:aesm.message.Response.sgxRegisterRes)
  return p != NULL ? *p : *reinterpret_cast<const ::aesm::message::Response_SGXRegisterResponse*>(
      &::aesm::message::_Response_SGXRegisterResponse_default_instance_);
}
inline ::aesm::message::Response_SGXRegisterResponse* Response::release_sgxregisterres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.sgxRegisterRes)
  clear_has_sgxregisterres();
  ::aesm::message::Response_SGXRegisterResponse* temp = sgxregisterres_;
  sgxregisterres_ = NULL;
  return temp;
}
inline ::aesm::message::Response_SGXRegisterResponse* Response::mutable_sgxregisterres() {
  set_has_sgxregisterres();
  if (sgxregisterres_ == NULL) {
    auto* p = CreateMaybeMessage<::aesm::message::Response_SGXRegisterResponse>(GetArenaNoVirtual());
    sgxregisterres_ = p;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.sgxRegisterRes)
  return sgxregisterres_;
}
inline void Response::set_allocated_sgxregisterres(::aesm::message::Response_SGXRegisterResponse* sgxregisterres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete sgxregisterres_;
  }
  if (sgxregisterres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sgxregisterres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sgxregisterres, submessage_arena);
    }
    set_has_sgxregisterres();
  } else {
    clear_has_sgxregisterres();
  }
  sgxregisterres_ = sgxregisterres;
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.sgxRegisterRes)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace aesm

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_messages_2eproto
